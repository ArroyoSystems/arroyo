apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arroyo.fullname" . }}-controller
  labels:
    {{- include "arroyo.labels" . | nindent 4 }}
    app: {{ include "arroyo.fullname" . }}-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "arroyo.fullname" . }}-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
      {{- include "arroyo.labels" . | nindent 8 }}
        app: {{ include "arroyo.fullname" . }}-controller
      annotations:
        {{- if .Values.prometheus.setAnnotations }}
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8001"
        {{- end }}
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "arroyo.serviceAccountName" . }}
      volumes:
      {{- if .Values.volumes }}
      {{- include "tplvalues.render" (dict "value" .Values.volumes "context" $) | nindent 6 }}
      {{- end }}
      - name: arroyo-config
        configMap:
          name: {{ include "arroyo.fullname" . }}-config
      {{- if .Values.existingConfigMap }}
      - name: arroyo-user-config
        configMap:
          name: {{ .Values.existingConfigMap }}
      {{- end }}
      imagePullSecrets:
      {{- with .Values.imagePullSecrets }}
      {{- toYaml . | nindent 10 }}
      {{- end }}
      initContainers:
      - name: migrate-database
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: [ "/app/arroyo", "--config-dir", "/config", "migrate", "--wait", "300" ]
        volumeMounts:
          - name: arroyo-config
            mountPath: /root/.config/arroyo
          {{- if .Values.existingConfigMap }}
          - name: arroyo-user-config
            mountPath: /config
          {{- end }}

        env:
        {{- if .Values.postgresql.deploy }}
          - name: ARROYO__DATABASE__POSTGRES__PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "arroyo.fullname" . }}-postgresql
                key: password
          {{- end }}
      containers:
      - name: arroyo-controller
        securityContext:
        {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["/app/arroyo", "--config-dir", "/config", "cluster"]

        env:
        {{- if .Values.postgresql.deploy }}
        - name: ARROYO__DATABASE__POSTGRES__PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "arroyo.fullname" . }}-postgresql
              key: password
          {{- end }}

        - name: ARROYO__KUBERNETES_SCHEDULER__NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
              
        - name: ARROYO__KUBERNETES_SCHEDULER__CONTROLLER__NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name              
              
        - name: ARROYO__KUBERNETES_SCHEDULER__CONTROLLER__UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid

        ports:
        - containerPort: {{ .Values.controller.service.grpcPort }}
          name: grpc
        - containerPort: {{ .Values.controller.service.adminPort }}
          name: admin
        - containerPort: {{ .Values.controller.service.httpPort }}
          name: http
        livenessProbe:
          httpGet:
            path: /status
            port: admin
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: admin
          initialDelaySeconds: 5
        volumeMounts:
        {{- if .Values.volumeMounts }}
        {{- include "tplvalues.render" (dict "value" .Values.volumeMounts "context" $) | nindent 8 }}
        {{- end }}
        - name: arroyo-config
          mountPath: /root/.config/arroyo
        {{- if .Values.existingConfigMap }}
        - name: arroyo-user-config
          mountPath: /config
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arroyo.fullname" . }}
spec:
  selector:
    app: {{ include "arroyo.fullname" . }}-controller
  ports:
    - name: grpc
      protocol: TCP
      port: {{ .Values.controller.service.grpcPort }}
      targetPort: 5116
    - name: admin
      protocol: TCP
      port: {{ .Values.controller.service.adminPort }}
      targetPort: 5114
    - name: http
      protocol: TCP
      port: {{ .Values.controller.service.httpPort }}
      targetPort: 80
