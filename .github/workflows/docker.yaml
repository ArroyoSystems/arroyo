name: Docker Build

on: push

permissions: 
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        include:
          - platform: linux/amd64
            mold_arch: x86_64
            proto_arch: x86_64
            prom_arch: amd64
          - platform: linux/arm64
            mold_arch: aarch64
            proto_arch: aarch_64
            prom_arch: arm64
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v2
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: arroyo-docker-test # you'll use this in the next step
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/arroyosystems/arroyo-test-services
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/cluster/services/Dockerfile
          platforms: ${{ matrix.platform }}
          build-args: |
            MOLD_ARCH=${{ matrix.mold_arch }}
            PROTO_ARCH=${{ matrix.proto_arch }}
            PROM_ARCH=${{ matrix.prom_arch }}
#          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.arroyo-docker-test.outputs.tags }}
          labels: ${{ steps.arroyo-docker-test.outputs.labels }}

