// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file api.proto (package arroyo_api, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3, protoInt64} from "@bufbuild/protobuf";

/**
 * @generated from enum arroyo_api.BuiltinSink
 */
export enum BuiltinSink {
  /**
   * @generated from enum value: Null = 0;
   */
  Null = 0,

  /**
   * @generated from enum value: Web = 1;
   */
  Web = 1,

  /**
   * @generated from enum value: Log = 2;
   */
  Log = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(BuiltinSink)
proto3.util.setEnumType(BuiltinSink, "arroyo_api.BuiltinSink", [
  { no: 0, name: "Null" },
  { no: 1, name: "Web" },
  { no: 2, name: "Log" },
]);

/**
 * @generated from enum arroyo_api.StopType
 */
export enum StopType {
  /**
   * @generated from enum value: None = 0;
   */
  None = 0,

  /**
   * @generated from enum value: Checkpoint = 1;
   */
  Checkpoint = 1,

  /**
   * @generated from enum value: Graceful = 2;
   */
  Graceful = 2,

  /**
   * @generated from enum value: Immediate = 3;
   */
  Immediate = 3,

  /**
   * @generated from enum value: Force = 4;
   */
  Force = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(StopType)
proto3.util.setEnumType(StopType, "arroyo_api.StopType", [
  { no: 0, name: "None" },
  { no: 1, name: "Checkpoint" },
  { no: 2, name: "Graceful" },
  { no: 3, name: "Immediate" },
  { no: 4, name: "Force" },
]);

/**
 * @generated from enum arroyo_api.WasmBehavior
 */
export enum WasmBehavior {
  /**
   * @generated from enum value: MAP = 0;
   */
  MAP = 0,

  /**
   * @generated from enum value: OPT_MAP = 1;
   */
  OPT_MAP = 1,

  /**
   * @generated from enum value: FILTER = 2;
   */
  FILTER = 2,

  /**
   * @generated from enum value: TIMESTAMP = 3;
   */
  TIMESTAMP = 3,

  /**
   * @generated from enum value: KEY_BY = 4;
   */
  KEY_BY = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(WasmBehavior)
proto3.util.setEnumType(WasmBehavior, "arroyo_api.WasmBehavior", [
  { no: 0, name: "MAP" },
  { no: 1, name: "OPT_MAP" },
  { no: 2, name: "FILTER" },
  { no: 3, name: "TIMESTAMP" },
  { no: 4, name: "KEY_BY" },
]);

/**
 * @generated from enum arroyo_api.Aggregator
 */
export enum Aggregator {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: COUNT_AGGREGATE = 1;
   */
  COUNT_AGGREGATE = 1,

  /**
   * @generated from enum value: MAX_AGGREGATE = 2;
   */
  MAX_AGGREGATE = 2,

  /**
   * @generated from enum value: MIN_AGGREGATE = 3;
   */
  MIN_AGGREGATE = 3,

  /**
   * @generated from enum value: SUM_AGGREGATE = 4;
   */
  SUM_AGGREGATE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(Aggregator)
proto3.util.setEnumType(Aggregator, "arroyo_api.Aggregator", [
  { no: 0, name: "NONE" },
  { no: 1, name: "COUNT_AGGREGATE" },
  { no: 2, name: "MAX_AGGREGATE" },
  { no: 3, name: "MIN_AGGREGATE" },
  { no: 4, name: "SUM_AGGREGATE" },
]);

/**
 * @generated from enum arroyo_api.ExpressionReturnType
 */
export enum ExpressionReturnType {
  /**
   * @generated from enum value: UNUSED_ERT = 0;
   */
  UNUSED_ERT = 0,

  /**
   * @generated from enum value: PREDICATE = 1;
   */
  PREDICATE = 1,

  /**
   * @generated from enum value: RECORD = 2;
   */
  RECORD = 2,

  /**
   * @generated from enum value: OPTIONAL_RECORD = 3;
   */
  OPTIONAL_RECORD = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ExpressionReturnType)
proto3.util.setEnumType(ExpressionReturnType, "arroyo_api.ExpressionReturnType", [
  { no: 0, name: "UNUSED_ERT" },
  { no: 1, name: "PREDICATE" },
  { no: 2, name: "RECORD" },
  { no: 3, name: "OPTIONAL_RECORD" },
]);

/**
 * @generated from enum arroyo_api.OffsetMode
 */
export enum OffsetMode {
  /**
   * @generated from enum value: EARLIEST = 0;
   */
  EARLIEST = 0,

  /**
   * @generated from enum value: LATEST = 1;
   */
  LATEST = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(OffsetMode)
proto3.util.setEnumType(OffsetMode, "arroyo_api.OffsetMode", [
  { no: 0, name: "EARLIEST" },
  { no: 1, name: "LATEST" },
]);

/**
 * @generated from enum arroyo_api.EdgeType
 */
export enum EdgeType {
  /**
   * @generated from enum value: UNUSED = 0;
   */
  UNUSED = 0,

  /**
   * @generated from enum value: FORWARD = 1;
   */
  FORWARD = 1,

  /**
   * @generated from enum value: SHUFFLE = 2;
   */
  SHUFFLE = 2,

  /**
   * @generated from enum value: LEFT_JOIN = 3;
   */
  LEFT_JOIN = 3,

  /**
   * @generated from enum value: RIGHT_JOIN = 4;
   */
  RIGHT_JOIN = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(EdgeType)
proto3.util.setEnumType(EdgeType, "arroyo_api.EdgeType", [
  { no: 0, name: "UNUSED" },
  { no: 1, name: "FORWARD" },
  { no: 2, name: "SHUFFLE" },
  { no: 3, name: "LEFT_JOIN" },
  { no: 4, name: "RIGHT_JOIN" },
]);

/**
 * @generated from enum arroyo_api.TaskCheckpointEventType
 */
export enum TaskCheckpointEventType {
  /**
   * @generated from enum value: ALIGNMENT_STARTED = 0;
   */
  ALIGNMENT_STARTED = 0,

  /**
   * @generated from enum value: CHECKPOINT_STARTED = 1;
   */
  CHECKPOINT_STARTED = 1,

  /**
   * @generated from enum value: CHECKPOINT_OPERATOR_FINISHED = 2;
   */
  CHECKPOINT_OPERATOR_FINISHED = 2,

  /**
   * @generated from enum value: CHECKPOINT_SYNC_FINISHED = 3;
   */
  CHECKPOINT_SYNC_FINISHED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(TaskCheckpointEventType)
proto3.util.setEnumType(TaskCheckpointEventType, "arroyo_api.TaskCheckpointEventType", [
  { no: 0, name: "ALIGNMENT_STARTED" },
  { no: 1, name: "CHECKPOINT_STARTED" },
  { no: 2, name: "CHECKPOINT_OPERATOR_FINISHED" },
  { no: 3, name: "CHECKPOINT_SYNC_FINISHED" },
]);

/**
 * @generated from enum arroyo_api.PrimitiveType
 */
export enum PrimitiveType {
  /**
   * @generated from enum value: Int32 = 0;
   */
  Int32 = 0,

  /**
   * @generated from enum value: Int64 = 1;
   */
  Int64 = 1,

  /**
   * @generated from enum value: UInt32 = 2;
   */
  UInt32 = 2,

  /**
   * @generated from enum value: UInt64 = 3;
   */
  UInt64 = 3,

  /**
   * @generated from enum value: F32 = 4;
   */
  F32 = 4,

  /**
   * @generated from enum value: F64 = 5;
   */
  F64 = 5,

  /**
   * @generated from enum value: Bool = 6;
   */
  Bool = 6,

  /**
   * @generated from enum value: String = 7;
   */
  String = 7,

  /**
   * @generated from enum value: Bytes = 8;
   */
  Bytes = 8,

  /**
   * @generated from enum value: UnixMillis = 9;
   */
  UnixMillis = 9,
}
// Retrieve enum metadata with: proto3.getEnumType(PrimitiveType)
proto3.util.setEnumType(PrimitiveType, "arroyo_api.PrimitiveType", [
  { no: 0, name: "Int32" },
  { no: 1, name: "Int64" },
  { no: 2, name: "UInt32" },
  { no: 3, name: "UInt64" },
  { no: 4, name: "F32" },
  { no: 5, name: "F64" },
  { no: 6, name: "Bool" },
  { no: 7, name: "String" },
  { no: 8, name: "Bytes" },
  { no: 9, name: "UnixMillis" },
]);

/**
 * @generated from enum arroyo_api.KafkaOffsetMode
 */
export enum KafkaOffsetMode {
  /**
   * @generated from enum value: Earliest = 0;
   */
  Earliest = 0,

  /**
   * @generated from enum value: Latest = 1;
   */
  Latest = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(KafkaOffsetMode)
proto3.util.setEnumType(KafkaOffsetMode, "arroyo_api.KafkaOffsetMode", [
  { no: 0, name: "Earliest" },
  { no: 1, name: "Latest" },
]);

/**
 * @generated from message arroyo_api.CreateSqlJob
 */
export class CreateSqlJob extends Message<CreateSqlJob> {
  /**
   * @generated from field: string query = 1;
   */
  query = "";

  /**
   * @generated from field: uint64 parallelism = 2;
   */
  parallelism = protoInt64.zero;

  /**
   * @generated from oneof arroyo_api.CreateSqlJob.sink
   */
  sink: {
    /**
     * @generated from field: arroyo_api.BuiltinSink builtin = 3;
     */
    value: BuiltinSink;
    case: "builtin";
  } | {
    /**
     * @generated from field: string user = 4;
     */
    value: string;
    case: "user";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateSqlJob>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateSqlJob";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "parallelism", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "builtin", kind: "enum", T: proto3.getEnumType(BuiltinSink), oneof: "sink" },
    { no: 4, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "sink" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSqlJob {
    return new CreateSqlJob().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSqlJob {
    return new CreateSqlJob().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSqlJob {
    return new CreateSqlJob().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSqlJob | PlainMessage<CreateSqlJob> | undefined, b: CreateSqlJob | PlainMessage<CreateSqlJob> | undefined): boolean {
    return proto3.util.equals(CreateSqlJob, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreatePipelineReq
 */
export class CreatePipelineReq extends Message<CreatePipelineReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from oneof arroyo_api.CreatePipelineReq.config
   */
  config: {
    /**
     * @generated from field: bytes program = 2;
     */
    value: Uint8Array;
    case: "program";
  } | {
    /**
     * @generated from field: arroyo_api.CreateSqlJob sql = 3;
     */
    value: CreateSqlJob;
    case: "sql";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreatePipelineReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreatePipelineReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "program", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "config" },
    { no: 3, name: "sql", kind: "message", T: CreateSqlJob, oneof: "config" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePipelineReq {
    return new CreatePipelineReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePipelineReq {
    return new CreatePipelineReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePipelineReq {
    return new CreatePipelineReq().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePipelineReq | PlainMessage<CreatePipelineReq> | undefined, b: CreatePipelineReq | PlainMessage<CreatePipelineReq> | undefined): boolean {
    return proto3.util.equals(CreatePipelineReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreatePipelineResp
 */
export class CreatePipelineResp extends Message<CreatePipelineResp> {
  /**
   * @generated from field: string pipeline_id = 1;
   */
  pipelineId = "";

  constructor(data?: PartialMessage<CreatePipelineResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreatePipelineResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pipeline_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePipelineResp {
    return new CreatePipelineResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePipelineResp {
    return new CreatePipelineResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePipelineResp {
    return new CreatePipelineResp().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePipelineResp | PlainMessage<CreatePipelineResp> | undefined, b: CreatePipelineResp | PlainMessage<CreatePipelineResp> | undefined): boolean {
    return proto3.util.equals(CreatePipelineResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.SqlError
 */
export class SqlError extends Message<SqlError> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<SqlError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SqlError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SqlError {
    return new SqlError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SqlError {
    return new SqlError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SqlError {
    return new SqlError().fromJsonString(jsonString, options);
  }

  static equals(a: SqlError | PlainMessage<SqlError> | undefined, b: SqlError | PlainMessage<SqlError> | undefined): boolean {
    return proto3.util.equals(SqlError, a, b);
  }
}

/**
 * @generated from message arroyo_api.SqlErrors
 */
export class SqlErrors extends Message<SqlErrors> {
  /**
   * @generated from field: repeated arroyo_api.SqlError errors = 1;
   */
  errors: SqlError[] = [];

  constructor(data?: PartialMessage<SqlErrors>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SqlErrors";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "errors", kind: "message", T: SqlError, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SqlErrors {
    return new SqlErrors().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SqlErrors {
    return new SqlErrors().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SqlErrors {
    return new SqlErrors().fromJsonString(jsonString, options);
  }

  static equals(a: SqlErrors | PlainMessage<SqlErrors> | undefined, b: SqlErrors | PlainMessage<SqlErrors> | undefined): boolean {
    return proto3.util.equals(SqlErrors, a, b);
  }
}

/**
 * @generated from message arroyo_api.PipelineGraphReq
 */
export class PipelineGraphReq extends Message<PipelineGraphReq> {
  /**
   * @generated from field: string query = 1;
   */
  query = "";

  constructor(data?: PartialMessage<PipelineGraphReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.PipelineGraphReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PipelineGraphReq {
    return new PipelineGraphReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PipelineGraphReq {
    return new PipelineGraphReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PipelineGraphReq {
    return new PipelineGraphReq().fromJsonString(jsonString, options);
  }

  static equals(a: PipelineGraphReq | PlainMessage<PipelineGraphReq> | undefined, b: PipelineGraphReq | PlainMessage<PipelineGraphReq> | undefined): boolean {
    return proto3.util.equals(PipelineGraphReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.PipelineGraphResp
 */
export class PipelineGraphResp extends Message<PipelineGraphResp> {
  /**
   * @generated from oneof arroyo_api.PipelineGraphResp.result
   */
  result: {
    /**
     * @generated from field: arroyo_api.JobGraph job_graph = 1;
     */
    value: JobGraph;
    case: "jobGraph";
  } | {
    /**
     * @generated from field: arroyo_api.SqlErrors errors = 2;
     */
    value: SqlErrors;
    case: "errors";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PipelineGraphResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.PipelineGraphResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_graph", kind: "message", T: JobGraph, oneof: "result" },
    { no: 2, name: "errors", kind: "message", T: SqlErrors, oneof: "result" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PipelineGraphResp {
    return new PipelineGraphResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PipelineGraphResp {
    return new PipelineGraphResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PipelineGraphResp {
    return new PipelineGraphResp().fromJsonString(jsonString, options);
  }

  static equals(a: PipelineGraphResp | PlainMessage<PipelineGraphResp> | undefined, b: PipelineGraphResp | PlainMessage<PipelineGraphResp> | undefined): boolean {
    return proto3.util.equals(PipelineGraphResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetPipelineReq
 */
export class GetPipelineReq extends Message<GetPipelineReq> {
  /**
   * @generated from field: string pipeline_id = 1;
   */
  pipelineId = "";

  constructor(data?: PartialMessage<GetPipelineReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetPipelineReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pipeline_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPipelineReq {
    return new GetPipelineReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPipelineReq {
    return new GetPipelineReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPipelineReq {
    return new GetPipelineReq().fromJsonString(jsonString, options);
  }

  static equals(a: GetPipelineReq | PlainMessage<GetPipelineReq> | undefined, b: GetPipelineReq | PlainMessage<GetPipelineReq> | undefined): boolean {
    return proto3.util.equals(GetPipelineReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.PipelineDef
 */
export class PipelineDef extends Message<PipelineDef> {
  /**
   * @generated from field: string pipeline_id = 1;
   */
  pipelineId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string type = 3;
   */
  type = "";

  /**
   * @generated from field: optional string definition = 4;
   */
  definition?: string;

  /**
   * @generated from field: arroyo_api.JobGraph job_graph = 5;
   */
  jobGraph?: JobGraph;

  constructor(data?: PartialMessage<PipelineDef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.PipelineDef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pipeline_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "definition", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "job_graph", kind: "message", T: JobGraph },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PipelineDef {
    return new PipelineDef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PipelineDef {
    return new PipelineDef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PipelineDef {
    return new PipelineDef().fromJsonString(jsonString, options);
  }

  static equals(a: PipelineDef | PlainMessage<PipelineDef> | undefined, b: PipelineDef | PlainMessage<PipelineDef> | undefined): boolean {
    return proto3.util.equals(PipelineDef, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateJobReq
 */
export class CreateJobReq extends Message<CreateJobReq> {
  /**
   * @generated from field: string pipeline_id = 1;
   */
  pipelineId = "";

  /**
   * @generated from field: uint64 checkpoint_interval_micros = 2;
   */
  checkpointIntervalMicros = protoInt64.zero;

  /**
   * @generated from field: bool preview = 3;
   */
  preview = false;

  constructor(data?: PartialMessage<CreateJobReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateJobReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pipeline_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "checkpoint_interval_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "preview", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobReq {
    return new CreateJobReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobReq {
    return new CreateJobReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobReq {
    return new CreateJobReq().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobReq | PlainMessage<CreateJobReq> | undefined, b: CreateJobReq | PlainMessage<CreateJobReq> | undefined): boolean {
    return proto3.util.equals(CreateJobReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateJobResp
 */
export class CreateJobResp extends Message<CreateJobResp> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<CreateJobResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateJobResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateJobResp {
    return new CreateJobResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateJobResp {
    return new CreateJobResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateJobResp {
    return new CreateJobResp().fromJsonString(jsonString, options);
  }

  static equals(a: CreateJobResp | PlainMessage<CreateJobResp> | undefined, b: CreateJobResp | PlainMessage<CreateJobResp> | undefined): boolean {
    return proto3.util.equals(CreateJobResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteJobReq
 */
export class DeleteJobReq extends Message<DeleteJobReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<DeleteJobReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteJobReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobReq {
    return new DeleteJobReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobReq {
    return new DeleteJobReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobReq {
    return new DeleteJobReq().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobReq | PlainMessage<DeleteJobReq> | undefined, b: DeleteJobReq | PlainMessage<DeleteJobReq> | undefined): boolean {
    return proto3.util.equals(DeleteJobReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteJobResp
 */
export class DeleteJobResp extends Message<DeleteJobResp> {
  constructor(data?: PartialMessage<DeleteJobResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteJobResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteJobResp {
    return new DeleteJobResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteJobResp {
    return new DeleteJobResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteJobResp {
    return new DeleteJobResp().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteJobResp | PlainMessage<DeleteJobResp> | undefined, b: DeleteJobResp | PlainMessage<DeleteJobResp> | undefined): boolean {
    return proto3.util.equals(DeleteJobResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.UpdateJobReq
 */
export class UpdateJobReq extends Message<UpdateJobReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  /**
   * @generated from field: optional uint64 checkpoint_interval_micros = 2;
   */
  checkpointIntervalMicros?: bigint;

  /**
   * @generated from field: optional arroyo_api.StopType stop = 3;
   */
  stop?: StopType;

  /**
   * @generated from field: optional uint32 parallelism = 4;
   */
  parallelism?: number;

  constructor(data?: PartialMessage<UpdateJobReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.UpdateJobReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "checkpoint_interval_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "stop", kind: "enum", T: proto3.getEnumType(StopType), opt: true },
    { no: 4, name: "parallelism", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobReq {
    return new UpdateJobReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobReq {
    return new UpdateJobReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobReq {
    return new UpdateJobReq().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobReq | PlainMessage<UpdateJobReq> | undefined, b: UpdateJobReq | PlainMessage<UpdateJobReq> | undefined): boolean {
    return proto3.util.equals(UpdateJobReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.UpdateJobResp
 */
export class UpdateJobResp extends Message<UpdateJobResp> {
  constructor(data?: PartialMessage<UpdateJobResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.UpdateJobResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateJobResp {
    return new UpdateJobResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateJobResp {
    return new UpdateJobResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateJobResp {
    return new UpdateJobResp().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateJobResp | PlainMessage<UpdateJobResp> | undefined, b: UpdateJobResp | PlainMessage<UpdateJobResp> | undefined): boolean {
    return proto3.util.equals(UpdateJobResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.PipelineProgram
 */
export class PipelineProgram extends Message<PipelineProgram> {
  /**
   * @generated from field: repeated string types = 1;
   */
  types: string[] = [];

  /**
   * @generated from field: repeated string other_defs = 2;
   */
  otherDefs: string[] = [];

  /**
   * @generated from field: repeated arroyo_api.ProgramNode nodes = 3;
   */
  nodes: ProgramNode[] = [];

  /**
   * @generated from field: repeated arroyo_api.ProgramEdge edges = 4;
   */
  edges: ProgramEdge[] = [];

  constructor(data?: PartialMessage<PipelineProgram>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.PipelineProgram";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "types", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "other_defs", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "nodes", kind: "message", T: ProgramNode, repeated: true },
    { no: 4, name: "edges", kind: "message", T: ProgramEdge, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PipelineProgram {
    return new PipelineProgram().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PipelineProgram {
    return new PipelineProgram().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PipelineProgram {
    return new PipelineProgram().fromJsonString(jsonString, options);
  }

  static equals(a: PipelineProgram | PlainMessage<PipelineProgram> | undefined, b: PipelineProgram | PlainMessage<PipelineProgram> | undefined): boolean {
    return proto3.util.equals(PipelineProgram, a, b);
  }
}

/**
 * @generated from message arroyo_api.ProgramNode
 */
export class ProgramNode extends Message<ProgramNode> {
  /**
   * @generated from field: int32 node_index = 1;
   */
  nodeIndex = 0;

  /**
   * @generated from field: string node_id = 2;
   */
  nodeId = "";

  /**
   * @generated from field: int32 parallelism = 3;
   */
  parallelism = 0;

  /**
   * @generated from field: arroyo_api.Operator operator = 4;
   */
  operator?: Operator;

  constructor(data?: PartialMessage<ProgramNode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ProgramNode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "node_index", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "node_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "parallelism", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "operator", kind: "message", T: Operator },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProgramNode {
    return new ProgramNode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProgramNode {
    return new ProgramNode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProgramNode {
    return new ProgramNode().fromJsonString(jsonString, options);
  }

  static equals(a: ProgramNode | PlainMessage<ProgramNode> | undefined, b: ProgramNode | PlainMessage<ProgramNode> | undefined): boolean {
    return proto3.util.equals(ProgramNode, a, b);
  }
}

/**
 * @generated from message arroyo_api.ProgramEdge
 */
export class ProgramEdge extends Message<ProgramEdge> {
  /**
   * @generated from field: int32 upstream_node = 1;
   */
  upstreamNode = 0;

  /**
   * @generated from field: int32 downstream_node = 2;
   */
  downstreamNode = 0;

  /**
   * @generated from field: string key_type = 3;
   */
  keyType = "";

  /**
   * @generated from field: string value_type = 4;
   */
  valueType = "";

  /**
   * @generated from field: arroyo_api.EdgeType edge_type = 5;
   */
  edgeType = EdgeType.UNUSED;

  constructor(data?: PartialMessage<ProgramEdge>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ProgramEdge";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "upstream_node", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "downstream_node", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "key_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "value_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "edge_type", kind: "enum", T: proto3.getEnumType(EdgeType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProgramEdge {
    return new ProgramEdge().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProgramEdge {
    return new ProgramEdge().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProgramEdge {
    return new ProgramEdge().fromJsonString(jsonString, options);
  }

  static equals(a: ProgramEdge | PlainMessage<ProgramEdge> | undefined, b: ProgramEdge | PlainMessage<ProgramEdge> | undefined): boolean {
    return proto3.util.equals(ProgramEdge, a, b);
  }
}

/**
 * @generated from message arroyo_api.Operator
 */
export class Operator extends Message<Operator> {
  /**
   * @generated from oneof arroyo_api.Operator.operator
   */
  operator: {
    /**
     * @generated from field: arroyo_api.FileSource file_source = 1;
     */
    value: FileSource;
    case: "fileSource";
  } | {
    /**
     * @generated from field: arroyo_api.ImpulseSource impulse_source = 2;
     */
    value: ImpulseSource;
    case: "impulseSource";
  } | {
    /**
     * @generated from field: arroyo_api.KafkaSource kafka_source = 3;
     */
    value: KafkaSource;
    case: "kafkaSource";
  } | {
    /**
     * @generated from field: arroyo_api.WasmUdfs wasm_udfs = 4;
     */
    value: WasmUdfs;
    case: "wasmUdfs";
  } | {
    /**
     * @generated from field: arroyo_api.WindowOperator window = 5;
     */
    value: WindowOperator;
    case: "window";
  } | {
    /**
     * @generated from field: arroyo_api.Aggregator aggregator = 6;
     */
    value: Aggregator;
    case: "aggregator";
  } | {
    /**
     * @generated from field: arroyo_api.PeriodicWatermark periodic_watermark = 7;
     */
    value: PeriodicWatermark;
    case: "periodicWatermark";
  } | {
    /**
     * @generated from field: arroyo_api.BuiltinSink builtin_sink = 8;
     */
    value: BuiltinSink;
    case: "builtinSink";
  } | {
    /**
     * @generated from field: arroyo_api.FileSink file_sink = 9;
     */
    value: FileSink;
    case: "fileSink";
  } | {
    /**
     * @generated from field: arroyo_api.Window window_join = 10;
     */
    value: Window;
    case: "windowJoin";
  } | {
    /**
     * @generated from field: arroyo_api.KafkaSink kafka_sink = 11;
     */
    value: KafkaSink;
    case: "kafkaSink";
  } | {
    /**
     * @generated from field: arroyo_api.NexmarkSource nexmark_source = 12;
     */
    value: NexmarkSource;
    case: "nexmarkSource";
  } | {
    /**
     * @generated from field: arroyo_api.ExpressionOperator expression_operator = 13;
     */
    value: ExpressionOperator;
    case: "expressionOperator";
  } | {
    /**
     * @generated from field: arroyo_api.Flatten flatten = 14;
     */
    value: Flatten;
    case: "flatten";
  } | {
    /**
     * @generated from field: arroyo_api.FlattenExpressionOperator flatten_expression_operator = 15;
     */
    value: FlattenExpressionOperator;
    case: "flattenExpressionOperator";
  } | {
    /**
     * @generated from field: arroyo_api.SlidingWindowAggregator sliding_window_aggregator = 17;
     */
    value: SlidingWindowAggregator;
    case: "slidingWindowAggregator";
  } | {
    /**
     * @generated from field: arroyo_api.TumblingWindowAggregator tumbling_window_aggregator = 18;
     */
    value: TumblingWindowAggregator;
    case: "tumblingWindowAggregator";
  } | {
    /**
     * @generated from field: arroyo_api.TumblingTopN tumbling_top_n = 19;
     */
    value: TumblingTopN;
    case: "tumblingTopN";
  } | {
    /**
     * @generated from field: arroyo_api.SlidingAggregatingTopN sliding_aggregating_top_n = 20;
     */
    value: SlidingAggregatingTopN;
    case: "slidingAggregatingTopN";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Operator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.Operator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_source", kind: "message", T: FileSource, oneof: "operator" },
    { no: 2, name: "impulse_source", kind: "message", T: ImpulseSource, oneof: "operator" },
    { no: 3, name: "kafka_source", kind: "message", T: KafkaSource, oneof: "operator" },
    { no: 4, name: "wasm_udfs", kind: "message", T: WasmUdfs, oneof: "operator" },
    { no: 5, name: "window", kind: "message", T: WindowOperator, oneof: "operator" },
    { no: 6, name: "aggregator", kind: "enum", T: proto3.getEnumType(Aggregator), oneof: "operator" },
    { no: 7, name: "periodic_watermark", kind: "message", T: PeriodicWatermark, oneof: "operator" },
    { no: 8, name: "builtin_sink", kind: "enum", T: proto3.getEnumType(BuiltinSink), oneof: "operator" },
    { no: 9, name: "file_sink", kind: "message", T: FileSink, oneof: "operator" },
    { no: 10, name: "window_join", kind: "message", T: Window, oneof: "operator" },
    { no: 11, name: "kafka_sink", kind: "message", T: KafkaSink, oneof: "operator" },
    { no: 12, name: "nexmark_source", kind: "message", T: NexmarkSource, oneof: "operator" },
    { no: 13, name: "expression_operator", kind: "message", T: ExpressionOperator, oneof: "operator" },
    { no: 14, name: "flatten", kind: "message", T: Flatten, oneof: "operator" },
    { no: 15, name: "flatten_expression_operator", kind: "message", T: FlattenExpressionOperator, oneof: "operator" },
    { no: 17, name: "sliding_window_aggregator", kind: "message", T: SlidingWindowAggregator, oneof: "operator" },
    { no: 18, name: "tumbling_window_aggregator", kind: "message", T: TumblingWindowAggregator, oneof: "operator" },
    { no: 19, name: "tumbling_top_n", kind: "message", T: TumblingTopN, oneof: "operator" },
    { no: 20, name: "sliding_aggregating_top_n", kind: "message", T: SlidingAggregatingTopN, oneof: "operator" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Operator {
    return new Operator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Operator {
    return new Operator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Operator {
    return new Operator().fromJsonString(jsonString, options);
  }

  static equals(a: Operator | PlainMessage<Operator> | undefined, b: Operator | PlainMessage<Operator> | undefined): boolean {
    return proto3.util.equals(Operator, a, b);
  }
}

/**
 * @generated from message arroyo_api.FileSource
 */
export class FileSource extends Message<FileSource> {
  /**
   * @generated from field: string dir = 1;
   */
  dir = "";

  /**
   * @generated from field: uint64 micros_delay = 2;
   */
  microsDelay = protoInt64.zero;

  constructor(data?: PartialMessage<FileSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.FileSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dir", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "micros_delay", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSource {
    return new FileSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSource {
    return new FileSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSource {
    return new FileSource().fromJsonString(jsonString, options);
  }

  static equals(a: FileSource | PlainMessage<FileSource> | undefined, b: FileSource | PlainMessage<FileSource> | undefined): boolean {
    return proto3.util.equals(FileSource, a, b);
  }
}

/**
 * @generated from message arroyo_api.ImpulseSource
 */
export class ImpulseSource extends Message<ImpulseSource> {
  /**
   * @generated from field: uint64 micros_start = 1;
   */
  microsStart = protoInt64.zero;

  /**
   * @generated from field: optional uint64 total_events = 2;
   */
  totalEvents?: bigint;

  /**
   * @generated from oneof arroyo_api.ImpulseSource.spec
   */
  spec: {
    /**
     * @generated from field: uint64 micros_delay = 3;
     */
    value: bigint;
    case: "microsDelay";
  } | {
    /**
     * @generated from field: float event_qps = 4;
     */
    value: number;
    case: "eventQps";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<ImpulseSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ImpulseSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "micros_start", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "total_events", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "micros_delay", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "spec" },
    { no: 4, name: "event_qps", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "spec" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImpulseSource {
    return new ImpulseSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImpulseSource {
    return new ImpulseSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImpulseSource {
    return new ImpulseSource().fromJsonString(jsonString, options);
  }

  static equals(a: ImpulseSource | PlainMessage<ImpulseSource> | undefined, b: ImpulseSource | PlainMessage<ImpulseSource> | undefined): boolean {
    return proto3.util.equals(ImpulseSource, a, b);
  }
}

/**
 * @generated from message arroyo_api.KafkaSource
 */
export class KafkaSource extends Message<KafkaSource> {
  /**
   * @generated from field: string topic = 1;
   */
  topic = "";

  /**
   * @generated from field: repeated string bootstrap_servers = 2;
   */
  bootstrapServers: string[] = [];

  /**
   * @generated from field: arroyo_api.OffsetMode offset_mode = 3;
   */
  offsetMode = OffsetMode.EARLIEST;

  /**
   * @generated from field: bool schema_registry = 4;
   */
  schemaRegistry = false;

  /**
   * @generated from field: uint32 messages_per_second = 5;
   */
  messagesPerSecond = 0;

  /**
   * @generated from field: map<string, string> client_configs = 6;
   */
  clientConfigs: { [key: string]: string } = {};

  constructor(data?: PartialMessage<KafkaSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bootstrap_servers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "offset_mode", kind: "enum", T: proto3.getEnumType(OffsetMode) },
    { no: 4, name: "schema_registry", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "messages_per_second", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "client_configs", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaSource {
    return new KafkaSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaSource {
    return new KafkaSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaSource {
    return new KafkaSource().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaSource | PlainMessage<KafkaSource> | undefined, b: KafkaSource | PlainMessage<KafkaSource> | undefined): boolean {
    return proto3.util.equals(KafkaSource, a, b);
  }
}

/**
 * @generated from message arroyo_api.WasmUdfs
 */
export class WasmUdfs extends Message<WasmUdfs> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: repeated arroyo_api.WasmFunction wasm_functions = 2;
   */
  wasmFunctions: WasmFunction[] = [];

  constructor(data?: PartialMessage<WasmUdfs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.WasmUdfs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "wasm_functions", kind: "message", T: WasmFunction, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WasmUdfs {
    return new WasmUdfs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WasmUdfs {
    return new WasmUdfs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WasmUdfs {
    return new WasmUdfs().fromJsonString(jsonString, options);
  }

  static equals(a: WasmUdfs | PlainMessage<WasmUdfs> | undefined, b: WasmUdfs | PlainMessage<WasmUdfs> | undefined): boolean {
    return proto3.util.equals(WasmUdfs, a, b);
  }
}

/**
 * @generated from message arroyo_api.WasmFunction
 */
export class WasmFunction extends Message<WasmFunction> {
  /**
   * @generated from field: arroyo_api.WasmBehavior behavior = 1;
   */
  behavior = WasmBehavior.MAP;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string key_arg = 3;
   */
  keyArg = "";

  /**
   * @generated from field: string key_arg_type = 4;
   */
  keyArgType = "";

  /**
   * @generated from field: string value_arg = 5;
   */
  valueArg = "";

  /**
   * @generated from field: string value_arg_type = 6;
   */
  valueArgType = "";

  /**
   * @generated from field: string return_type = 7;
   */
  returnType = "";

  /**
   * @generated from field: string body = 8;
   */
  body = "";

  constructor(data?: PartialMessage<WasmFunction>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.WasmFunction";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "behavior", kind: "enum", T: proto3.getEnumType(WasmBehavior) },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "key_arg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "key_arg_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "value_arg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "value_arg_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "return_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WasmFunction {
    return new WasmFunction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WasmFunction {
    return new WasmFunction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WasmFunction {
    return new WasmFunction().fromJsonString(jsonString, options);
  }

  static equals(a: WasmFunction | PlainMessage<WasmFunction> | undefined, b: WasmFunction | PlainMessage<WasmFunction> | undefined): boolean {
    return proto3.util.equals(WasmFunction, a, b);
  }
}

/**
 * @generated from message arroyo_api.WindowOperator
 */
export class WindowOperator extends Message<WindowOperator> {
  /**
   * @generated from field: optional arroyo_api.Aggregator aggregator = 1;
   */
  aggregator?: Aggregator;

  /**
   * @generated from field: optional arroyo_api.ExpressionAggregator expression_aggregator = 3;
   */
  expressionAggregator?: ExpressionAggregator;

  /**
   * @generated from field: bool flatten = 4;
   */
  flatten = false;

  /**
   * @generated from field: arroyo_api.Window window = 2;
   */
  window?: Window;

  constructor(data?: PartialMessage<WindowOperator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.WindowOperator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "aggregator", kind: "enum", T: proto3.getEnumType(Aggregator), opt: true },
    { no: 3, name: "expression_aggregator", kind: "message", T: ExpressionAggregator, opt: true },
    { no: 4, name: "flatten", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "window", kind: "message", T: Window },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WindowOperator {
    return new WindowOperator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WindowOperator {
    return new WindowOperator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WindowOperator {
    return new WindowOperator().fromJsonString(jsonString, options);
  }

  static equals(a: WindowOperator | PlainMessage<WindowOperator> | undefined, b: WindowOperator | PlainMessage<WindowOperator> | undefined): boolean {
    return proto3.util.equals(WindowOperator, a, b);
  }
}

/**
 * @generated from message arroyo_api.Window
 */
export class Window extends Message<Window> {
  /**
   * @generated from oneof arroyo_api.Window.window
   */
  window: {
    /**
     * @generated from field: arroyo_api.SlidingWindow sliding_window = 2;
     */
    value: SlidingWindow;
    case: "slidingWindow";
  } | {
    /**
     * @generated from field: arroyo_api.TumblingWindow tumbling_window = 3;
     */
    value: TumblingWindow;
    case: "tumblingWindow";
  } | {
    /**
     * @generated from field: arroyo_api.InstantWindow instant_window = 4;
     */
    value: InstantWindow;
    case: "instantWindow";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<Window>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.Window";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "sliding_window", kind: "message", T: SlidingWindow, oneof: "window" },
    { no: 3, name: "tumbling_window", kind: "message", T: TumblingWindow, oneof: "window" },
    { no: 4, name: "instant_window", kind: "message", T: InstantWindow, oneof: "window" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Window {
    return new Window().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Window {
    return new Window().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Window {
    return new Window().fromJsonString(jsonString, options);
  }

  static equals(a: Window | PlainMessage<Window> | undefined, b: Window | PlainMessage<Window> | undefined): boolean {
    return proto3.util.equals(Window, a, b);
  }
}

/**
 * @generated from message arroyo_api.SlidingWindow
 */
export class SlidingWindow extends Message<SlidingWindow> {
  /**
   * @generated from field: uint64 size_micros = 1;
   */
  sizeMicros = protoInt64.zero;

  /**
   * @generated from field: uint64 slide_micros = 2;
   */
  slideMicros = protoInt64.zero;

  constructor(data?: PartialMessage<SlidingWindow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SlidingWindow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "size_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "slide_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlidingWindow {
    return new SlidingWindow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlidingWindow {
    return new SlidingWindow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlidingWindow {
    return new SlidingWindow().fromJsonString(jsonString, options);
  }

  static equals(a: SlidingWindow | PlainMessage<SlidingWindow> | undefined, b: SlidingWindow | PlainMessage<SlidingWindow> | undefined): boolean {
    return proto3.util.equals(SlidingWindow, a, b);
  }
}

/**
 * @generated from message arroyo_api.TumblingWindow
 */
export class TumblingWindow extends Message<TumblingWindow> {
  /**
   * @generated from field: uint64 size_micros = 1;
   */
  sizeMicros = protoInt64.zero;

  constructor(data?: PartialMessage<TumblingWindow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TumblingWindow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "size_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TumblingWindow {
    return new TumblingWindow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TumblingWindow {
    return new TumblingWindow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TumblingWindow {
    return new TumblingWindow().fromJsonString(jsonString, options);
  }

  static equals(a: TumblingWindow | PlainMessage<TumblingWindow> | undefined, b: TumblingWindow | PlainMessage<TumblingWindow> | undefined): boolean {
    return proto3.util.equals(TumblingWindow, a, b);
  }
}

/**
 * @generated from message arroyo_api.InstantWindow
 */
export class InstantWindow extends Message<InstantWindow> {
  constructor(data?: PartialMessage<InstantWindow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.InstantWindow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InstantWindow {
    return new InstantWindow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InstantWindow {
    return new InstantWindow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InstantWindow {
    return new InstantWindow().fromJsonString(jsonString, options);
  }

  static equals(a: InstantWindow | PlainMessage<InstantWindow> | undefined, b: InstantWindow | PlainMessage<InstantWindow> | undefined): boolean {
    return proto3.util.equals(InstantWindow, a, b);
  }
}

/**
 * @generated from message arroyo_api.ExpressionAggregator
 */
export class ExpressionAggregator extends Message<ExpressionAggregator> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string expression = 2;
   */
  expression = "";

  constructor(data?: PartialMessage<ExpressionAggregator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ExpressionAggregator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpressionAggregator {
    return new ExpressionAggregator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpressionAggregator {
    return new ExpressionAggregator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpressionAggregator {
    return new ExpressionAggregator().fromJsonString(jsonString, options);
  }

  static equals(a: ExpressionAggregator | PlainMessage<ExpressionAggregator> | undefined, b: ExpressionAggregator | PlainMessage<ExpressionAggregator> | undefined): boolean {
    return proto3.util.equals(ExpressionAggregator, a, b);
  }
}

/**
 * @generated from message arroyo_api.PeriodicWatermark
 */
export class PeriodicWatermark extends Message<PeriodicWatermark> {
  /**
   * @generated from field: uint64 period_micros = 1;
   */
  periodMicros = protoInt64.zero;

  /**
   * @generated from field: uint64 max_lateness_micros = 2;
   */
  maxLatenessMicros = protoInt64.zero;

  constructor(data?: PartialMessage<PeriodicWatermark>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.PeriodicWatermark";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "period_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "max_lateness_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PeriodicWatermark {
    return new PeriodicWatermark().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PeriodicWatermark {
    return new PeriodicWatermark().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PeriodicWatermark {
    return new PeriodicWatermark().fromJsonString(jsonString, options);
  }

  static equals(a: PeriodicWatermark | PlainMessage<PeriodicWatermark> | undefined, b: PeriodicWatermark | PlainMessage<PeriodicWatermark> | undefined): boolean {
    return proto3.util.equals(PeriodicWatermark, a, b);
  }
}

/**
 * @generated from message arroyo_api.KafkaSink
 */
export class KafkaSink extends Message<KafkaSink> {
  /**
   * @generated from field: string topic = 1;
   */
  topic = "";

  /**
   * @generated from field: repeated string bootstrap_servers = 2;
   */
  bootstrapServers: string[] = [];

  /**
   * @generated from field: map<string, string> client_configs = 3;
   */
  clientConfigs: { [key: string]: string } = {};

  constructor(data?: PartialMessage<KafkaSink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaSink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bootstrap_servers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "client_configs", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaSink {
    return new KafkaSink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaSink {
    return new KafkaSink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaSink {
    return new KafkaSink().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaSink | PlainMessage<KafkaSink> | undefined, b: KafkaSink | PlainMessage<KafkaSink> | undefined): boolean {
    return proto3.util.equals(KafkaSink, a, b);
  }
}

/**
 * @generated from message arroyo_api.FileSink
 */
export class FileSink extends Message<FileSink> {
  /**
   * @generated from field: string file_path = 1;
   */
  filePath = "";

  constructor(data?: PartialMessage<FileSink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.FileSink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "file_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSink {
    return new FileSink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSink {
    return new FileSink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSink {
    return new FileSink().fromJsonString(jsonString, options);
  }

  static equals(a: FileSink | PlainMessage<FileSink> | undefined, b: FileSink | PlainMessage<FileSink> | undefined): boolean {
    return proto3.util.equals(FileSink, a, b);
  }
}

/**
 * @generated from message arroyo_api.NexmarkSource
 */
export class NexmarkSource extends Message<NexmarkSource> {
  /**
   * @generated from field: uint64 first_event_rate = 1;
   */
  firstEventRate = protoInt64.zero;

  /**
   * @generated from field: optional uint64 total_events = 2;
   */
  totalEvents?: bigint;

  constructor(data?: PartialMessage<NexmarkSource>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.NexmarkSource";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_event_rate", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "total_events", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NexmarkSource {
    return new NexmarkSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NexmarkSource {
    return new NexmarkSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NexmarkSource {
    return new NexmarkSource().fromJsonString(jsonString, options);
  }

  static equals(a: NexmarkSource | PlainMessage<NexmarkSource> | undefined, b: NexmarkSource | PlainMessage<NexmarkSource> | undefined): boolean {
    return proto3.util.equals(NexmarkSource, a, b);
  }
}

/**
 * @generated from message arroyo_api.ExpressionOperator
 */
export class ExpressionOperator extends Message<ExpressionOperator> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string expression = 2;
   */
  expression = "";

  /**
   * @generated from field: arroyo_api.ExpressionReturnType return_type = 3;
   */
  returnType = ExpressionReturnType.UNUSED_ERT;

  constructor(data?: PartialMessage<ExpressionOperator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ExpressionOperator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "return_type", kind: "enum", T: proto3.getEnumType(ExpressionReturnType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpressionOperator {
    return new ExpressionOperator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpressionOperator {
    return new ExpressionOperator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpressionOperator {
    return new ExpressionOperator().fromJsonString(jsonString, options);
  }

  static equals(a: ExpressionOperator | PlainMessage<ExpressionOperator> | undefined, b: ExpressionOperator | PlainMessage<ExpressionOperator> | undefined): boolean {
    return proto3.util.equals(ExpressionOperator, a, b);
  }
}

/**
 * @generated from message arroyo_api.Flatten
 */
export class Flatten extends Message<Flatten> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<Flatten>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.Flatten";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Flatten {
    return new Flatten().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Flatten {
    return new Flatten().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Flatten {
    return new Flatten().fromJsonString(jsonString, options);
  }

  static equals(a: Flatten | PlainMessage<Flatten> | undefined, b: Flatten | PlainMessage<Flatten> | undefined): boolean {
    return proto3.util.equals(Flatten, a, b);
  }
}

/**
 * @generated from message arroyo_api.FlattenExpressionOperator
 */
export class FlattenExpressionOperator extends Message<FlattenExpressionOperator> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string expression = 2;
   */
  expression = "";

  /**
   * @generated from field: arroyo_api.ExpressionReturnType return_type = 3;
   */
  returnType = ExpressionReturnType.UNUSED_ERT;

  constructor(data?: PartialMessage<FlattenExpressionOperator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.FlattenExpressionOperator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "return_type", kind: "enum", T: proto3.getEnumType(ExpressionReturnType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlattenExpressionOperator {
    return new FlattenExpressionOperator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlattenExpressionOperator {
    return new FlattenExpressionOperator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlattenExpressionOperator {
    return new FlattenExpressionOperator().fromJsonString(jsonString, options);
  }

  static equals(a: FlattenExpressionOperator | PlainMessage<FlattenExpressionOperator> | undefined, b: FlattenExpressionOperator | PlainMessage<FlattenExpressionOperator> | undefined): boolean {
    return proto3.util.equals(FlattenExpressionOperator, a, b);
  }
}

/**
 * @generated from message arroyo_api.SlidingWindowAggregator
 */
export class SlidingWindowAggregator extends Message<SlidingWindowAggregator> {
  /**
   * @generated from field: uint64 width_micros = 1;
   */
  widthMicros = protoInt64.zero;

  /**
   * @generated from field: uint64 slide_micros = 2;
   */
  slideMicros = protoInt64.zero;

  /**
   * @generated from field: string aggregator = 3;
   */
  aggregator = "";

  /**
   * @generated from field: string bin_merger = 4;
   */
  binMerger = "";

  /**
   * @generated from field: string in_memory_add = 5;
   */
  inMemoryAdd = "";

  /**
   * @generated from field: string in_memory_remove = 6;
   */
  inMemoryRemove = "";

  /**
   * @generated from field: string bin_type = 7;
   */
  binType = "";

  /**
   * @generated from field: string mem_type = 8;
   */
  memType = "";

  constructor(data?: PartialMessage<SlidingWindowAggregator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SlidingWindowAggregator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "width_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "slide_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "aggregator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "bin_merger", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "in_memory_add", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "in_memory_remove", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "bin_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "mem_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlidingWindowAggregator {
    return new SlidingWindowAggregator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlidingWindowAggregator {
    return new SlidingWindowAggregator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlidingWindowAggregator {
    return new SlidingWindowAggregator().fromJsonString(jsonString, options);
  }

  static equals(a: SlidingWindowAggregator | PlainMessage<SlidingWindowAggregator> | undefined, b: SlidingWindowAggregator | PlainMessage<SlidingWindowAggregator> | undefined): boolean {
    return proto3.util.equals(SlidingWindowAggregator, a, b);
  }
}

/**
 * @generated from message arroyo_api.TumblingWindowAggregator
 */
export class TumblingWindowAggregator extends Message<TumblingWindowAggregator> {
  /**
   * @generated from field: uint64 width_micros = 1;
   */
  widthMicros = protoInt64.zero;

  /**
   * @generated from field: string aggregator = 3;
   */
  aggregator = "";

  /**
   * @generated from field: string bin_merger = 4;
   */
  binMerger = "";

  /**
   * @generated from field: string bin_type = 7;
   */
  binType = "";

  constructor(data?: PartialMessage<TumblingWindowAggregator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TumblingWindowAggregator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "width_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "aggregator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "bin_merger", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "bin_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TumblingWindowAggregator {
    return new TumblingWindowAggregator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TumblingWindowAggregator {
    return new TumblingWindowAggregator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TumblingWindowAggregator {
    return new TumblingWindowAggregator().fromJsonString(jsonString, options);
  }

  static equals(a: TumblingWindowAggregator | PlainMessage<TumblingWindowAggregator> | undefined, b: TumblingWindowAggregator | PlainMessage<TumblingWindowAggregator> | undefined): boolean {
    return proto3.util.equals(TumblingWindowAggregator, a, b);
  }
}

/**
 * @generated from message arroyo_api.TumblingTopN
 */
export class TumblingTopN extends Message<TumblingTopN> {
  /**
   * @generated from field: uint64 width_micros = 1;
   */
  widthMicros = protoInt64.zero;

  /**
   * @generated from field: uint64 max_elements = 2;
   */
  maxElements = protoInt64.zero;

  /**
   * @generated from field: string extractor = 3;
   */
  extractor = "";

  /**
   * @generated from field: string partition_key_type = 4;
   */
  partitionKeyType = "";

  /**
   * @generated from field: string converter = 5;
   */
  converter = "";

  constructor(data?: PartialMessage<TumblingTopN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TumblingTopN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "width_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "max_elements", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "extractor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "partition_key_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "converter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TumblingTopN {
    return new TumblingTopN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TumblingTopN {
    return new TumblingTopN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TumblingTopN {
    return new TumblingTopN().fromJsonString(jsonString, options);
  }

  static equals(a: TumblingTopN | PlainMessage<TumblingTopN> | undefined, b: TumblingTopN | PlainMessage<TumblingTopN> | undefined): boolean {
    return proto3.util.equals(TumblingTopN, a, b);
  }
}

/**
 * @generated from message arroyo_api.SlidingAggregatingTopN
 */
export class SlidingAggregatingTopN extends Message<SlidingAggregatingTopN> {
  /**
   * @generated from field: uint64 width_micros = 1;
   */
  widthMicros = protoInt64.zero;

  /**
   * @generated from field: uint64 slide_micros = 2;
   */
  slideMicros = protoInt64.zero;

  /**
   * @generated from field: string bin_merger = 3;
   */
  binMerger = "";

  /**
   * @generated from field: string in_memory_add = 4;
   */
  inMemoryAdd = "";

  /**
   * @generated from field: string in_memory_remove = 5;
   */
  inMemoryRemove = "";

  /**
   * @generated from field: string partitioning_func = 6;
   */
  partitioningFunc = "";

  /**
   * @generated from field: string extractor = 7;
   */
  extractor = "";

  /**
   * @generated from field: string aggregator = 8;
   */
  aggregator = "";

  /**
   * @generated from field: string bin_type = 9;
   */
  binType = "";

  /**
   * @generated from field: string mem_type = 10;
   */
  memType = "";

  /**
   * @generated from field: string sort_key_type = 11;
   */
  sortKeyType = "";

  /**
   * @generated from field: uint64 max_elements = 12;
   */
  maxElements = protoInt64.zero;

  constructor(data?: PartialMessage<SlidingAggregatingTopN>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SlidingAggregatingTopN";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "width_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "slide_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "bin_merger", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "in_memory_add", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "in_memory_remove", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "partitioning_func", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "extractor", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "aggregator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "bin_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "mem_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "sort_key_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "max_elements", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlidingAggregatingTopN {
    return new SlidingAggregatingTopN().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlidingAggregatingTopN {
    return new SlidingAggregatingTopN().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlidingAggregatingTopN {
    return new SlidingAggregatingTopN().fromJsonString(jsonString, options);
  }

  static equals(a: SlidingAggregatingTopN | PlainMessage<SlidingAggregatingTopN> | undefined, b: SlidingAggregatingTopN | PlainMessage<SlidingAggregatingTopN> | undefined): boolean {
    return proto3.util.equals(SlidingAggregatingTopN, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetJobsReq
 */
export class GetJobsReq extends Message<GetJobsReq> {
  constructor(data?: PartialMessage<GetJobsReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetJobsReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobsReq {
    return new GetJobsReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobsReq {
    return new GetJobsReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobsReq {
    return new GetJobsReq().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobsReq | PlainMessage<GetJobsReq> | undefined, b: GetJobsReq | PlainMessage<GetJobsReq> | undefined): boolean {
    return proto3.util.equals(GetJobsReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetJobsResp
 */
export class GetJobsResp extends Message<GetJobsResp> {
  /**
   * @generated from field: repeated arroyo_api.JobStatus jobs = 1;
   */
  jobs: JobStatus[] = [];

  constructor(data?: PartialMessage<GetJobsResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetJobsResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "jobs", kind: "message", T: JobStatus, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJobsResp {
    return new GetJobsResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJobsResp {
    return new GetJobsResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJobsResp {
    return new GetJobsResp().fromJsonString(jsonString, options);
  }

  static equals(a: GetJobsResp | PlainMessage<GetJobsResp> | undefined, b: GetJobsResp | PlainMessage<GetJobsResp> | undefined): boolean {
    return proto3.util.equals(GetJobsResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobStatusReq
 */
export class JobStatusReq extends Message<JobStatusReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<JobStatusReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobStatusReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobStatusReq {
    return new JobStatusReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobStatusReq {
    return new JobStatusReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobStatusReq {
    return new JobStatusReq().fromJsonString(jsonString, options);
  }

  static equals(a: JobStatusReq | PlainMessage<JobStatusReq> | undefined, b: JobStatusReq | PlainMessage<JobStatusReq> | undefined): boolean {
    return proto3.util.equals(JobStatusReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobDetailsResp
 */
export class JobDetailsResp extends Message<JobDetailsResp> {
  /**
   * @generated from field: arroyo_api.JobStatus job_status = 1;
   */
  jobStatus?: JobStatus;

  /**
   * @generated from field: arroyo_api.JobGraph job_graph = 2;
   */
  jobGraph?: JobGraph;

  /**
   * these fields determine the behavior and appearance of the button that controls the pipeline
   *
   * the value that should be set against stop_mode if one is available
   *
   * @generated from field: optional arroyo_api.StopType action = 11;
   */
  action?: StopType;

  /**
   * the text of the button to take the action
   *
   * @generated from field: string action_text = 12;
   */
  actionText = "";

  /**
   * whether the button should be represented as a loading
   *
   * @generated from field: bool in_progress = 13;
   */
  inProgress = false;

  constructor(data?: PartialMessage<JobDetailsResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobDetailsResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_status", kind: "message", T: JobStatus },
    { no: 2, name: "job_graph", kind: "message", T: JobGraph },
    { no: 11, name: "action", kind: "enum", T: proto3.getEnumType(StopType), opt: true },
    { no: 12, name: "action_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "in_progress", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobDetailsResp {
    return new JobDetailsResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobDetailsResp {
    return new JobDetailsResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobDetailsResp {
    return new JobDetailsResp().fromJsonString(jsonString, options);
  }

  static equals(a: JobDetailsResp | PlainMessage<JobDetailsResp> | undefined, b: JobDetailsResp | PlainMessage<JobDetailsResp> | undefined): boolean {
    return proto3.util.equals(JobDetailsResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobStatus
 */
export class JobStatus extends Message<JobStatus> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  /**
   * @generated from field: string pipeline_name = 2;
   */
  pipelineName = "";

  /**
   * @generated from field: bool running_desired = 8;
   */
  runningDesired = false;

  /**
   * @generated from field: string state = 3;
   */
  state = "";

  /**
   * @generated from field: uint64 run_id = 11;
   */
  runId = protoInt64.zero;

  /**
   * @generated from field: string definition_id = 9;
   */
  definitionId = "";

  /**
   * @generated from field: optional uint64 start_time = 4;
   */
  startTime?: bigint;

  /**
   * @generated from field: optional uint64 finish_time = 5;
   */
  finishTime?: bigint;

  /**
   * @generated from field: optional uint64 tasks = 6;
   */
  tasks?: bigint;

  /**
   * @generated from field: optional string definition = 7;
   */
  definition?: string;

  /**
   * @generated from field: optional string failure_message = 10;
   */
  failureMessage?: string;

  constructor(data?: PartialMessage<JobStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pipeline_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "running_desired", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "run_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "definition_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "start_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "finish_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 6, name: "tasks", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 7, name: "definition", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "failure_message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobStatus {
    return new JobStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobStatus {
    return new JobStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobStatus {
    return new JobStatus().fromJsonString(jsonString, options);
  }

  static equals(a: JobStatus | PlainMessage<JobStatus> | undefined, b: JobStatus | PlainMessage<JobStatus> | undefined): boolean {
    return proto3.util.equals(JobStatus, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobStatusResp
 */
export class JobStatusResp extends Message<JobStatusResp> {
  /**
   * @generated from field: arroyo_api.JobStatus job_status = 1;
   */
  jobStatus?: JobStatus;

  constructor(data?: PartialMessage<JobStatusResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobStatusResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_status", kind: "message", T: JobStatus },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobStatusResp {
    return new JobStatusResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobStatusResp {
    return new JobStatusResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobStatusResp {
    return new JobStatusResp().fromJsonString(jsonString, options);
  }

  static equals(a: JobStatusResp | PlainMessage<JobStatusResp> | undefined, b: JobStatusResp | PlainMessage<JobStatusResp> | undefined): boolean {
    return proto3.util.equals(JobStatusResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobDetailsReq
 */
export class JobDetailsReq extends Message<JobDetailsReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<JobDetailsReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobDetailsReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobDetailsReq {
    return new JobDetailsReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobDetailsReq {
    return new JobDetailsReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobDetailsReq {
    return new JobDetailsReq().fromJsonString(jsonString, options);
  }

  static equals(a: JobDetailsReq | PlainMessage<JobDetailsReq> | undefined, b: JobDetailsReq | PlainMessage<JobDetailsReq> | undefined): boolean {
    return proto3.util.equals(JobDetailsReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobNode
 */
export class JobNode extends Message<JobNode> {
  /**
   * @generated from field: string node_id = 1;
   */
  nodeId = "";

  /**
   * @generated from field: string operator = 2;
   */
  operator = "";

  /**
   * @generated from field: uint32 parallelism = 3;
   */
  parallelism = 0;

  constructor(data?: PartialMessage<JobNode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobNode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "node_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "operator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "parallelism", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobNode {
    return new JobNode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobNode {
    return new JobNode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobNode {
    return new JobNode().fromJsonString(jsonString, options);
  }

  static equals(a: JobNode | PlainMessage<JobNode> | undefined, b: JobNode | PlainMessage<JobNode> | undefined): boolean {
    return proto3.util.equals(JobNode, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobEdge
 */
export class JobEdge extends Message<JobEdge> {
  /**
   * @generated from field: string src_id = 1;
   */
  srcId = "";

  /**
   * @generated from field: string dest_id = 2;
   */
  destId = "";

  /**
   * @generated from field: string key_type = 3;
   */
  keyType = "";

  /**
   * @generated from field: string value_type = 4;
   */
  valueType = "";

  /**
   * @generated from field: string edge_type = 5;
   */
  edgeType = "";

  constructor(data?: PartialMessage<JobEdge>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobEdge";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "src_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "dest_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "key_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "value_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "edge_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobEdge {
    return new JobEdge().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobEdge {
    return new JobEdge().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobEdge {
    return new JobEdge().fromJsonString(jsonString, options);
  }

  static equals(a: JobEdge | PlainMessage<JobEdge> | undefined, b: JobEdge | PlainMessage<JobEdge> | undefined): boolean {
    return proto3.util.equals(JobEdge, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobGraph
 */
export class JobGraph extends Message<JobGraph> {
  /**
   * @generated from field: repeated arroyo_api.JobNode nodes = 1;
   */
  nodes: JobNode[] = [];

  /**
   * @generated from field: repeated arroyo_api.JobEdge edges = 2;
   */
  edges: JobEdge[] = [];

  constructor(data?: PartialMessage<JobGraph>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobGraph";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "nodes", kind: "message", T: JobNode, repeated: true },
    { no: 2, name: "edges", kind: "message", T: JobEdge, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobGraph {
    return new JobGraph().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobGraph {
    return new JobGraph().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobGraph {
    return new JobGraph().fromJsonString(jsonString, options);
  }

  static equals(a: JobGraph | PlainMessage<JobGraph> | undefined, b: JobGraph | PlainMessage<JobGraph> | undefined): boolean {
    return proto3.util.equals(JobGraph, a, b);
  }
}

/**
 * @generated from message arroyo_api.TaskCheckpointEvent
 */
export class TaskCheckpointEvent extends Message<TaskCheckpointEvent> {
  /**
   * @generated from field: uint64 time = 1;
   */
  time = protoInt64.zero;

  /**
   * @generated from field: arroyo_api.TaskCheckpointEventType event_type = 2;
   */
  eventType = TaskCheckpointEventType.ALIGNMENT_STARTED;

  constructor(data?: PartialMessage<TaskCheckpointEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TaskCheckpointEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "event_type", kind: "enum", T: proto3.getEnumType(TaskCheckpointEventType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskCheckpointEvent {
    return new TaskCheckpointEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskCheckpointEvent {
    return new TaskCheckpointEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskCheckpointEvent {
    return new TaskCheckpointEvent().fromJsonString(jsonString, options);
  }

  static equals(a: TaskCheckpointEvent | PlainMessage<TaskCheckpointEvent> | undefined, b: TaskCheckpointEvent | PlainMessage<TaskCheckpointEvent> | undefined): boolean {
    return proto3.util.equals(TaskCheckpointEvent, a, b);
  }
}

/**
 * @generated from message arroyo_api.TaskCheckpointDetail
 */
export class TaskCheckpointDetail extends Message<TaskCheckpointDetail> {
  /**
   * @generated from field: uint32 subtask_index = 1;
   */
  subtaskIndex = 0;

  /**
   * @generated from field: uint64 start_time = 2;
   */
  startTime = protoInt64.zero;

  /**
   * @generated from field: optional uint64 finish_time = 3;
   */
  finishTime?: bigint;

  /**
   * @generated from field: optional uint64 bytes = 4;
   */
  bytes?: bigint;

  /**
   * @generated from field: repeated arroyo_api.TaskCheckpointEvent events = 5;
   */
  events: TaskCheckpointEvent[] = [];

  constructor(data?: PartialMessage<TaskCheckpointDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TaskCheckpointDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subtask_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "start_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "finish_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "events", kind: "message", T: TaskCheckpointEvent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskCheckpointDetail {
    return new TaskCheckpointDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskCheckpointDetail {
    return new TaskCheckpointDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskCheckpointDetail {
    return new TaskCheckpointDetail().fromJsonString(jsonString, options);
  }

  static equals(a: TaskCheckpointDetail | PlainMessage<TaskCheckpointDetail> | undefined, b: TaskCheckpointDetail | PlainMessage<TaskCheckpointDetail> | undefined): boolean {
    return proto3.util.equals(TaskCheckpointDetail, a, b);
  }
}

/**
 * @generated from message arroyo_api.OperatorCheckpointDetail
 */
export class OperatorCheckpointDetail extends Message<OperatorCheckpointDetail> {
  /**
   * @generated from field: string operator_id = 1;
   */
  operatorId = "";

  /**
   * @generated from field: uint64 start_time = 2;
   */
  startTime = protoInt64.zero;

  /**
   * @generated from field: optional uint64 finish_time = 3;
   */
  finishTime?: bigint;

  /**
   * @generated from field: bool has_state = 4;
   */
  hasState = false;

  /**
   * @generated from field: map<uint32, arroyo_api.TaskCheckpointDetail> tasks = 5;
   */
  tasks: { [key: number]: TaskCheckpointDetail } = {};

  constructor(data?: PartialMessage<OperatorCheckpointDetail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.OperatorCheckpointDetail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "operator_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "finish_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "has_state", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "tasks", kind: "map", K: 13 /* ScalarType.UINT32 */, V: {kind: "message", T: TaskCheckpointDetail} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OperatorCheckpointDetail {
    return new OperatorCheckpointDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OperatorCheckpointDetail {
    return new OperatorCheckpointDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OperatorCheckpointDetail {
    return new OperatorCheckpointDetail().fromJsonString(jsonString, options);
  }

  static equals(a: OperatorCheckpointDetail | PlainMessage<OperatorCheckpointDetail> | undefined, b: OperatorCheckpointDetail | PlainMessage<OperatorCheckpointDetail> | undefined): boolean {
    return proto3.util.equals(OperatorCheckpointDetail, a, b);
  }
}

/**
 * @generated from message arroyo_api.CheckpointOverview
 */
export class CheckpointOverview extends Message<CheckpointOverview> {
  /**
   * @generated from field: uint32 epoch = 1;
   */
  epoch = 0;

  /**
   * @generated from field: string backend = 2;
   */
  backend = "";

  /**
   * @generated from field: uint64 start_time = 3;
   */
  startTime = protoInt64.zero;

  /**
   * @generated from field: optional uint64 finish_time = 4;
   */
  finishTime?: bigint;

  constructor(data?: PartialMessage<CheckpointOverview>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CheckpointOverview";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "backend", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "finish_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckpointOverview {
    return new CheckpointOverview().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckpointOverview {
    return new CheckpointOverview().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckpointOverview {
    return new CheckpointOverview().fromJsonString(jsonString, options);
  }

  static equals(a: CheckpointOverview | PlainMessage<CheckpointOverview> | undefined, b: CheckpointOverview | PlainMessage<CheckpointOverview> | undefined): boolean {
    return proto3.util.equals(CheckpointOverview, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobCheckpointsReq
 */
export class JobCheckpointsReq extends Message<JobCheckpointsReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<JobCheckpointsReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobCheckpointsReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobCheckpointsReq {
    return new JobCheckpointsReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobCheckpointsReq {
    return new JobCheckpointsReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobCheckpointsReq {
    return new JobCheckpointsReq().fromJsonString(jsonString, options);
  }

  static equals(a: JobCheckpointsReq | PlainMessage<JobCheckpointsReq> | undefined, b: JobCheckpointsReq | PlainMessage<JobCheckpointsReq> | undefined): boolean {
    return proto3.util.equals(JobCheckpointsReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobCheckpointsResp
 */
export class JobCheckpointsResp extends Message<JobCheckpointsResp> {
  /**
   * @generated from field: repeated arroyo_api.CheckpointOverview checkpoints = 1;
   */
  checkpoints: CheckpointOverview[] = [];

  constructor(data?: PartialMessage<JobCheckpointsResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobCheckpointsResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "checkpoints", kind: "message", T: CheckpointOverview, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobCheckpointsResp {
    return new JobCheckpointsResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobCheckpointsResp {
    return new JobCheckpointsResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobCheckpointsResp {
    return new JobCheckpointsResp().fromJsonString(jsonString, options);
  }

  static equals(a: JobCheckpointsResp | PlainMessage<JobCheckpointsResp> | undefined, b: JobCheckpointsResp | PlainMessage<JobCheckpointsResp> | undefined): boolean {
    return proto3.util.equals(JobCheckpointsResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.CheckpointDetailsReq
 */
export class CheckpointDetailsReq extends Message<CheckpointDetailsReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  /**
   * @generated from field: uint32 epoch = 2;
   */
  epoch = 0;

  constructor(data?: PartialMessage<CheckpointDetailsReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CheckpointDetailsReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "epoch", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckpointDetailsReq {
    return new CheckpointDetailsReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckpointDetailsReq {
    return new CheckpointDetailsReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckpointDetailsReq {
    return new CheckpointDetailsReq().fromJsonString(jsonString, options);
  }

  static equals(a: CheckpointDetailsReq | PlainMessage<CheckpointDetailsReq> | undefined, b: CheckpointDetailsReq | PlainMessage<CheckpointDetailsReq> | undefined): boolean {
    return proto3.util.equals(CheckpointDetailsReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.CheckpointDetailsResp
 */
export class CheckpointDetailsResp extends Message<CheckpointDetailsResp> {
  /**
   * @generated from field: arroyo_api.CheckpointOverview overview = 1;
   */
  overview?: CheckpointOverview;

  /**
   * @generated from field: map<string, arroyo_api.OperatorCheckpointDetail> operators = 2;
   */
  operators: { [key: string]: OperatorCheckpointDetail } = {};

  constructor(data?: PartialMessage<CheckpointDetailsResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CheckpointDetailsResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "overview", kind: "message", T: CheckpointOverview },
    { no: 2, name: "operators", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: OperatorCheckpointDetail} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckpointDetailsResp {
    return new CheckpointDetailsResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckpointDetailsResp {
    return new CheckpointDetailsResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckpointDetailsResp {
    return new CheckpointDetailsResp().fromJsonString(jsonString, options);
  }

  static equals(a: CheckpointDetailsResp | PlainMessage<CheckpointDetailsResp> | undefined, b: CheckpointDetailsResp | PlainMessage<CheckpointDetailsResp> | undefined): boolean {
    return proto3.util.equals(CheckpointDetailsResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.Metric
 */
export class Metric extends Message<Metric> {
  /**
   * @generated from field: uint64 time = 1;
   */
  time = protoInt64.zero;

  /**
   * @generated from field: double value = 2;
   */
  value = 0;

  constructor(data?: PartialMessage<Metric>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.Metric";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Metric {
    return new Metric().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Metric {
    return new Metric().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Metric {
    return new Metric().fromJsonString(jsonString, options);
  }

  static equals(a: Metric | PlainMessage<Metric> | undefined, b: Metric | PlainMessage<Metric> | undefined): boolean {
    return proto3.util.equals(Metric, a, b);
  }
}

/**
 * @generated from message arroyo_api.SubtaskMetrics
 */
export class SubtaskMetrics extends Message<SubtaskMetrics> {
  /**
   * @generated from field: repeated arroyo_api.Metric bytes_recv = 1;
   */
  bytesRecv: Metric[] = [];

  /**
   * @generated from field: repeated arroyo_api.Metric bytes_sent = 2;
   */
  bytesSent: Metric[] = [];

  /**
   * @generated from field: repeated arroyo_api.Metric messages_recv = 3;
   */
  messagesRecv: Metric[] = [];

  /**
   * @generated from field: repeated arroyo_api.Metric messages_sent = 4;
   */
  messagesSent: Metric[] = [];

  constructor(data?: PartialMessage<SubtaskMetrics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SubtaskMetrics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bytes_recv", kind: "message", T: Metric, repeated: true },
    { no: 2, name: "bytes_sent", kind: "message", T: Metric, repeated: true },
    { no: 3, name: "messages_recv", kind: "message", T: Metric, repeated: true },
    { no: 4, name: "messages_sent", kind: "message", T: Metric, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubtaskMetrics {
    return new SubtaskMetrics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubtaskMetrics {
    return new SubtaskMetrics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubtaskMetrics {
    return new SubtaskMetrics().fromJsonString(jsonString, options);
  }

  static equals(a: SubtaskMetrics | PlainMessage<SubtaskMetrics> | undefined, b: SubtaskMetrics | PlainMessage<SubtaskMetrics> | undefined): boolean {
    return proto3.util.equals(SubtaskMetrics, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobMetricsReq
 */
export class JobMetricsReq extends Message<JobMetricsReq> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<JobMetricsReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobMetricsReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobMetricsReq {
    return new JobMetricsReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobMetricsReq {
    return new JobMetricsReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobMetricsReq {
    return new JobMetricsReq().fromJsonString(jsonString, options);
  }

  static equals(a: JobMetricsReq | PlainMessage<JobMetricsReq> | undefined, b: JobMetricsReq | PlainMessage<JobMetricsReq> | undefined): boolean {
    return proto3.util.equals(JobMetricsReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobMetricsResp
 */
export class JobMetricsResp extends Message<JobMetricsResp> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  /**
   * @generated from field: uint64 start_time = 2;
   */
  startTime = protoInt64.zero;

  /**
   * @generated from field: uint64 end_time = 3;
   */
  endTime = protoInt64.zero;

  /**
   * @generated from field: map<string, arroyo_api.JobMetricsResp.OperatorMetrics> metrics = 4;
   */
  metrics: { [key: string]: JobMetricsResp_OperatorMetrics } = {};

  constructor(data?: PartialMessage<JobMetricsResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobMetricsResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "end_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "metrics", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: JobMetricsResp_OperatorMetrics} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobMetricsResp {
    return new JobMetricsResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobMetricsResp {
    return new JobMetricsResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobMetricsResp {
    return new JobMetricsResp().fromJsonString(jsonString, options);
  }

  static equals(a: JobMetricsResp | PlainMessage<JobMetricsResp> | undefined, b: JobMetricsResp | PlainMessage<JobMetricsResp> | undefined): boolean {
    return proto3.util.equals(JobMetricsResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.JobMetricsResp.OperatorMetrics
 */
export class JobMetricsResp_OperatorMetrics extends Message<JobMetricsResp_OperatorMetrics> {
  /**
   * @generated from field: map<uint32, arroyo_api.SubtaskMetrics> subtasks = 1;
   */
  subtasks: { [key: number]: SubtaskMetrics } = {};

  constructor(data?: PartialMessage<JobMetricsResp_OperatorMetrics>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JobMetricsResp.OperatorMetrics";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subtasks", kind: "map", K: 13 /* ScalarType.UINT32 */, V: {kind: "message", T: SubtaskMetrics} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JobMetricsResp_OperatorMetrics {
    return new JobMetricsResp_OperatorMetrics().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JobMetricsResp_OperatorMetrics {
    return new JobMetricsResp_OperatorMetrics().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JobMetricsResp_OperatorMetrics {
    return new JobMetricsResp_OperatorMetrics().fromJsonString(jsonString, options);
  }

  static equals(a: JobMetricsResp_OperatorMetrics | PlainMessage<JobMetricsResp_OperatorMetrics> | undefined, b: JobMetricsResp_OperatorMetrics | PlainMessage<JobMetricsResp_OperatorMetrics> | undefined): boolean {
    return proto3.util.equals(JobMetricsResp_OperatorMetrics, a, b);
  }
}

/**
 * connections
 *
 * @generated from message arroyo_api.KafkaConnection
 */
export class KafkaConnection extends Message<KafkaConnection> {
  /**
   * @generated from field: string bootstrap_servers = 1;
   */
  bootstrapServers = "";

  /**
   * @generated from field: arroyo_api.KafkaAuthConfig auth_config = 2;
   */
  authConfig?: KafkaAuthConfig;

  constructor(data?: PartialMessage<KafkaConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bootstrap_servers", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "auth_config", kind: "message", T: KafkaAuthConfig },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaConnection {
    return new KafkaConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaConnection {
    return new KafkaConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaConnection {
    return new KafkaConnection().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaConnection | PlainMessage<KafkaConnection> | undefined, b: KafkaConnection | PlainMessage<KafkaConnection> | undefined): boolean {
    return proto3.util.equals(KafkaConnection, a, b);
  }
}

/**
 * @generated from message arroyo_api.KafkaAuthConfig
 */
export class KafkaAuthConfig extends Message<KafkaAuthConfig> {
  /**
   * @generated from oneof arroyo_api.KafkaAuthConfig.auth_type
   */
  authType: {
    /**
     * @generated from field: arroyo_api.NoAuth no_auth = 1;
     */
    value: NoAuth;
    case: "noAuth";
  } | {
    /**
     * @generated from field: arroyo_api.SaslAuth sasl_auth = 2;
     */
    value: SaslAuth;
    case: "saslAuth";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<KafkaAuthConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaAuthConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "no_auth", kind: "message", T: NoAuth, oneof: "auth_type" },
    { no: 2, name: "sasl_auth", kind: "message", T: SaslAuth, oneof: "auth_type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaAuthConfig {
    return new KafkaAuthConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaAuthConfig {
    return new KafkaAuthConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaAuthConfig {
    return new KafkaAuthConfig().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaAuthConfig | PlainMessage<KafkaAuthConfig> | undefined, b: KafkaAuthConfig | PlainMessage<KafkaAuthConfig> | undefined): boolean {
    return proto3.util.equals(KafkaAuthConfig, a, b);
  }
}

/**
 * @generated from message arroyo_api.NoAuth
 */
export class NoAuth extends Message<NoAuth> {
  constructor(data?: PartialMessage<NoAuth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.NoAuth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NoAuth {
    return new NoAuth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NoAuth {
    return new NoAuth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NoAuth {
    return new NoAuth().fromJsonString(jsonString, options);
  }

  static equals(a: NoAuth | PlainMessage<NoAuth> | undefined, b: NoAuth | PlainMessage<NoAuth> | undefined): boolean {
    return proto3.util.equals(NoAuth, a, b);
  }
}

/**
 * @generated from message arroyo_api.SaslAuth
 */
export class SaslAuth extends Message<SaslAuth> {
  /**
   * @generated from field: string protocol = 1;
   */
  protocol = "";

  /**
   * @generated from field: string mechanism = 2;
   */
  mechanism = "";

  /**
   * @generated from field: string username = 3;
   */
  username = "";

  /**
   * @generated from field: string password = 4;
   */
  password = "";

  constructor(data?: PartialMessage<SaslAuth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SaslAuth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "protocol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "mechanism", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SaslAuth {
    return new SaslAuth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SaslAuth {
    return new SaslAuth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SaslAuth {
    return new SaslAuth().fromJsonString(jsonString, options);
  }

  static equals(a: SaslAuth | PlainMessage<SaslAuth> | undefined, b: SaslAuth | PlainMessage<SaslAuth> | undefined): boolean {
    return proto3.util.equals(SaslAuth, a, b);
  }
}

/**
 * @generated from message arroyo_api.KinesisConnection
 */
export class KinesisConnection extends Message<KinesisConnection> {
  constructor(data?: PartialMessage<KinesisConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KinesisConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KinesisConnection {
    return new KinesisConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KinesisConnection {
    return new KinesisConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KinesisConnection {
    return new KinesisConnection().fromJsonString(jsonString, options);
  }

  static equals(a: KinesisConnection | PlainMessage<KinesisConnection> | undefined, b: KinesisConnection | PlainMessage<KinesisConnection> | undefined): boolean {
    return proto3.util.equals(KinesisConnection, a, b);
  }
}

/**
 * @generated from message arroyo_api.Connection
 */
export class Connection extends Message<Connection> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from oneof arroyo_api.Connection.connection_type
   */
  connectionType: {
    /**
     * @generated from field: arroyo_api.KafkaConnection kafka = 2;
     */
    value: KafkaConnection;
    case: "kafka";
  } | {
    /**
     * @generated from field: arroyo_api.KinesisConnection kinesis = 3;
     */
    value: KinesisConnection;
    case: "kinesis";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: int32 sources = 4;
   */
  sources = 0;

  /**
   * @generated from field: int32 sinks = 5;
   */
  sinks = 0;

  constructor(data?: PartialMessage<Connection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.Connection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "kafka", kind: "message", T: KafkaConnection, oneof: "connection_type" },
    { no: 3, name: "kinesis", kind: "message", T: KinesisConnection, oneof: "connection_type" },
    { no: 4, name: "sources", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "sinks", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Connection {
    return new Connection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Connection {
    return new Connection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Connection {
    return new Connection().fromJsonString(jsonString, options);
  }

  static equals(a: Connection | PlainMessage<Connection> | undefined, b: Connection | PlainMessage<Connection> | undefined): boolean {
    return proto3.util.equals(Connection, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateConnectionReq
 */
export class CreateConnectionReq extends Message<CreateConnectionReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from oneof arroyo_api.CreateConnectionReq.connection_type
   */
  connectionType: {
    /**
     * @generated from field: arroyo_api.KafkaConnection kafka = 2;
     */
    value: KafkaConnection;
    case: "kafka";
  } | {
    /**
     * @generated from field: arroyo_api.KinesisConnection kinesis = 3;
     */
    value: KinesisConnection;
    case: "kinesis";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateConnectionReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateConnectionReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "kafka", kind: "message", T: KafkaConnection, oneof: "connection_type" },
    { no: 3, name: "kinesis", kind: "message", T: KinesisConnection, oneof: "connection_type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectionReq {
    return new CreateConnectionReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectionReq {
    return new CreateConnectionReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectionReq {
    return new CreateConnectionReq().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectionReq | PlainMessage<CreateConnectionReq> | undefined, b: CreateConnectionReq | PlainMessage<CreateConnectionReq> | undefined): boolean {
    return proto3.util.equals(CreateConnectionReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateConnectionResp
 */
export class CreateConnectionResp extends Message<CreateConnectionResp> {
  constructor(data?: PartialMessage<CreateConnectionResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateConnectionResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectionResp {
    return new CreateConnectionResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectionResp {
    return new CreateConnectionResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectionResp {
    return new CreateConnectionResp().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectionResp | PlainMessage<CreateConnectionResp> | undefined, b: CreateConnectionResp | PlainMessage<CreateConnectionResp> | undefined): boolean {
    return proto3.util.equals(CreateConnectionResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetConnectionsReq
 */
export class GetConnectionsReq extends Message<GetConnectionsReq> {
  constructor(data?: PartialMessage<GetConnectionsReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetConnectionsReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConnectionsReq {
    return new GetConnectionsReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConnectionsReq {
    return new GetConnectionsReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConnectionsReq {
    return new GetConnectionsReq().fromJsonString(jsonString, options);
  }

  static equals(a: GetConnectionsReq | PlainMessage<GetConnectionsReq> | undefined, b: GetConnectionsReq | PlainMessage<GetConnectionsReq> | undefined): boolean {
    return proto3.util.equals(GetConnectionsReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetConnectionsResp
 */
export class GetConnectionsResp extends Message<GetConnectionsResp> {
  /**
   * @generated from field: repeated arroyo_api.Connection connections = 1;
   */
  connections: Connection[] = [];

  constructor(data?: PartialMessage<GetConnectionsResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetConnectionsResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connections", kind: "message", T: Connection, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConnectionsResp {
    return new GetConnectionsResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConnectionsResp {
    return new GetConnectionsResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConnectionsResp {
    return new GetConnectionsResp().fromJsonString(jsonString, options);
  }

  static equals(a: GetConnectionsResp | PlainMessage<GetConnectionsResp> | undefined, b: GetConnectionsResp | PlainMessage<GetConnectionsResp> | undefined): boolean {
    return proto3.util.equals(GetConnectionsResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteConnectionReq
 */
export class DeleteConnectionReq extends Message<DeleteConnectionReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteConnectionReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteConnectionReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConnectionReq {
    return new DeleteConnectionReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConnectionReq {
    return new DeleteConnectionReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConnectionReq {
    return new DeleteConnectionReq().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConnectionReq | PlainMessage<DeleteConnectionReq> | undefined, b: DeleteConnectionReq | PlainMessage<DeleteConnectionReq> | undefined): boolean {
    return proto3.util.equals(DeleteConnectionReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteConnectionResp
 */
export class DeleteConnectionResp extends Message<DeleteConnectionResp> {
  constructor(data?: PartialMessage<DeleteConnectionResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteConnectionResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConnectionResp {
    return new DeleteConnectionResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConnectionResp {
    return new DeleteConnectionResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConnectionResp {
    return new DeleteConnectionResp().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConnectionResp | PlainMessage<DeleteConnectionResp> | undefined, b: DeleteConnectionResp | PlainMessage<DeleteConnectionResp> | undefined): boolean {
    return proto3.util.equals(DeleteConnectionResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.JsonSchemaDef
 */
export class JsonSchemaDef extends Message<JsonSchemaDef> {
  /**
   * @generated from field: string json_schema = 1;
   */
  jsonSchema = "";

  constructor(data?: PartialMessage<JsonSchemaDef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JsonSchemaDef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "json_schema", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JsonSchemaDef {
    return new JsonSchemaDef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JsonSchemaDef {
    return new JsonSchemaDef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JsonSchemaDef {
    return new JsonSchemaDef().fromJsonString(jsonString, options);
  }

  static equals(a: JsonSchemaDef | PlainMessage<JsonSchemaDef> | undefined, b: JsonSchemaDef | PlainMessage<JsonSchemaDef> | undefined): boolean {
    return proto3.util.equals(JsonSchemaDef, a, b);
  }
}

/**
 * @generated from message arroyo_api.JsonFieldDef
 */
export class JsonFieldDef extends Message<JsonFieldDef> {
  /**
   * @generated from field: repeated arroyo_api.SourceField fields = 1;
   */
  fields: SourceField[] = [];

  constructor(data?: PartialMessage<JsonFieldDef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.JsonFieldDef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fields", kind: "message", T: SourceField, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JsonFieldDef {
    return new JsonFieldDef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JsonFieldDef {
    return new JsonFieldDef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JsonFieldDef {
    return new JsonFieldDef().fromJsonString(jsonString, options);
  }

  static equals(a: JsonFieldDef | PlainMessage<JsonFieldDef> | undefined, b: JsonFieldDef | PlainMessage<JsonFieldDef> | undefined): boolean {
    return proto3.util.equals(JsonFieldDef, a, b);
  }
}

/**
 * @generated from message arroyo_api.ProtobufSchemaDef
 */
export class ProtobufSchemaDef extends Message<ProtobufSchemaDef> {
  /**
   * @generated from field: string protobuf_schema = 1;
   */
  protobufSchema = "";

  constructor(data?: PartialMessage<ProtobufSchemaDef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ProtobufSchemaDef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "protobuf_schema", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtobufSchemaDef {
    return new ProtobufSchemaDef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtobufSchemaDef {
    return new ProtobufSchemaDef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtobufSchemaDef {
    return new ProtobufSchemaDef().fromJsonString(jsonString, options);
  }

  static equals(a: ProtobufSchemaDef | PlainMessage<ProtobufSchemaDef> | undefined, b: ProtobufSchemaDef | PlainMessage<ProtobufSchemaDef> | undefined): boolean {
    return proto3.util.equals(ProtobufSchemaDef, a, b);
  }
}

/**
 * @generated from message arroyo_api.StructType
 */
export class StructType extends Message<StructType> {
  /**
   * @generated from field: repeated arroyo_api.SourceField fields = 1;
   */
  fields: SourceField[] = [];

  constructor(data?: PartialMessage<StructType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.StructType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fields", kind: "message", T: SourceField, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StructType {
    return new StructType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StructType {
    return new StructType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StructType {
    return new StructType().fromJsonString(jsonString, options);
  }

  static equals(a: StructType | PlainMessage<StructType> | undefined, b: StructType | PlainMessage<StructType> | undefined): boolean {
    return proto3.util.equals(StructType, a, b);
  }
}

/**
 * @generated from message arroyo_api.SourceFieldType
 */
export class SourceFieldType extends Message<SourceFieldType> {
  /**
   * @generated from oneof arroyo_api.SourceFieldType.type
   */
  type: {
    /**
     * @generated from field: arroyo_api.PrimitiveType primitive = 1;
     */
    value: PrimitiveType;
    case: "primitive";
  } | {
    /**
     * @generated from field: arroyo_api.StructType struct = 2;
     */
    value: StructType;
    case: "struct";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<SourceFieldType>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SourceFieldType";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "primitive", kind: "enum", T: proto3.getEnumType(PrimitiveType), oneof: "type" },
    { no: 2, name: "struct", kind: "message", T: StructType, oneof: "type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SourceFieldType {
    return new SourceFieldType().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SourceFieldType {
    return new SourceFieldType().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SourceFieldType {
    return new SourceFieldType().fromJsonString(jsonString, options);
  }

  static equals(a: SourceFieldType | PlainMessage<SourceFieldType> | undefined, b: SourceFieldType | PlainMessage<SourceFieldType> | undefined): boolean {
    return proto3.util.equals(SourceFieldType, a, b);
  }
}

/**
 * @generated from message arroyo_api.SourceField
 */
export class SourceField extends Message<SourceField> {
  /**
   * @generated from field: string field_name = 1;
   */
  fieldName = "";

  /**
   * @generated from field: arroyo_api.SourceFieldType field_type = 2;
   */
  fieldType?: SourceFieldType;

  /**
   * @generated from field: bool nullable = 3;
   */
  nullable = false;

  constructor(data?: PartialMessage<SourceField>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SourceField";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_type", kind: "message", T: SourceFieldType },
    { no: 3, name: "nullable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SourceField {
    return new SourceField().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SourceField {
    return new SourceField().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SourceField {
    return new SourceField().fromJsonString(jsonString, options);
  }

  static equals(a: SourceField | PlainMessage<SourceField> | undefined, b: SourceField | PlainMessage<SourceField> | undefined): boolean {
    return proto3.util.equals(SourceField, a, b);
  }
}

/**
 * @generated from message arroyo_api.SourceSchema
 */
export class SourceSchema extends Message<SourceSchema> {
  /**
   * @generated from oneof arroyo_api.SourceSchema.schema
   */
  schema: {
    /**
     * @generated from field: string builtin = 2;
     */
    value: string;
    case: "builtin";
  } | {
    /**
     * @generated from field: arroyo_api.JsonSchemaDef json_schema = 3;
     */
    value: JsonSchemaDef;
    case: "jsonSchema";
  } | {
    /**
     * @generated from field: arroyo_api.JsonFieldDef json_fields = 4;
     */
    value: JsonFieldDef;
    case: "jsonFields";
  } | {
    /**
     * @generated from field: arroyo_api.ProtobufSchemaDef protobuf = 5;
     */
    value: ProtobufSchemaDef;
    case: "protobuf";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: bool kafka_schema_registry = 7;
   */
  kafkaSchemaRegistry = false;

  constructor(data?: PartialMessage<SourceSchema>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SourceSchema";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "builtin", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "schema" },
    { no: 3, name: "json_schema", kind: "message", T: JsonSchemaDef, oneof: "schema" },
    { no: 4, name: "json_fields", kind: "message", T: JsonFieldDef, oneof: "schema" },
    { no: 5, name: "protobuf", kind: "message", T: ProtobufSchemaDef, oneof: "schema" },
    { no: 7, name: "kafka_schema_registry", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SourceSchema {
    return new SourceSchema().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SourceSchema {
    return new SourceSchema().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SourceSchema {
    return new SourceSchema().fromJsonString(jsonString, options);
  }

  static equals(a: SourceSchema | PlainMessage<SourceSchema> | undefined, b: SourceSchema | PlainMessage<SourceSchema> | undefined): boolean {
    return proto3.util.equals(SourceSchema, a, b);
  }
}

/**
 * @generated from message arroyo_api.KafkaSourceConfig
 */
export class KafkaSourceConfig extends Message<KafkaSourceConfig> {
  /**
   * @generated from field: string topic = 1;
   */
  topic = "";

  /**
   * @generated from field: string connection = 2;
   */
  connection = "";

  constructor(data?: PartialMessage<KafkaSourceConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaSourceConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "connection", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaSourceConfig {
    return new KafkaSourceConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaSourceConfig {
    return new KafkaSourceConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaSourceConfig {
    return new KafkaSourceConfig().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaSourceConfig | PlainMessage<KafkaSourceConfig> | undefined, b: KafkaSourceConfig | PlainMessage<KafkaSourceConfig> | undefined): boolean {
    return proto3.util.equals(KafkaSourceConfig, a, b);
  }
}

/**
 * @generated from message arroyo_api.ImpulseSourceConfig
 */
export class ImpulseSourceConfig extends Message<ImpulseSourceConfig> {
  /**
   * @generated from field: optional uint32 interval_micros = 1;
   */
  intervalMicros?: number;

  /**
   * @generated from field: float events_per_second = 2;
   */
  eventsPerSecond = 0;

  /**
   * @generated from field: optional uint32 total_messages = 3;
   */
  totalMessages?: number;

  constructor(data?: PartialMessage<ImpulseSourceConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ImpulseSourceConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "interval_micros", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "events_per_second", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "total_messages", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImpulseSourceConfig {
    return new ImpulseSourceConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImpulseSourceConfig {
    return new ImpulseSourceConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImpulseSourceConfig {
    return new ImpulseSourceConfig().fromJsonString(jsonString, options);
  }

  static equals(a: ImpulseSourceConfig | PlainMessage<ImpulseSourceConfig> | undefined, b: ImpulseSourceConfig | PlainMessage<ImpulseSourceConfig> | undefined): boolean {
    return proto3.util.equals(ImpulseSourceConfig, a, b);
  }
}

/**
 * @generated from message arroyo_api.FileSourceConfig
 */
export class FileSourceConfig extends Message<FileSourceConfig> {
  /**
   * @generated from field: string directory = 1;
   */
  directory = "";

  /**
   * @generated from field: uint32 interval_ms = 2;
   */
  intervalMs = 0;

  constructor(data?: PartialMessage<FileSourceConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.FileSourceConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "interval_ms", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileSourceConfig {
    return new FileSourceConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileSourceConfig {
    return new FileSourceConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileSourceConfig {
    return new FileSourceConfig().fromJsonString(jsonString, options);
  }

  static equals(a: FileSourceConfig | PlainMessage<FileSourceConfig> | undefined, b: FileSourceConfig | PlainMessage<FileSourceConfig> | undefined): boolean {
    return proto3.util.equals(FileSourceConfig, a, b);
  }
}

/**
 * @generated from message arroyo_api.NexmarkSourceConfig
 */
export class NexmarkSourceConfig extends Message<NexmarkSourceConfig> {
  /**
   * @generated from field: uint32 events_per_second = 1;
   */
  eventsPerSecond = 0;

  /**
   * @generated from field: optional uint64 runtime_micros = 2;
   */
  runtimeMicros?: bigint;

  constructor(data?: PartialMessage<NexmarkSourceConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.NexmarkSourceConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "events_per_second", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "runtime_micros", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NexmarkSourceConfig {
    return new NexmarkSourceConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NexmarkSourceConfig {
    return new NexmarkSourceConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NexmarkSourceConfig {
    return new NexmarkSourceConfig().fromJsonString(jsonString, options);
  }

  static equals(a: NexmarkSourceConfig | PlainMessage<NexmarkSourceConfig> | undefined, b: NexmarkSourceConfig | PlainMessage<NexmarkSourceConfig> | undefined): boolean {
    return proto3.util.equals(NexmarkSourceConfig, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateSourceReq
 */
export class CreateSourceReq extends Message<CreateSourceReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: arroyo_api.SourceSchema schema = 2;
   */
  schema?: SourceSchema;

  /**
   * @generated from oneof arroyo_api.CreateSourceReq.type_oneof
   */
  typeOneof: {
    /**
     * @generated from field: arroyo_api.KafkaSourceConfig kafka = 3;
     */
    value: KafkaSourceConfig;
    case: "kafka";
  } | {
    /**
     * @generated from field: arroyo_api.ImpulseSourceConfig impulse = 4;
     */
    value: ImpulseSourceConfig;
    case: "impulse";
  } | {
    /**
     * @generated from field: arroyo_api.FileSourceConfig file = 5;
     */
    value: FileSourceConfig;
    case: "file";
  } | {
    /**
     * @generated from field: arroyo_api.NexmarkSourceConfig nexmark = 6;
     */
    value: NexmarkSourceConfig;
    case: "nexmark";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateSourceReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateSourceReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "schema", kind: "message", T: SourceSchema },
    { no: 3, name: "kafka", kind: "message", T: KafkaSourceConfig, oneof: "type_oneof" },
    { no: 4, name: "impulse", kind: "message", T: ImpulseSourceConfig, oneof: "type_oneof" },
    { no: 5, name: "file", kind: "message", T: FileSourceConfig, oneof: "type_oneof" },
    { no: 6, name: "nexmark", kind: "message", T: NexmarkSourceConfig, oneof: "type_oneof" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSourceReq {
    return new CreateSourceReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSourceReq {
    return new CreateSourceReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSourceReq {
    return new CreateSourceReq().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSourceReq | PlainMessage<CreateSourceReq> | undefined, b: CreateSourceReq | PlainMessage<CreateSourceReq> | undefined): boolean {
    return proto3.util.equals(CreateSourceReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateSourceResp
 */
export class CreateSourceResp extends Message<CreateSourceResp> {
  constructor(data?: PartialMessage<CreateSourceResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateSourceResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSourceResp {
    return new CreateSourceResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSourceResp {
    return new CreateSourceResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSourceResp {
    return new CreateSourceResp().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSourceResp | PlainMessage<CreateSourceResp> | undefined, b: CreateSourceResp | PlainMessage<CreateSourceResp> | undefined): boolean {
    return proto3.util.equals(CreateSourceResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.KafkaSourceDef
 */
export class KafkaSourceDef extends Message<KafkaSourceDef> {
  /**
   * @generated from field: string connection_name = 1;
   */
  connectionName = "";

  /**
   * @generated from field: arroyo_api.KafkaConnection connection = 2;
   */
  connection?: KafkaConnection;

  /**
   * @generated from field: string topic = 3;
   */
  topic = "";

  constructor(data?: PartialMessage<KafkaSourceDef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaSourceDef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "connection", kind: "message", T: KafkaConnection },
    { no: 3, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaSourceDef {
    return new KafkaSourceDef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaSourceDef {
    return new KafkaSourceDef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaSourceDef {
    return new KafkaSourceDef().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaSourceDef | PlainMessage<KafkaSourceDef> | undefined, b: KafkaSourceDef | PlainMessage<KafkaSourceDef> | undefined): boolean {
    return proto3.util.equals(KafkaSourceDef, a, b);
  }
}

/**
 * @generated from message arroyo_api.SourceDef
 */
export class SourceDef extends Message<SourceDef> {
  /**
   * @generated from field: int64 id = 9;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: arroyo_api.SourceSchema schema = 2;
   */
  schema?: SourceSchema;

  /**
   * @generated from field: optional string connection = 8;
   */
  connection?: string;

  /**
   * @generated from field: int32 consumers = 10;
   */
  consumers = 0;

  /**
   * @generated from oneof arroyo_api.SourceDef.source_type
   */
  sourceType: {
    /**
     * @generated from field: arroyo_api.KafkaSourceDef kafka = 3;
     */
    value: KafkaSourceDef;
    case: "kafka";
  } | {
    /**
     * @generated from field: arroyo_api.ImpulseSourceConfig impulse = 4;
     */
    value: ImpulseSourceConfig;
    case: "impulse";
  } | {
    /**
     * @generated from field: arroyo_api.FileSourceConfig file = 5;
     */
    value: FileSourceConfig;
    case: "file";
  } | {
    /**
     * @generated from field: arroyo_api.NexmarkSourceConfig nexmark = 6;
     */
    value: NexmarkSourceConfig;
    case: "nexmark";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: repeated arroyo_api.SourceField sql_fields = 7;
   */
  sqlFields: SourceField[] = [];

  constructor(data?: PartialMessage<SourceDef>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SourceDef";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 9, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "schema", kind: "message", T: SourceSchema },
    { no: 8, name: "connection", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "consumers", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "kafka", kind: "message", T: KafkaSourceDef, oneof: "source_type" },
    { no: 4, name: "impulse", kind: "message", T: ImpulseSourceConfig, oneof: "source_type" },
    { no: 5, name: "file", kind: "message", T: FileSourceConfig, oneof: "source_type" },
    { no: 6, name: "nexmark", kind: "message", T: NexmarkSourceConfig, oneof: "source_type" },
    { no: 7, name: "sql_fields", kind: "message", T: SourceField, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SourceDef {
    return new SourceDef().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SourceDef {
    return new SourceDef().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SourceDef {
    return new SourceDef().fromJsonString(jsonString, options);
  }

  static equals(a: SourceDef | PlainMessage<SourceDef> | undefined, b: SourceDef | PlainMessage<SourceDef> | undefined): boolean {
    return proto3.util.equals(SourceDef, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetSourcesReq
 */
export class GetSourcesReq extends Message<GetSourcesReq> {
  constructor(data?: PartialMessage<GetSourcesReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetSourcesReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSourcesReq {
    return new GetSourcesReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSourcesReq {
    return new GetSourcesReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSourcesReq {
    return new GetSourcesReq().fromJsonString(jsonString, options);
  }

  static equals(a: GetSourcesReq | PlainMessage<GetSourcesReq> | undefined, b: GetSourcesReq | PlainMessage<GetSourcesReq> | undefined): boolean {
    return proto3.util.equals(GetSourcesReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetSourcesResp
 */
export class GetSourcesResp extends Message<GetSourcesResp> {
  /**
   * @generated from field: repeated arroyo_api.SourceDef sources = 1;
   */
  sources: SourceDef[] = [];

  constructor(data?: PartialMessage<GetSourcesResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetSourcesResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sources", kind: "message", T: SourceDef, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSourcesResp {
    return new GetSourcesResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSourcesResp {
    return new GetSourcesResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSourcesResp {
    return new GetSourcesResp().fromJsonString(jsonString, options);
  }

  static equals(a: GetSourcesResp | PlainMessage<GetSourcesResp> | undefined, b: GetSourcesResp | PlainMessage<GetSourcesResp> | undefined): boolean {
    return proto3.util.equals(GetSourcesResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteSourceReq
 */
export class DeleteSourceReq extends Message<DeleteSourceReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteSourceReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteSourceReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSourceReq {
    return new DeleteSourceReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSourceReq {
    return new DeleteSourceReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSourceReq {
    return new DeleteSourceReq().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSourceReq | PlainMessage<DeleteSourceReq> | undefined, b: DeleteSourceReq | PlainMessage<DeleteSourceReq> | undefined): boolean {
    return proto3.util.equals(DeleteSourceReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteSourceResp
 */
export class DeleteSourceResp extends Message<DeleteSourceResp> {
  constructor(data?: PartialMessage<DeleteSourceResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteSourceResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSourceResp {
    return new DeleteSourceResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSourceResp {
    return new DeleteSourceResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSourceResp {
    return new DeleteSourceResp().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSourceResp | PlainMessage<DeleteSourceResp> | undefined, b: DeleteSourceResp | PlainMessage<DeleteSourceResp> | undefined): boolean {
    return proto3.util.equals(DeleteSourceResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.TestSchemaResp
 */
export class TestSchemaResp extends Message<TestSchemaResp> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid = false;

  /**
   * @generated from field: repeated string errors = 2;
   */
  errors: string[] = [];

  constructor(data?: PartialMessage<TestSchemaResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TestSchemaResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "errors", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestSchemaResp {
    return new TestSchemaResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestSchemaResp {
    return new TestSchemaResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestSchemaResp {
    return new TestSchemaResp().fromJsonString(jsonString, options);
  }

  static equals(a: TestSchemaResp | PlainMessage<TestSchemaResp> | undefined, b: TestSchemaResp | PlainMessage<TestSchemaResp> | undefined): boolean {
    return proto3.util.equals(TestSchemaResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.TestSourceMessage
 */
export class TestSourceMessage extends Message<TestSourceMessage> {
  /**
   * @generated from field: bool error = 1;
   */
  error = false;

  /**
   * @generated from field: bool done = 2;
   */
  done = false;

  /**
   * @generated from field: string message = 3;
   */
  message = "";

  constructor(data?: PartialMessage<TestSourceMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.TestSourceMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "error", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "done", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TestSourceMessage {
    return new TestSourceMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TestSourceMessage {
    return new TestSourceMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TestSourceMessage {
    return new TestSourceMessage().fromJsonString(jsonString, options);
  }

  static equals(a: TestSourceMessage | PlainMessage<TestSourceMessage> | undefined, b: TestSourceMessage | PlainMessage<TestSourceMessage> | undefined): boolean {
    return proto3.util.equals(TestSourceMessage, a, b);
  }
}

/**
 * @generated from message arroyo_api.SourceMetadataResp
 */
export class SourceMetadataResp extends Message<SourceMetadataResp> {
  /**
   * @generated from field: uint32 partitions = 1;
   */
  partitions = 0;

  constructor(data?: PartialMessage<SourceMetadataResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.SourceMetadataResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "partitions", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SourceMetadataResp {
    return new SourceMetadataResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SourceMetadataResp {
    return new SourceMetadataResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SourceMetadataResp {
    return new SourceMetadataResp().fromJsonString(jsonString, options);
  }

  static equals(a: SourceMetadataResp | PlainMessage<SourceMetadataResp> | undefined, b: SourceMetadataResp | PlainMessage<SourceMetadataResp> | undefined): boolean {
    return proto3.util.equals(SourceMetadataResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.ConfluentSchemaReq
 */
export class ConfluentSchemaReq extends Message<ConfluentSchemaReq> {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint = "";

  /**
   * @generated from field: string topic = 2;
   */
  topic = "";

  constructor(data?: PartialMessage<ConfluentSchemaReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ConfluentSchemaReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfluentSchemaReq {
    return new ConfluentSchemaReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfluentSchemaReq {
    return new ConfluentSchemaReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfluentSchemaReq {
    return new ConfluentSchemaReq().fromJsonString(jsonString, options);
  }

  static equals(a: ConfluentSchemaReq | PlainMessage<ConfluentSchemaReq> | undefined, b: ConfluentSchemaReq | PlainMessage<ConfluentSchemaReq> | undefined): boolean {
    return proto3.util.equals(ConfluentSchemaReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.ConfluentSchemaResp
 */
export class ConfluentSchemaResp extends Message<ConfluentSchemaResp> {
  /**
   * @generated from field: string schema = 1;
   */
  schema = "";

  constructor(data?: PartialMessage<ConfluentSchemaResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.ConfluentSchemaResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "schema", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfluentSchemaResp {
    return new ConfluentSchemaResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfluentSchemaResp {
    return new ConfluentSchemaResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfluentSchemaResp {
    return new ConfluentSchemaResp().fromJsonString(jsonString, options);
  }

  static equals(a: ConfluentSchemaResp | PlainMessage<ConfluentSchemaResp> | undefined, b: ConfluentSchemaResp | PlainMessage<ConfluentSchemaResp> | undefined): boolean {
    return proto3.util.equals(ConfluentSchemaResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.KafkaSinkConfig
 */
export class KafkaSinkConfig extends Message<KafkaSinkConfig> {
  /**
   * @generated from field: string topic = 1;
   */
  topic = "";

  /**
   * @generated from field: string connection = 2;
   */
  connection = "";

  constructor(data?: PartialMessage<KafkaSinkConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.KafkaSinkConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "topic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "connection", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KafkaSinkConfig {
    return new KafkaSinkConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KafkaSinkConfig {
    return new KafkaSinkConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KafkaSinkConfig {
    return new KafkaSinkConfig().fromJsonString(jsonString, options);
  }

  static equals(a: KafkaSinkConfig | PlainMessage<KafkaSinkConfig> | undefined, b: KafkaSinkConfig | PlainMessage<KafkaSinkConfig> | undefined): boolean {
    return proto3.util.equals(KafkaSinkConfig, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateSinkReq
 */
export class CreateSinkReq extends Message<CreateSinkReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from oneof arroyo_api.CreateSinkReq.sink_type
   */
  sinkType: {
    /**
     * @generated from field: arroyo_api.KafkaSinkConfig kafka = 2;
     */
    value: KafkaSinkConfig;
    case: "kafka";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateSinkReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateSinkReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "kafka", kind: "message", T: KafkaSinkConfig, oneof: "sink_type" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSinkReq {
    return new CreateSinkReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSinkReq {
    return new CreateSinkReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSinkReq {
    return new CreateSinkReq().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSinkReq | PlainMessage<CreateSinkReq> | undefined, b: CreateSinkReq | PlainMessage<CreateSinkReq> | undefined): boolean {
    return proto3.util.equals(CreateSinkReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.CreateSinkResp
 */
export class CreateSinkResp extends Message<CreateSinkResp> {
  constructor(data?: PartialMessage<CreateSinkResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.CreateSinkResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateSinkResp {
    return new CreateSinkResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateSinkResp {
    return new CreateSinkResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateSinkResp {
    return new CreateSinkResp().fromJsonString(jsonString, options);
  }

  static equals(a: CreateSinkResp | PlainMessage<CreateSinkResp> | undefined, b: CreateSinkResp | PlainMessage<CreateSinkResp> | undefined): boolean {
    return proto3.util.equals(CreateSinkResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetSinksReq
 */
export class GetSinksReq extends Message<GetSinksReq> {
  constructor(data?: PartialMessage<GetSinksReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetSinksReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSinksReq {
    return new GetSinksReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSinksReq {
    return new GetSinksReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSinksReq {
    return new GetSinksReq().fromJsonString(jsonString, options);
  }

  static equals(a: GetSinksReq | PlainMessage<GetSinksReq> | undefined, b: GetSinksReq | PlainMessage<GetSinksReq> | undefined): boolean {
    return proto3.util.equals(GetSinksReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.Sink
 */
export class Sink extends Message<Sink> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from oneof arroyo_api.Sink.sink_type
   */
  sinkType: {
    /**
     * @generated from field: arroyo_api.KafkaSinkConfig kafka = 3;
     */
    value: KafkaSinkConfig;
    case: "kafka";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: int32 producers = 4;
   */
  producers = 0;

  constructor(data?: PartialMessage<Sink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.Sink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "kafka", kind: "message", T: KafkaSinkConfig, oneof: "sink_type" },
    { no: 4, name: "producers", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Sink {
    return new Sink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Sink {
    return new Sink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Sink {
    return new Sink().fromJsonString(jsonString, options);
  }

  static equals(a: Sink | PlainMessage<Sink> | undefined, b: Sink | PlainMessage<Sink> | undefined): boolean {
    return proto3.util.equals(Sink, a, b);
  }
}

/**
 * @generated from message arroyo_api.GetSinksResp
 */
export class GetSinksResp extends Message<GetSinksResp> {
  /**
   * @generated from field: repeated arroyo_api.Sink sinks = 1;
   */
  sinks: Sink[] = [];

  constructor(data?: PartialMessage<GetSinksResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GetSinksResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sinks", kind: "message", T: Sink, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSinksResp {
    return new GetSinksResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSinksResp {
    return new GetSinksResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSinksResp {
    return new GetSinksResp().fromJsonString(jsonString, options);
  }

  static equals(a: GetSinksResp | PlainMessage<GetSinksResp> | undefined, b: GetSinksResp | PlainMessage<GetSinksResp> | undefined): boolean {
    return proto3.util.equals(GetSinksResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteSinkReq
 */
export class DeleteSinkReq extends Message<DeleteSinkReq> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteSinkReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteSinkReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSinkReq {
    return new DeleteSinkReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSinkReq {
    return new DeleteSinkReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSinkReq {
    return new DeleteSinkReq().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSinkReq | PlainMessage<DeleteSinkReq> | undefined, b: DeleteSinkReq | PlainMessage<DeleteSinkReq> | undefined): boolean {
    return proto3.util.equals(DeleteSinkReq, a, b);
  }
}

/**
 * @generated from message arroyo_api.DeleteSinkResp
 */
export class DeleteSinkResp extends Message<DeleteSinkResp> {
  constructor(data?: PartialMessage<DeleteSinkResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.DeleteSinkResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSinkResp {
    return new DeleteSinkResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSinkResp {
    return new DeleteSinkResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSinkResp {
    return new DeleteSinkResp().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteSinkResp | PlainMessage<DeleteSinkResp> | undefined, b: DeleteSinkResp | PlainMessage<DeleteSinkResp> | undefined): boolean {
    return proto3.util.equals(DeleteSinkResp, a, b);
  }
}

/**
 * @generated from message arroyo_api.GrpcOutputSubscription
 */
export class GrpcOutputSubscription extends Message<GrpcOutputSubscription> {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId = "";

  constructor(data?: PartialMessage<GrpcOutputSubscription>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.GrpcOutputSubscription";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "job_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcOutputSubscription {
    return new GrpcOutputSubscription().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcOutputSubscription {
    return new GrpcOutputSubscription().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcOutputSubscription {
    return new GrpcOutputSubscription().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcOutputSubscription | PlainMessage<GrpcOutputSubscription> | undefined, b: GrpcOutputSubscription | PlainMessage<GrpcOutputSubscription> | undefined): boolean {
    return proto3.util.equals(GrpcOutputSubscription, a, b);
  }
}

/**
 * @generated from message arroyo_api.OutputData
 */
export class OutputData extends Message<OutputData> {
  /**
   * @generated from field: string operator_id = 1;
   */
  operatorId = "";

  /**
   * @generated from field: uint64 timestamp = 2;
   */
  timestamp = protoInt64.zero;

  /**
   * @generated from field: string key = 3;
   */
  key = "";

  /**
   * @generated from field: string value = 4;
   */
  value = "";

  constructor(data?: PartialMessage<OutputData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "arroyo_api.OutputData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "operator_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OutputData {
    return new OutputData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OutputData {
    return new OutputData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OutputData {
    return new OutputData().fromJsonString(jsonString, options);
  }

  static equals(a: OutputData | PlainMessage<OutputData> | undefined, b: OutputData | PlainMessage<OutputData> | undefined): boolean {
    return proto3.util.equals(OutputData, a, b);
  }
}

