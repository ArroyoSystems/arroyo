// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/api.proto

package arroyo_rpc

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuiltinSink int32

const (
	BuiltinSink_Null BuiltinSink = 0
	BuiltinSink_Web  BuiltinSink = 1
	BuiltinSink_Log  BuiltinSink = 2
)

// Enum value maps for BuiltinSink.
var (
	BuiltinSink_name = map[int32]string{
		0: "Null",
		1: "Web",
		2: "Log",
	}
	BuiltinSink_value = map[string]int32{
		"Null": 0,
		"Web":  1,
		"Log":  2,
	}
)

func (x BuiltinSink) Enum() *BuiltinSink {
	p := new(BuiltinSink)
	*p = x
	return p
}

func (x BuiltinSink) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuiltinSink) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[0].Descriptor()
}

func (BuiltinSink) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[0]
}

func (x BuiltinSink) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuiltinSink.Descriptor instead.
func (BuiltinSink) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

type UdfLanguage int32

const (
	UdfLanguage_Rust UdfLanguage = 0
)

// Enum value maps for UdfLanguage.
var (
	UdfLanguage_name = map[int32]string{
		0: "Rust",
	}
	UdfLanguage_value = map[string]int32{
		"Rust": 0,
	}
)

func (x UdfLanguage) Enum() *UdfLanguage {
	p := new(UdfLanguage)
	*p = x
	return p
}

func (x UdfLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UdfLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[1].Descriptor()
}

func (UdfLanguage) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[1]
}

func (x UdfLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UdfLanguage.Descriptor instead.
func (UdfLanguage) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

type StopType int32

const (
	StopType_None       StopType = 0
	StopType_Checkpoint StopType = 1
	StopType_Graceful   StopType = 2
	StopType_Immediate  StopType = 3
	StopType_Force      StopType = 4
)

// Enum value maps for StopType.
var (
	StopType_name = map[int32]string{
		0: "None",
		1: "Checkpoint",
		2: "Graceful",
		3: "Immediate",
		4: "Force",
	}
	StopType_value = map[string]int32{
		"None":       0,
		"Checkpoint": 1,
		"Graceful":   2,
		"Immediate":  3,
		"Force":      4,
	}
)

func (x StopType) Enum() *StopType {
	p := new(StopType)
	*p = x
	return p
}

func (x StopType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StopType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[2].Descriptor()
}

func (StopType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[2]
}

func (x StopType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StopType.Descriptor instead.
func (StopType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

type SerializationMode int32

const (
	SerializationMode_JSON                 SerializationMode = 0
	SerializationMode_JSON_SCHEMA_REGISTRY SerializationMode = 1
	SerializationMode_RAW                  SerializationMode = 2
)

// Enum value maps for SerializationMode.
var (
	SerializationMode_name = map[int32]string{
		0: "JSON",
		1: "JSON_SCHEMA_REGISTRY",
		2: "RAW",
	}
	SerializationMode_value = map[string]int32{
		"JSON":                 0,
		"JSON_SCHEMA_REGISTRY": 1,
		"RAW":                  2,
	}
)

func (x SerializationMode) Enum() *SerializationMode {
	p := new(SerializationMode)
	*p = x
	return p
}

func (x SerializationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerializationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[3].Descriptor()
}

func (SerializationMode) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[3]
}

func (x SerializationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SerializationMode.Descriptor instead.
func (SerializationMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

type WasmBehavior int32

const (
	WasmBehavior_MAP       WasmBehavior = 0
	WasmBehavior_OPT_MAP   WasmBehavior = 1
	WasmBehavior_FILTER    WasmBehavior = 2
	WasmBehavior_TIMESTAMP WasmBehavior = 3
	WasmBehavior_KEY_BY    WasmBehavior = 4
)

// Enum value maps for WasmBehavior.
var (
	WasmBehavior_name = map[int32]string{
		0: "MAP",
		1: "OPT_MAP",
		2: "FILTER",
		3: "TIMESTAMP",
		4: "KEY_BY",
	}
	WasmBehavior_value = map[string]int32{
		"MAP":       0,
		"OPT_MAP":   1,
		"FILTER":    2,
		"TIMESTAMP": 3,
		"KEY_BY":    4,
	}
)

func (x WasmBehavior) Enum() *WasmBehavior {
	p := new(WasmBehavior)
	*p = x
	return p
}

func (x WasmBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WasmBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[4].Descriptor()
}

func (WasmBehavior) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[4]
}

func (x WasmBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WasmBehavior.Descriptor instead.
func (WasmBehavior) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

type Aggregator int32

const (
	Aggregator_NONE            Aggregator = 0
	Aggregator_COUNT_AGGREGATE Aggregator = 1
	Aggregator_MAX_AGGREGATE   Aggregator = 2
	Aggregator_MIN_AGGREGATE   Aggregator = 3
	Aggregator_SUM_AGGREGATE   Aggregator = 4
)

// Enum value maps for Aggregator.
var (
	Aggregator_name = map[int32]string{
		0: "NONE",
		1: "COUNT_AGGREGATE",
		2: "MAX_AGGREGATE",
		3: "MIN_AGGREGATE",
		4: "SUM_AGGREGATE",
	}
	Aggregator_value = map[string]int32{
		"NONE":            0,
		"COUNT_AGGREGATE": 1,
		"MAX_AGGREGATE":   2,
		"MIN_AGGREGATE":   3,
		"SUM_AGGREGATE":   4,
	}
)

func (x Aggregator) Enum() *Aggregator {
	p := new(Aggregator)
	*p = x
	return p
}

func (x Aggregator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Aggregator) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[5].Descriptor()
}

func (Aggregator) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[5]
}

func (x Aggregator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Aggregator.Descriptor instead.
func (Aggregator) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

type ExpressionReturnType int32

const (
	ExpressionReturnType_UNUSED_ERT      ExpressionReturnType = 0
	ExpressionReturnType_PREDICATE       ExpressionReturnType = 1
	ExpressionReturnType_RECORD          ExpressionReturnType = 2
	ExpressionReturnType_OPTIONAL_RECORD ExpressionReturnType = 3
)

// Enum value maps for ExpressionReturnType.
var (
	ExpressionReturnType_name = map[int32]string{
		0: "UNUSED_ERT",
		1: "PREDICATE",
		2: "RECORD",
		3: "OPTIONAL_RECORD",
	}
	ExpressionReturnType_value = map[string]int32{
		"UNUSED_ERT":      0,
		"PREDICATE":       1,
		"RECORD":          2,
		"OPTIONAL_RECORD": 3,
	}
)

func (x ExpressionReturnType) Enum() *ExpressionReturnType {
	p := new(ExpressionReturnType)
	*p = x
	return p
}

func (x ExpressionReturnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExpressionReturnType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[6].Descriptor()
}

func (ExpressionReturnType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[6]
}

func (x ExpressionReturnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExpressionReturnType.Descriptor instead.
func (ExpressionReturnType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

type OffsetMode int32

const (
	OffsetMode_EARLIEST OffsetMode = 0
	OffsetMode_LATEST   OffsetMode = 1
)

// Enum value maps for OffsetMode.
var (
	OffsetMode_name = map[int32]string{
		0: "EARLIEST",
		1: "LATEST",
	}
	OffsetMode_value = map[string]int32{
		"EARLIEST": 0,
		"LATEST":   1,
	}
)

func (x OffsetMode) Enum() *OffsetMode {
	p := new(OffsetMode)
	*p = x
	return p
}

func (x OffsetMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OffsetMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[7].Descriptor()
}

func (OffsetMode) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[7]
}

func (x OffsetMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OffsetMode.Descriptor instead.
func (OffsetMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

type EdgeType int32

const (
	EdgeType_UNUSED     EdgeType = 0
	EdgeType_FORWARD    EdgeType = 1
	EdgeType_SHUFFLE    EdgeType = 2
	EdgeType_LEFT_JOIN  EdgeType = 3
	EdgeType_RIGHT_JOIN EdgeType = 4
)

// Enum value maps for EdgeType.
var (
	EdgeType_name = map[int32]string{
		0: "UNUSED",
		1: "FORWARD",
		2: "SHUFFLE",
		3: "LEFT_JOIN",
		4: "RIGHT_JOIN",
	}
	EdgeType_value = map[string]int32{
		"UNUSED":     0,
		"FORWARD":    1,
		"SHUFFLE":    2,
		"LEFT_JOIN":  3,
		"RIGHT_JOIN": 4,
	}
)

func (x EdgeType) Enum() *EdgeType {
	p := new(EdgeType)
	*p = x
	return p
}

func (x EdgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EdgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[8].Descriptor()
}

func (EdgeType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[8]
}

func (x EdgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EdgeType.Descriptor instead.
func (EdgeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

type JobLogLevel int32

const (
	JobLogLevel_INFO  JobLogLevel = 0
	JobLogLevel_WARN  JobLogLevel = 1
	JobLogLevel_ERROR JobLogLevel = 2
)

// Enum value maps for JobLogLevel.
var (
	JobLogLevel_name = map[int32]string{
		0: "INFO",
		1: "WARN",
		2: "ERROR",
	}
	JobLogLevel_value = map[string]int32{
		"INFO":  0,
		"WARN":  1,
		"ERROR": 2,
	}
)

func (x JobLogLevel) Enum() *JobLogLevel {
	p := new(JobLogLevel)
	*p = x
	return p
}

func (x JobLogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobLogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[9].Descriptor()
}

func (JobLogLevel) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[9]
}

func (x JobLogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobLogLevel.Descriptor instead.
func (JobLogLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

type TaskCheckpointEventType int32

const (
	TaskCheckpointEventType_ALIGNMENT_STARTED            TaskCheckpointEventType = 0
	TaskCheckpointEventType_CHECKPOINT_STARTED           TaskCheckpointEventType = 1
	TaskCheckpointEventType_CHECKPOINT_OPERATOR_FINISHED TaskCheckpointEventType = 2
	TaskCheckpointEventType_CHECKPOINT_SYNC_FINISHED     TaskCheckpointEventType = 3
)

// Enum value maps for TaskCheckpointEventType.
var (
	TaskCheckpointEventType_name = map[int32]string{
		0: "ALIGNMENT_STARTED",
		1: "CHECKPOINT_STARTED",
		2: "CHECKPOINT_OPERATOR_FINISHED",
		3: "CHECKPOINT_SYNC_FINISHED",
	}
	TaskCheckpointEventType_value = map[string]int32{
		"ALIGNMENT_STARTED":            0,
		"CHECKPOINT_STARTED":           1,
		"CHECKPOINT_OPERATOR_FINISHED": 2,
		"CHECKPOINT_SYNC_FINISHED":     3,
	}
)

func (x TaskCheckpointEventType) Enum() *TaskCheckpointEventType {
	p := new(TaskCheckpointEventType)
	*p = x
	return p
}

func (x TaskCheckpointEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskCheckpointEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[10].Descriptor()
}

func (TaskCheckpointEventType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[10]
}

func (x TaskCheckpointEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskCheckpointEventType.Descriptor instead.
func (TaskCheckpointEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

type PrimitiveType int32

const (
	PrimitiveType_Int32      PrimitiveType = 0
	PrimitiveType_Int64      PrimitiveType = 1
	PrimitiveType_UInt32     PrimitiveType = 2
	PrimitiveType_UInt64     PrimitiveType = 3
	PrimitiveType_F32        PrimitiveType = 4
	PrimitiveType_F64        PrimitiveType = 5
	PrimitiveType_Bool       PrimitiveType = 6
	PrimitiveType_String     PrimitiveType = 7
	PrimitiveType_Bytes      PrimitiveType = 8
	PrimitiveType_UnixMillis PrimitiveType = 9
)

// Enum value maps for PrimitiveType.
var (
	PrimitiveType_name = map[int32]string{
		0: "Int32",
		1: "Int64",
		2: "UInt32",
		3: "UInt64",
		4: "F32",
		5: "F64",
		6: "Bool",
		7: "String",
		8: "Bytes",
		9: "UnixMillis",
	}
	PrimitiveType_value = map[string]int32{
		"Int32":      0,
		"Int64":      1,
		"UInt32":     2,
		"UInt64":     3,
		"F32":        4,
		"F64":        5,
		"Bool":       6,
		"String":     7,
		"Bytes":      8,
		"UnixMillis": 9,
	}
)

func (x PrimitiveType) Enum() *PrimitiveType {
	p := new(PrimitiveType)
	*p = x
	return p
}

func (x PrimitiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimitiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[11].Descriptor()
}

func (PrimitiveType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[11]
}

func (x PrimitiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimitiveType.Descriptor instead.
func (PrimitiveType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

type KafkaOffsetMode int32

const (
	KafkaOffsetMode_Earliest KafkaOffsetMode = 0
	KafkaOffsetMode_Latest   KafkaOffsetMode = 1
)

// Enum value maps for KafkaOffsetMode.
var (
	KafkaOffsetMode_name = map[int32]string{
		0: "Earliest",
		1: "Latest",
	}
	KafkaOffsetMode_value = map[string]int32{
		"Earliest": 0,
		"Latest":   1,
	}
)

func (x KafkaOffsetMode) Enum() *KafkaOffsetMode {
	p := new(KafkaOffsetMode)
	*p = x
	return p
}

func (x KafkaOffsetMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KafkaOffsetMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[12].Descriptor()
}

func (KafkaOffsetMode) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[12]
}

func (x KafkaOffsetMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KafkaOffsetMode.Descriptor instead.
func (KafkaOffsetMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

type CreateUdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   UdfLanguage `protobuf:"varint,1,opt,name=language,proto3,enum=arroyo_api.UdfLanguage" json:"language,omitempty"`
	Definition string      `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *CreateUdf) Reset() {
	*x = CreateUdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUdf) ProtoMessage() {}

func (x *CreateUdf) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUdf.ProtoReflect.Descriptor instead.
func (*CreateUdf) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUdf) GetLanguage() UdfLanguage {
	if x != nil {
		return x.Language
	}
	return UdfLanguage_Rust
}

func (x *CreateUdf) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

type CreateSqlJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query       string       `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Parallelism uint64       `protobuf:"varint,2,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Udfs        []*CreateUdf `protobuf:"bytes,5,rep,name=udfs,proto3" json:"udfs,omitempty"`
	// Types that are assignable to Sink:
	//
	//	*CreateSqlJob_Builtin
	//	*CreateSqlJob_User
	Sink    isCreateSqlJob_Sink `protobuf_oneof:"sink"`
	Preview bool                `protobuf:"varint,6,opt,name=preview,proto3" json:"preview,omitempty"`
}

func (x *CreateSqlJob) Reset() {
	*x = CreateSqlJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSqlJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSqlJob) ProtoMessage() {}

func (x *CreateSqlJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSqlJob.ProtoReflect.Descriptor instead.
func (*CreateSqlJob) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSqlJob) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *CreateSqlJob) GetParallelism() uint64 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *CreateSqlJob) GetUdfs() []*CreateUdf {
	if x != nil {
		return x.Udfs
	}
	return nil
}

func (m *CreateSqlJob) GetSink() isCreateSqlJob_Sink {
	if m != nil {
		return m.Sink
	}
	return nil
}

func (x *CreateSqlJob) GetBuiltin() BuiltinSink {
	if x, ok := x.GetSink().(*CreateSqlJob_Builtin); ok {
		return x.Builtin
	}
	return BuiltinSink_Null
}

func (x *CreateSqlJob) GetUser() string {
	if x, ok := x.GetSink().(*CreateSqlJob_User); ok {
		return x.User
	}
	return ""
}

func (x *CreateSqlJob) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

type isCreateSqlJob_Sink interface {
	isCreateSqlJob_Sink()
}

type CreateSqlJob_Builtin struct {
	Builtin BuiltinSink `protobuf:"varint,3,opt,name=builtin,proto3,enum=arroyo_api.BuiltinSink,oneof"`
}

type CreateSqlJob_User struct {
	User string `protobuf:"bytes,4,opt,name=user,proto3,oneof"`
}

func (*CreateSqlJob_Builtin) isCreateSqlJob_Sink() {}

func (*CreateSqlJob_User) isCreateSqlJob_Sink() {}

type CreatePipelineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Config:
	//
	//	*CreatePipelineReq_Program
	//	*CreatePipelineReq_Sql
	Config isCreatePipelineReq_Config `protobuf_oneof:"config"`
}

func (x *CreatePipelineReq) Reset() {
	*x = CreatePipelineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePipelineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineReq) ProtoMessage() {}

func (x *CreatePipelineReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineReq.ProtoReflect.Descriptor instead.
func (*CreatePipelineReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePipelineReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *CreatePipelineReq) GetConfig() isCreatePipelineReq_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *CreatePipelineReq) GetProgram() []byte {
	if x, ok := x.GetConfig().(*CreatePipelineReq_Program); ok {
		return x.Program
	}
	return nil
}

func (x *CreatePipelineReq) GetSql() *CreateSqlJob {
	if x, ok := x.GetConfig().(*CreatePipelineReq_Sql); ok {
		return x.Sql
	}
	return nil
}

type isCreatePipelineReq_Config interface {
	isCreatePipelineReq_Config()
}

type CreatePipelineReq_Program struct {
	Program []byte `protobuf:"bytes,2,opt,name=program,proto3,oneof"`
}

type CreatePipelineReq_Sql struct {
	Sql *CreateSqlJob `protobuf:"bytes,3,opt,name=sql,proto3,oneof"`
}

func (*CreatePipelineReq_Program) isCreatePipelineReq_Config() {}

func (*CreatePipelineReq_Sql) isCreatePipelineReq_Config() {}

type CreatePipelineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *CreatePipelineResp) Reset() {
	*x = CreatePipelineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePipelineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineResp) ProtoMessage() {}

func (x *CreatePipelineResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineResp.ProtoReflect.Descriptor instead.
func (*CreatePipelineResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePipelineResp) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type SqlError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SqlError) Reset() {
	*x = SqlError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlError) ProtoMessage() {}

func (x *SqlError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlError.ProtoReflect.Descriptor instead.
func (*SqlError) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *SqlError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SqlErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*SqlError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *SqlErrors) Reset() {
	*x = SqlErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlErrors) ProtoMessage() {}

func (x *SqlErrors) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlErrors.ProtoReflect.Descriptor instead.
func (*SqlErrors) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *SqlErrors) GetErrors() []*SqlError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type PipelineGraphReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string       `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Udfs  []*CreateUdf `protobuf:"bytes,2,rep,name=udfs,proto3" json:"udfs,omitempty"`
}

func (x *PipelineGraphReq) Reset() {
	*x = PipelineGraphReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineGraphReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineGraphReq) ProtoMessage() {}

func (x *PipelineGraphReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineGraphReq.ProtoReflect.Descriptor instead.
func (*PipelineGraphReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *PipelineGraphReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PipelineGraphReq) GetUdfs() []*CreateUdf {
	if x != nil {
		return x.Udfs
	}
	return nil
}

type PipelineGraphResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*PipelineGraphResp_JobGraph
	//	*PipelineGraphResp_Errors
	Result isPipelineGraphResp_Result `protobuf_oneof:"result"`
}

func (x *PipelineGraphResp) Reset() {
	*x = PipelineGraphResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineGraphResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineGraphResp) ProtoMessage() {}

func (x *PipelineGraphResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineGraphResp.ProtoReflect.Descriptor instead.
func (*PipelineGraphResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (m *PipelineGraphResp) GetResult() isPipelineGraphResp_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *PipelineGraphResp) GetJobGraph() *JobGraph {
	if x, ok := x.GetResult().(*PipelineGraphResp_JobGraph); ok {
		return x.JobGraph
	}
	return nil
}

func (x *PipelineGraphResp) GetErrors() *SqlErrors {
	if x, ok := x.GetResult().(*PipelineGraphResp_Errors); ok {
		return x.Errors
	}
	return nil
}

type isPipelineGraphResp_Result interface {
	isPipelineGraphResp_Result()
}

type PipelineGraphResp_JobGraph struct {
	JobGraph *JobGraph `protobuf:"bytes,1,opt,name=job_graph,json=jobGraph,proto3,oneof"`
}

type PipelineGraphResp_Errors struct {
	Errors *SqlErrors `protobuf:"bytes,2,opt,name=errors,proto3,oneof"`
}

func (*PipelineGraphResp_JobGraph) isPipelineGraphResp_Result() {}

func (*PipelineGraphResp_Errors) isPipelineGraphResp_Result() {}

type GetPipelineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *GetPipelineReq) Reset() {
	*x = GetPipelineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineReq) ProtoMessage() {}

func (x *GetPipelineReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineReq.ProtoReflect.Descriptor instead.
func (*GetPipelineReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetPipelineReq) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

type Udf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language   UdfLanguage `protobuf:"varint,1,opt,name=language,proto3,enum=arroyo_api.UdfLanguage" json:"language,omitempty"`
	Definition string      `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *Udf) Reset() {
	*x = Udf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Udf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Udf) ProtoMessage() {}

func (x *Udf) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Udf.ProtoReflect.Descriptor instead.
func (*Udf) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *Udf) GetLanguage() UdfLanguage {
	if x != nil {
		return x.Language
	}
	return UdfLanguage_Rust
}

func (x *Udf) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

type PipelineDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId string    `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Name       string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type       string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Definition *string   `protobuf:"bytes,4,opt,name=definition,proto3,oneof" json:"definition,omitempty"`
	Udfs       []*Udf    `protobuf:"bytes,6,rep,name=udfs,proto3" json:"udfs,omitempty"`
	JobGraph   *JobGraph `protobuf:"bytes,5,opt,name=job_graph,json=jobGraph,proto3" json:"job_graph,omitempty"`
}

func (x *PipelineDef) Reset() {
	*x = PipelineDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDef) ProtoMessage() {}

func (x *PipelineDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDef.ProtoReflect.Descriptor instead.
func (*PipelineDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineDef) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *PipelineDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineDef) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PipelineDef) GetDefinition() string {
	if x != nil && x.Definition != nil {
		return *x.Definition
	}
	return ""
}

func (x *PipelineDef) GetUdfs() []*Udf {
	if x != nil {
		return x.Udfs
	}
	return nil
}

func (x *PipelineDef) GetJobGraph() *JobGraph {
	if x != nil {
		return x.JobGraph
	}
	return nil
}

type CreateJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId               string `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	CheckpointIntervalMicros uint64 `protobuf:"varint,2,opt,name=checkpoint_interval_micros,json=checkpointIntervalMicros,proto3" json:"checkpoint_interval_micros,omitempty"`
	Preview                  bool   `protobuf:"varint,3,opt,name=preview,proto3" json:"preview,omitempty"`
}

func (x *CreateJobReq) Reset() {
	*x = CreateJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobReq) ProtoMessage() {}

func (x *CreateJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobReq.ProtoReflect.Descriptor instead.
func (*CreateJobReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateJobReq) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *CreateJobReq) GetCheckpointIntervalMicros() uint64 {
	if x != nil {
		return x.CheckpointIntervalMicros
	}
	return 0
}

func (x *CreateJobReq) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

type CreateJobResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *CreateJobResp) Reset() {
	*x = CreateJobResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobResp) ProtoMessage() {}

func (x *CreateJobResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobResp.ProtoReflect.Descriptor instead.
func (*CreateJobResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

func (x *CreateJobResp) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type DeleteJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *DeleteJobReq) Reset() {
	*x = DeleteJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobReq) ProtoMessage() {}

func (x *DeleteJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobReq.ProtoReflect.Descriptor instead.
func (*DeleteJobReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteJobReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type DeleteJobResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteJobResp) Reset() {
	*x = DeleteJobResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobResp) ProtoMessage() {}

func (x *DeleteJobResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobResp.ProtoReflect.Descriptor instead.
func (*DeleteJobResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{14}
}

type UpdateJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId                    string    `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	CheckpointIntervalMicros *uint64   `protobuf:"varint,2,opt,name=checkpoint_interval_micros,json=checkpointIntervalMicros,proto3,oneof" json:"checkpoint_interval_micros,omitempty"`
	Stop                     *StopType `protobuf:"varint,3,opt,name=stop,proto3,enum=arroyo_api.StopType,oneof" json:"stop,omitempty"`
	Parallelism              *uint32   `protobuf:"varint,4,opt,name=parallelism,proto3,oneof" json:"parallelism,omitempty"`
}

func (x *UpdateJobReq) Reset() {
	*x = UpdateJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobReq) ProtoMessage() {}

func (x *UpdateJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobReq.ProtoReflect.Descriptor instead.
func (*UpdateJobReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateJobReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UpdateJobReq) GetCheckpointIntervalMicros() uint64 {
	if x != nil && x.CheckpointIntervalMicros != nil {
		return *x.CheckpointIntervalMicros
	}
	return 0
}

func (x *UpdateJobReq) GetStop() StopType {
	if x != nil && x.Stop != nil {
		return *x.Stop
	}
	return StopType_None
}

func (x *UpdateJobReq) GetParallelism() uint32 {
	if x != nil && x.Parallelism != nil {
		return *x.Parallelism
	}
	return 0
}

type UpdateJobResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateJobResp) Reset() {
	*x = UpdateJobResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobResp) ProtoMessage() {}

func (x *UpdateJobResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobResp.ProtoReflect.Descriptor instead.
func (*UpdateJobResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{16}
}

type PipelineProgram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types     []string       `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	OtherDefs []string       `protobuf:"bytes,2,rep,name=other_defs,json=otherDefs,proto3" json:"other_defs,omitempty"`
	Nodes     []*ProgramNode `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges     []*ProgramEdge `protobuf:"bytes,4,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *PipelineProgram) Reset() {
	*x = PipelineProgram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineProgram) ProtoMessage() {}

func (x *PipelineProgram) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineProgram.ProtoReflect.Descriptor instead.
func (*PipelineProgram) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{17}
}

func (x *PipelineProgram) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *PipelineProgram) GetOtherDefs() []string {
	if x != nil {
		return x.OtherDefs
	}
	return nil
}

func (x *PipelineProgram) GetNodes() []*ProgramNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *PipelineProgram) GetEdges() []*ProgramEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type ProgramNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeIndex   int32     `protobuf:"varint,1,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	NodeId      string    `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Parallelism int32     `protobuf:"varint,3,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Operator    *Operator `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *ProgramNode) Reset() {
	*x = ProgramNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramNode) ProtoMessage() {}

func (x *ProgramNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramNode.ProtoReflect.Descriptor instead.
func (*ProgramNode) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{18}
}

func (x *ProgramNode) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

func (x *ProgramNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ProgramNode) GetParallelism() int32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *ProgramNode) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

type ProgramEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamNode   int32    `protobuf:"varint,1,opt,name=upstream_node,json=upstreamNode,proto3" json:"upstream_node,omitempty"`
	DownstreamNode int32    `protobuf:"varint,2,opt,name=downstream_node,json=downstreamNode,proto3" json:"downstream_node,omitempty"`
	KeyType        string   `protobuf:"bytes,3,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ValueType      string   `protobuf:"bytes,4,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	EdgeType       EdgeType `protobuf:"varint,5,opt,name=edge_type,json=edgeType,proto3,enum=arroyo_api.EdgeType" json:"edge_type,omitempty"`
}

func (x *ProgramEdge) Reset() {
	*x = ProgramEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramEdge) ProtoMessage() {}

func (x *ProgramEdge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramEdge.ProtoReflect.Descriptor instead.
func (*ProgramEdge) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{19}
}

func (x *ProgramEdge) GetUpstreamNode() int32 {
	if x != nil {
		return x.UpstreamNode
	}
	return 0
}

func (x *ProgramEdge) GetDownstreamNode() int32 {
	if x != nil {
		return x.DownstreamNode
	}
	return 0
}

func (x *ProgramEdge) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *ProgramEdge) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *ProgramEdge) GetEdgeType() EdgeType {
	if x != nil {
		return x.EdgeType
	}
	return EdgeType_UNUSED
}

type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operator:
	//
	//	*Operator_FileSource
	//	*Operator_ImpulseSource
	//	*Operator_KafkaSource
	//	*Operator_EventSourceSource
	//	*Operator_WasmUdfs
	//	*Operator_Window
	//	*Operator_Aggregator
	//	*Operator_PeriodicWatermark
	//	*Operator_BuiltinSink
	//	*Operator_FileSink
	//	*Operator_WindowJoin
	//	*Operator_KafkaSink
	//	*Operator_NexmarkSource
	//	*Operator_ExpressionOperator
	//	*Operator_Flatten
	//	*Operator_FlattenExpressionOperator
	//	*Operator_SlidingWindowAggregator
	//	*Operator_TumblingWindowAggregator
	//	*Operator_TumblingTopN
	//	*Operator_SlidingAggregatingTopN
	//	*Operator_JoinWithExpiration
	//	*Operator_ExpressionWatermark
	Operator isOperator_Operator `protobuf_oneof:"operator"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{20}
}

func (m *Operator) GetOperator() isOperator_Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (x *Operator) GetFileSource() *FileSource {
	if x, ok := x.GetOperator().(*Operator_FileSource); ok {
		return x.FileSource
	}
	return nil
}

func (x *Operator) GetImpulseSource() *ImpulseSource {
	if x, ok := x.GetOperator().(*Operator_ImpulseSource); ok {
		return x.ImpulseSource
	}
	return nil
}

func (x *Operator) GetKafkaSource() *KafkaSource {
	if x, ok := x.GetOperator().(*Operator_KafkaSource); ok {
		return x.KafkaSource
	}
	return nil
}

func (x *Operator) GetEventSourceSource() *EventSourceSource {
	if x, ok := x.GetOperator().(*Operator_EventSourceSource); ok {
		return x.EventSourceSource
	}
	return nil
}

func (x *Operator) GetWasmUdfs() *WasmUdfs {
	if x, ok := x.GetOperator().(*Operator_WasmUdfs); ok {
		return x.WasmUdfs
	}
	return nil
}

func (x *Operator) GetWindow() *WindowOperator {
	if x, ok := x.GetOperator().(*Operator_Window); ok {
		return x.Window
	}
	return nil
}

func (x *Operator) GetAggregator() Aggregator {
	if x, ok := x.GetOperator().(*Operator_Aggregator); ok {
		return x.Aggregator
	}
	return Aggregator_NONE
}

func (x *Operator) GetPeriodicWatermark() *PeriodicWatermark {
	if x, ok := x.GetOperator().(*Operator_PeriodicWatermark); ok {
		return x.PeriodicWatermark
	}
	return nil
}

func (x *Operator) GetBuiltinSink() BuiltinSink {
	if x, ok := x.GetOperator().(*Operator_BuiltinSink); ok {
		return x.BuiltinSink
	}
	return BuiltinSink_Null
}

func (x *Operator) GetFileSink() *FileSink {
	if x, ok := x.GetOperator().(*Operator_FileSink); ok {
		return x.FileSink
	}
	return nil
}

func (x *Operator) GetWindowJoin() *Window {
	if x, ok := x.GetOperator().(*Operator_WindowJoin); ok {
		return x.WindowJoin
	}
	return nil
}

func (x *Operator) GetKafkaSink() *KafkaSink {
	if x, ok := x.GetOperator().(*Operator_KafkaSink); ok {
		return x.KafkaSink
	}
	return nil
}

func (x *Operator) GetNexmarkSource() *NexmarkSource {
	if x, ok := x.GetOperator().(*Operator_NexmarkSource); ok {
		return x.NexmarkSource
	}
	return nil
}

func (x *Operator) GetExpressionOperator() *ExpressionOperator {
	if x, ok := x.GetOperator().(*Operator_ExpressionOperator); ok {
		return x.ExpressionOperator
	}
	return nil
}

func (x *Operator) GetFlatten() *Flatten {
	if x, ok := x.GetOperator().(*Operator_Flatten); ok {
		return x.Flatten
	}
	return nil
}

func (x *Operator) GetFlattenExpressionOperator() *FlattenExpressionOperator {
	if x, ok := x.GetOperator().(*Operator_FlattenExpressionOperator); ok {
		return x.FlattenExpressionOperator
	}
	return nil
}

func (x *Operator) GetSlidingWindowAggregator() *SlidingWindowAggregator {
	if x, ok := x.GetOperator().(*Operator_SlidingWindowAggregator); ok {
		return x.SlidingWindowAggregator
	}
	return nil
}

func (x *Operator) GetTumblingWindowAggregator() *TumblingWindowAggregator {
	if x, ok := x.GetOperator().(*Operator_TumblingWindowAggregator); ok {
		return x.TumblingWindowAggregator
	}
	return nil
}

func (x *Operator) GetTumblingTopN() *TumblingTopN {
	if x, ok := x.GetOperator().(*Operator_TumblingTopN); ok {
		return x.TumblingTopN
	}
	return nil
}

func (x *Operator) GetSlidingAggregatingTopN() *SlidingAggregatingTopN {
	if x, ok := x.GetOperator().(*Operator_SlidingAggregatingTopN); ok {
		return x.SlidingAggregatingTopN
	}
	return nil
}

func (x *Operator) GetJoinWithExpiration() *JoinWithExpiration {
	if x, ok := x.GetOperator().(*Operator_JoinWithExpiration); ok {
		return x.JoinWithExpiration
	}
	return nil
}

func (x *Operator) GetExpressionWatermark() *ExpressionWatermark {
	if x, ok := x.GetOperator().(*Operator_ExpressionWatermark); ok {
		return x.ExpressionWatermark
	}
	return nil
}

type isOperator_Operator interface {
	isOperator_Operator()
}

type Operator_FileSource struct {
	FileSource *FileSource `protobuf:"bytes,1,opt,name=file_source,json=fileSource,proto3,oneof"`
}

type Operator_ImpulseSource struct {
	ImpulseSource *ImpulseSource `protobuf:"bytes,2,opt,name=impulse_source,json=impulseSource,proto3,oneof"`
}

type Operator_KafkaSource struct {
	KafkaSource *KafkaSource `protobuf:"bytes,3,opt,name=kafka_source,json=kafkaSource,proto3,oneof"`
}

type Operator_EventSourceSource struct {
	EventSourceSource *EventSourceSource `protobuf:"bytes,22,opt,name=event_source_source,json=eventSourceSource,proto3,oneof"`
}

type Operator_WasmUdfs struct {
	WasmUdfs *WasmUdfs `protobuf:"bytes,4,opt,name=wasm_udfs,json=wasmUdfs,proto3,oneof"`
}

type Operator_Window struct {
	Window *WindowOperator `protobuf:"bytes,5,opt,name=window,proto3,oneof"`
}

type Operator_Aggregator struct {
	Aggregator Aggregator `protobuf:"varint,6,opt,name=aggregator,proto3,enum=arroyo_api.Aggregator,oneof"`
}

type Operator_PeriodicWatermark struct {
	PeriodicWatermark *PeriodicWatermark `protobuf:"bytes,7,opt,name=periodic_watermark,json=periodicWatermark,proto3,oneof"`
}

type Operator_BuiltinSink struct {
	BuiltinSink BuiltinSink `protobuf:"varint,8,opt,name=builtin_sink,json=builtinSink,proto3,enum=arroyo_api.BuiltinSink,oneof"`
}

type Operator_FileSink struct {
	FileSink *FileSink `protobuf:"bytes,9,opt,name=file_sink,json=fileSink,proto3,oneof"`
}

type Operator_WindowJoin struct {
	WindowJoin *Window `protobuf:"bytes,10,opt,name=window_join,json=windowJoin,proto3,oneof"`
}

type Operator_KafkaSink struct {
	KafkaSink *KafkaSink `protobuf:"bytes,11,opt,name=kafka_sink,json=kafkaSink,proto3,oneof"`
}

type Operator_NexmarkSource struct {
	NexmarkSource *NexmarkSource `protobuf:"bytes,12,opt,name=nexmark_source,json=nexmarkSource,proto3,oneof"`
}

type Operator_ExpressionOperator struct {
	ExpressionOperator *ExpressionOperator `protobuf:"bytes,13,opt,name=expression_operator,json=expressionOperator,proto3,oneof"`
}

type Operator_Flatten struct {
	Flatten *Flatten `protobuf:"bytes,14,opt,name=flatten,proto3,oneof"`
}

type Operator_FlattenExpressionOperator struct {
	FlattenExpressionOperator *FlattenExpressionOperator `protobuf:"bytes,15,opt,name=flatten_expression_operator,json=flattenExpressionOperator,proto3,oneof"`
}

type Operator_SlidingWindowAggregator struct {
	SlidingWindowAggregator *SlidingWindowAggregator `protobuf:"bytes,17,opt,name=sliding_window_aggregator,json=slidingWindowAggregator,proto3,oneof"`
}

type Operator_TumblingWindowAggregator struct {
	TumblingWindowAggregator *TumblingWindowAggregator `protobuf:"bytes,18,opt,name=tumbling_window_aggregator,json=tumblingWindowAggregator,proto3,oneof"`
}

type Operator_TumblingTopN struct {
	TumblingTopN *TumblingTopN `protobuf:"bytes,19,opt,name=tumbling_top_n,json=tumblingTopN,proto3,oneof"`
}

type Operator_SlidingAggregatingTopN struct {
	SlidingAggregatingTopN *SlidingAggregatingTopN `protobuf:"bytes,20,opt,name=sliding_aggregating_top_n,json=slidingAggregatingTopN,proto3,oneof"`
}

type Operator_JoinWithExpiration struct {
	JoinWithExpiration *JoinWithExpiration `protobuf:"bytes,21,opt,name=join_with_expiration,json=joinWithExpiration,proto3,oneof"`
}

type Operator_ExpressionWatermark struct {
	ExpressionWatermark *ExpressionWatermark `protobuf:"bytes,23,opt,name=expression_watermark,json=expressionWatermark,proto3,oneof"`
}

func (*Operator_FileSource) isOperator_Operator() {}

func (*Operator_ImpulseSource) isOperator_Operator() {}

func (*Operator_KafkaSource) isOperator_Operator() {}

func (*Operator_EventSourceSource) isOperator_Operator() {}

func (*Operator_WasmUdfs) isOperator_Operator() {}

func (*Operator_Window) isOperator_Operator() {}

func (*Operator_Aggregator) isOperator_Operator() {}

func (*Operator_PeriodicWatermark) isOperator_Operator() {}

func (*Operator_BuiltinSink) isOperator_Operator() {}

func (*Operator_FileSink) isOperator_Operator() {}

func (*Operator_WindowJoin) isOperator_Operator() {}

func (*Operator_KafkaSink) isOperator_Operator() {}

func (*Operator_NexmarkSource) isOperator_Operator() {}

func (*Operator_ExpressionOperator) isOperator_Operator() {}

func (*Operator_Flatten) isOperator_Operator() {}

func (*Operator_FlattenExpressionOperator) isOperator_Operator() {}

func (*Operator_SlidingWindowAggregator) isOperator_Operator() {}

func (*Operator_TumblingWindowAggregator) isOperator_Operator() {}

func (*Operator_TumblingTopN) isOperator_Operator() {}

func (*Operator_SlidingAggregatingTopN) isOperator_Operator() {}

func (*Operator_JoinWithExpiration) isOperator_Operator() {}

func (*Operator_ExpressionWatermark) isOperator_Operator() {}

type FileSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir         string `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	MicrosDelay uint64 `protobuf:"varint,2,opt,name=micros_delay,json=microsDelay,proto3" json:"micros_delay,omitempty"`
}

func (x *FileSource) Reset() {
	*x = FileSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSource) ProtoMessage() {}

func (x *FileSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSource.ProtoReflect.Descriptor instead.
func (*FileSource) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{21}
}

func (x *FileSource) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *FileSource) GetMicrosDelay() uint64 {
	if x != nil {
		return x.MicrosDelay
	}
	return 0
}

type ImpulseSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MicrosStart uint64  `protobuf:"varint,1,opt,name=micros_start,json=microsStart,proto3" json:"micros_start,omitempty"`
	TotalEvents *uint64 `protobuf:"varint,2,opt,name=total_events,json=totalEvents,proto3,oneof" json:"total_events,omitempty"`
	// Types that are assignable to Spec:
	//
	//	*ImpulseSource_MicrosDelay
	//	*ImpulseSource_EventQps
	Spec isImpulseSource_Spec `protobuf_oneof:"spec"`
}

func (x *ImpulseSource) Reset() {
	*x = ImpulseSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpulseSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpulseSource) ProtoMessage() {}

func (x *ImpulseSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpulseSource.ProtoReflect.Descriptor instead.
func (*ImpulseSource) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{22}
}

func (x *ImpulseSource) GetMicrosStart() uint64 {
	if x != nil {
		return x.MicrosStart
	}
	return 0
}

func (x *ImpulseSource) GetTotalEvents() uint64 {
	if x != nil && x.TotalEvents != nil {
		return *x.TotalEvents
	}
	return 0
}

func (m *ImpulseSource) GetSpec() isImpulseSource_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *ImpulseSource) GetMicrosDelay() uint64 {
	if x, ok := x.GetSpec().(*ImpulseSource_MicrosDelay); ok {
		return x.MicrosDelay
	}
	return 0
}

func (x *ImpulseSource) GetEventQps() float32 {
	if x, ok := x.GetSpec().(*ImpulseSource_EventQps); ok {
		return x.EventQps
	}
	return 0
}

type isImpulseSource_Spec interface {
	isImpulseSource_Spec()
}

type ImpulseSource_MicrosDelay struct {
	MicrosDelay uint64 `protobuf:"varint,3,opt,name=micros_delay,json=microsDelay,proto3,oneof"`
}

type ImpulseSource_EventQps struct {
	EventQps float32 `protobuf:"fixed32,4,opt,name=event_qps,json=eventQps,proto3,oneof"`
}

func (*ImpulseSource_MicrosDelay) isImpulseSource_Spec() {}

func (*ImpulseSource_EventQps) isImpulseSource_Spec() {}

type KafkaSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic             string            `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	BootstrapServers  []string          `protobuf:"bytes,2,rep,name=bootstrap_servers,json=bootstrapServers,proto3" json:"bootstrap_servers,omitempty"`
	OffsetMode        OffsetMode        `protobuf:"varint,3,opt,name=offset_mode,json=offsetMode,proto3,enum=arroyo_api.OffsetMode" json:"offset_mode,omitempty"`
	SerializationMode SerializationMode `protobuf:"varint,4,opt,name=serialization_mode,json=serializationMode,proto3,enum=arroyo_api.SerializationMode" json:"serialization_mode,omitempty"`
	MessagesPerSecond uint32            `protobuf:"varint,5,opt,name=messages_per_second,json=messagesPerSecond,proto3" json:"messages_per_second,omitempty"`
	ClientConfigs     map[string]string `protobuf:"bytes,6,rep,name=client_configs,json=clientConfigs,proto3" json:"client_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KafkaSource) Reset() {
	*x = KafkaSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSource) ProtoMessage() {}

func (x *KafkaSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSource.ProtoReflect.Descriptor instead.
func (*KafkaSource) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{23}
}

func (x *KafkaSource) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaSource) GetBootstrapServers() []string {
	if x != nil {
		return x.BootstrapServers
	}
	return nil
}

func (x *KafkaSource) GetOffsetMode() OffsetMode {
	if x != nil {
		return x.OffsetMode
	}
	return OffsetMode_EARLIEST
}

func (x *KafkaSource) GetSerializationMode() SerializationMode {
	if x != nil {
		return x.SerializationMode
	}
	return SerializationMode_JSON
}

func (x *KafkaSource) GetMessagesPerSecond() uint32 {
	if x != nil {
		return x.MessagesPerSecond
	}
	return 0
}

func (x *KafkaSource) GetClientConfigs() map[string]string {
	if x != nil {
		return x.ClientConfigs
	}
	return nil
}

type EventSourceSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url               string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Headers           map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SerializationMode SerializationMode `protobuf:"varint,3,opt,name=serialization_mode,json=serializationMode,proto3,enum=arroyo_api.SerializationMode" json:"serialization_mode,omitempty"`
	Events            []string          `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventSourceSource) Reset() {
	*x = EventSourceSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSourceSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSourceSource) ProtoMessage() {}

func (x *EventSourceSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSourceSource.ProtoReflect.Descriptor instead.
func (*EventSourceSource) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{24}
}

func (x *EventSourceSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EventSourceSource) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *EventSourceSource) GetSerializationMode() SerializationMode {
	if x != nil {
		return x.SerializationMode
	}
	return SerializationMode_JSON
}

func (x *EventSourceSource) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type WasmUdfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WasmFunctions []*WasmFunction `protobuf:"bytes,2,rep,name=wasm_functions,json=wasmFunctions,proto3" json:"wasm_functions,omitempty"`
}

func (x *WasmUdfs) Reset() {
	*x = WasmUdfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WasmUdfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmUdfs) ProtoMessage() {}

func (x *WasmUdfs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmUdfs.ProtoReflect.Descriptor instead.
func (*WasmUdfs) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{25}
}

func (x *WasmUdfs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WasmUdfs) GetWasmFunctions() []*WasmFunction {
	if x != nil {
		return x.WasmFunctions
	}
	return nil
}

type WasmFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Behavior     WasmBehavior `protobuf:"varint,1,opt,name=behavior,proto3,enum=arroyo_api.WasmBehavior" json:"behavior,omitempty"`
	Name         string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	KeyArg       string       `protobuf:"bytes,3,opt,name=key_arg,json=keyArg,proto3" json:"key_arg,omitempty"`
	KeyArgType   string       `protobuf:"bytes,4,opt,name=key_arg_type,json=keyArgType,proto3" json:"key_arg_type,omitempty"`
	ValueArg     string       `protobuf:"bytes,5,opt,name=value_arg,json=valueArg,proto3" json:"value_arg,omitempty"`
	ValueArgType string       `protobuf:"bytes,6,opt,name=value_arg_type,json=valueArgType,proto3" json:"value_arg_type,omitempty"`
	ReturnType   string       `protobuf:"bytes,7,opt,name=return_type,json=returnType,proto3" json:"return_type,omitempty"`
	Body         string       `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *WasmFunction) Reset() {
	*x = WasmFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WasmFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmFunction) ProtoMessage() {}

func (x *WasmFunction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmFunction.ProtoReflect.Descriptor instead.
func (*WasmFunction) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{26}
}

func (x *WasmFunction) GetBehavior() WasmBehavior {
	if x != nil {
		return x.Behavior
	}
	return WasmBehavior_MAP
}

func (x *WasmFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WasmFunction) GetKeyArg() string {
	if x != nil {
		return x.KeyArg
	}
	return ""
}

func (x *WasmFunction) GetKeyArgType() string {
	if x != nil {
		return x.KeyArgType
	}
	return ""
}

func (x *WasmFunction) GetValueArg() string {
	if x != nil {
		return x.ValueArg
	}
	return ""
}

func (x *WasmFunction) GetValueArgType() string {
	if x != nil {
		return x.ValueArgType
	}
	return ""
}

func (x *WasmFunction) GetReturnType() string {
	if x != nil {
		return x.ReturnType
	}
	return ""
}

func (x *WasmFunction) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type WindowOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aggregator           *Aggregator           `protobuf:"varint,1,opt,name=aggregator,proto3,enum=arroyo_api.Aggregator,oneof" json:"aggregator,omitempty"`
	ExpressionAggregator *ExpressionAggregator `protobuf:"bytes,3,opt,name=expression_aggregator,json=expressionAggregator,proto3,oneof" json:"expression_aggregator,omitempty"`
	Flatten              bool                  `protobuf:"varint,4,opt,name=flatten,proto3" json:"flatten,omitempty"`
	Window               *Window               `protobuf:"bytes,2,opt,name=window,proto3" json:"window,omitempty"`
}

func (x *WindowOperator) Reset() {
	*x = WindowOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindowOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowOperator) ProtoMessage() {}

func (x *WindowOperator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowOperator.ProtoReflect.Descriptor instead.
func (*WindowOperator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{27}
}

func (x *WindowOperator) GetAggregator() Aggregator {
	if x != nil && x.Aggregator != nil {
		return *x.Aggregator
	}
	return Aggregator_NONE
}

func (x *WindowOperator) GetExpressionAggregator() *ExpressionAggregator {
	if x != nil {
		return x.ExpressionAggregator
	}
	return nil
}

func (x *WindowOperator) GetFlatten() bool {
	if x != nil {
		return x.Flatten
	}
	return false
}

func (x *WindowOperator) GetWindow() *Window {
	if x != nil {
		return x.Window
	}
	return nil
}

type Window struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Window:
	//
	//	*Window_SlidingWindow
	//	*Window_TumblingWindow
	//	*Window_InstantWindow
	Window isWindow_Window `protobuf_oneof:"window"`
}

func (x *Window) Reset() {
	*x = Window{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Window) ProtoMessage() {}

func (x *Window) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Window.ProtoReflect.Descriptor instead.
func (*Window) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{28}
}

func (m *Window) GetWindow() isWindow_Window {
	if m != nil {
		return m.Window
	}
	return nil
}

func (x *Window) GetSlidingWindow() *SlidingWindow {
	if x, ok := x.GetWindow().(*Window_SlidingWindow); ok {
		return x.SlidingWindow
	}
	return nil
}

func (x *Window) GetTumblingWindow() *TumblingWindow {
	if x, ok := x.GetWindow().(*Window_TumblingWindow); ok {
		return x.TumblingWindow
	}
	return nil
}

func (x *Window) GetInstantWindow() *InstantWindow {
	if x, ok := x.GetWindow().(*Window_InstantWindow); ok {
		return x.InstantWindow
	}
	return nil
}

type isWindow_Window interface {
	isWindow_Window()
}

type Window_SlidingWindow struct {
	SlidingWindow *SlidingWindow `protobuf:"bytes,2,opt,name=sliding_window,json=slidingWindow,proto3,oneof"`
}

type Window_TumblingWindow struct {
	TumblingWindow *TumblingWindow `protobuf:"bytes,3,opt,name=tumbling_window,json=tumblingWindow,proto3,oneof"`
}

type Window_InstantWindow struct {
	InstantWindow *InstantWindow `protobuf:"bytes,4,opt,name=instant_window,json=instantWindow,proto3,oneof"`
}

func (*Window_SlidingWindow) isWindow_Window() {}

func (*Window_TumblingWindow) isWindow_Window() {}

func (*Window_InstantWindow) isWindow_Window() {}

type SlidingWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeMicros  uint64 `protobuf:"varint,1,opt,name=size_micros,json=sizeMicros,proto3" json:"size_micros,omitempty"`
	SlideMicros uint64 `protobuf:"varint,2,opt,name=slide_micros,json=slideMicros,proto3" json:"slide_micros,omitempty"`
}

func (x *SlidingWindow) Reset() {
	*x = SlidingWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlidingWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlidingWindow) ProtoMessage() {}

func (x *SlidingWindow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlidingWindow.ProtoReflect.Descriptor instead.
func (*SlidingWindow) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{29}
}

func (x *SlidingWindow) GetSizeMicros() uint64 {
	if x != nil {
		return x.SizeMicros
	}
	return 0
}

func (x *SlidingWindow) GetSlideMicros() uint64 {
	if x != nil {
		return x.SlideMicros
	}
	return 0
}

type TumblingWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeMicros uint64 `protobuf:"varint,1,opt,name=size_micros,json=sizeMicros,proto3" json:"size_micros,omitempty"`
}

func (x *TumblingWindow) Reset() {
	*x = TumblingWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TumblingWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TumblingWindow) ProtoMessage() {}

func (x *TumblingWindow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TumblingWindow.ProtoReflect.Descriptor instead.
func (*TumblingWindow) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{30}
}

func (x *TumblingWindow) GetSizeMicros() uint64 {
	if x != nil {
		return x.SizeMicros
	}
	return 0
}

type InstantWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstantWindow) Reset() {
	*x = InstantWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantWindow) ProtoMessage() {}

func (x *InstantWindow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantWindow.ProtoReflect.Descriptor instead.
func (*InstantWindow) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{31}
}

type ExpressionAggregator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expression string `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *ExpressionAggregator) Reset() {
	*x = ExpressionAggregator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressionAggregator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionAggregator) ProtoMessage() {}

func (x *ExpressionAggregator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionAggregator.ProtoReflect.Descriptor instead.
func (*ExpressionAggregator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{32}
}

func (x *ExpressionAggregator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressionAggregator) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type PeriodicWatermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodMicros      uint64 `protobuf:"varint,1,opt,name=period_micros,json=periodMicros,proto3" json:"period_micros,omitempty"`
	MaxLatenessMicros uint64 `protobuf:"varint,2,opt,name=max_lateness_micros,json=maxLatenessMicros,proto3" json:"max_lateness_micros,omitempty"`
}

func (x *PeriodicWatermark) Reset() {
	*x = PeriodicWatermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicWatermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicWatermark) ProtoMessage() {}

func (x *PeriodicWatermark) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicWatermark.ProtoReflect.Descriptor instead.
func (*PeriodicWatermark) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{33}
}

func (x *PeriodicWatermark) GetPeriodMicros() uint64 {
	if x != nil {
		return x.PeriodMicros
	}
	return 0
}

func (x *PeriodicWatermark) GetMaxLatenessMicros() uint64 {
	if x != nil {
		return x.MaxLatenessMicros
	}
	return 0
}

type ExpressionWatermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodMicros uint64 `protobuf:"varint,1,opt,name=period_micros,json=periodMicros,proto3" json:"period_micros,omitempty"`
	Expression   string `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *ExpressionWatermark) Reset() {
	*x = ExpressionWatermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressionWatermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionWatermark) ProtoMessage() {}

func (x *ExpressionWatermark) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionWatermark.ProtoReflect.Descriptor instead.
func (*ExpressionWatermark) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{34}
}

func (x *ExpressionWatermark) GetPeriodMicros() uint64 {
	if x != nil {
		return x.PeriodMicros
	}
	return 0
}

func (x *ExpressionWatermark) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type KafkaSink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic            string            `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	BootstrapServers []string          `protobuf:"bytes,2,rep,name=bootstrap_servers,json=bootstrapServers,proto3" json:"bootstrap_servers,omitempty"`
	ClientConfigs    map[string]string `protobuf:"bytes,3,rep,name=client_configs,json=clientConfigs,proto3" json:"client_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KafkaSink) Reset() {
	*x = KafkaSink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaSink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSink) ProtoMessage() {}

func (x *KafkaSink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSink.ProtoReflect.Descriptor instead.
func (*KafkaSink) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{35}
}

func (x *KafkaSink) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaSink) GetBootstrapServers() []string {
	if x != nil {
		return x.BootstrapServers
	}
	return nil
}

func (x *KafkaSink) GetClientConfigs() map[string]string {
	if x != nil {
		return x.ClientConfigs
	}
	return nil
}

type FileSink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
}

func (x *FileSink) Reset() {
	*x = FileSink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSink) ProtoMessage() {}

func (x *FileSink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSink.ProtoReflect.Descriptor instead.
func (*FileSink) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{36}
}

func (x *FileSink) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type NexmarkSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstEventRate uint64  `protobuf:"varint,1,opt,name=first_event_rate,json=firstEventRate,proto3" json:"first_event_rate,omitempty"`
	TotalEvents    *uint64 `protobuf:"varint,2,opt,name=total_events,json=totalEvents,proto3,oneof" json:"total_events,omitempty"`
}

func (x *NexmarkSource) Reset() {
	*x = NexmarkSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NexmarkSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NexmarkSource) ProtoMessage() {}

func (x *NexmarkSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NexmarkSource.ProtoReflect.Descriptor instead.
func (*NexmarkSource) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{37}
}

func (x *NexmarkSource) GetFirstEventRate() uint64 {
	if x != nil {
		return x.FirstEventRate
	}
	return 0
}

func (x *NexmarkSource) GetTotalEvents() uint64 {
	if x != nil && x.TotalEvents != nil {
		return *x.TotalEvents
	}
	return 0
}

type ExpressionOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expression string               `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	ReturnType ExpressionReturnType `protobuf:"varint,3,opt,name=return_type,json=returnType,proto3,enum=arroyo_api.ExpressionReturnType" json:"return_type,omitempty"`
}

func (x *ExpressionOperator) Reset() {
	*x = ExpressionOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressionOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionOperator) ProtoMessage() {}

func (x *ExpressionOperator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionOperator.ProtoReflect.Descriptor instead.
func (*ExpressionOperator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{38}
}

func (x *ExpressionOperator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressionOperator) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *ExpressionOperator) GetReturnType() ExpressionReturnType {
	if x != nil {
		return x.ReturnType
	}
	return ExpressionReturnType_UNUSED_ERT
}

type Flatten struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Flatten) Reset() {
	*x = Flatten{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flatten) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flatten) ProtoMessage() {}

func (x *Flatten) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flatten.ProtoReflect.Descriptor instead.
func (*Flatten) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{39}
}

func (x *Flatten) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FlattenExpressionOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expression string               `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	ReturnType ExpressionReturnType `protobuf:"varint,3,opt,name=return_type,json=returnType,proto3,enum=arroyo_api.ExpressionReturnType" json:"return_type,omitempty"`
}

func (x *FlattenExpressionOperator) Reset() {
	*x = FlattenExpressionOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlattenExpressionOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlattenExpressionOperator) ProtoMessage() {}

func (x *FlattenExpressionOperator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlattenExpressionOperator.ProtoReflect.Descriptor instead.
func (*FlattenExpressionOperator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{40}
}

func (x *FlattenExpressionOperator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlattenExpressionOperator) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *FlattenExpressionOperator) GetReturnType() ExpressionReturnType {
	if x != nil {
		return x.ReturnType
	}
	return ExpressionReturnType_UNUSED_ERT
}

type SlidingWindowAggregator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidthMicros    uint64 `protobuf:"varint,1,opt,name=width_micros,json=widthMicros,proto3" json:"width_micros,omitempty"`
	SlideMicros    uint64 `protobuf:"varint,2,opt,name=slide_micros,json=slideMicros,proto3" json:"slide_micros,omitempty"`
	Aggregator     string `protobuf:"bytes,3,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	BinMerger      string `protobuf:"bytes,4,opt,name=bin_merger,json=binMerger,proto3" json:"bin_merger,omitempty"`
	InMemoryAdd    string `protobuf:"bytes,5,opt,name=in_memory_add,json=inMemoryAdd,proto3" json:"in_memory_add,omitempty"`
	InMemoryRemove string `protobuf:"bytes,6,opt,name=in_memory_remove,json=inMemoryRemove,proto3" json:"in_memory_remove,omitempty"`
	BinType        string `protobuf:"bytes,7,opt,name=bin_type,json=binType,proto3" json:"bin_type,omitempty"`
	MemType        string `protobuf:"bytes,8,opt,name=mem_type,json=memType,proto3" json:"mem_type,omitempty"`
}

func (x *SlidingWindowAggregator) Reset() {
	*x = SlidingWindowAggregator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlidingWindowAggregator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlidingWindowAggregator) ProtoMessage() {}

func (x *SlidingWindowAggregator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlidingWindowAggregator.ProtoReflect.Descriptor instead.
func (*SlidingWindowAggregator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{41}
}

func (x *SlidingWindowAggregator) GetWidthMicros() uint64 {
	if x != nil {
		return x.WidthMicros
	}
	return 0
}

func (x *SlidingWindowAggregator) GetSlideMicros() uint64 {
	if x != nil {
		return x.SlideMicros
	}
	return 0
}

func (x *SlidingWindowAggregator) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *SlidingWindowAggregator) GetBinMerger() string {
	if x != nil {
		return x.BinMerger
	}
	return ""
}

func (x *SlidingWindowAggregator) GetInMemoryAdd() string {
	if x != nil {
		return x.InMemoryAdd
	}
	return ""
}

func (x *SlidingWindowAggregator) GetInMemoryRemove() string {
	if x != nil {
		return x.InMemoryRemove
	}
	return ""
}

func (x *SlidingWindowAggregator) GetBinType() string {
	if x != nil {
		return x.BinType
	}
	return ""
}

func (x *SlidingWindowAggregator) GetMemType() string {
	if x != nil {
		return x.MemType
	}
	return ""
}

type TumblingWindowAggregator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidthMicros uint64 `protobuf:"varint,1,opt,name=width_micros,json=widthMicros,proto3" json:"width_micros,omitempty"`
	Aggregator  string `protobuf:"bytes,3,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	BinMerger   string `protobuf:"bytes,4,opt,name=bin_merger,json=binMerger,proto3" json:"bin_merger,omitempty"`
	BinType     string `protobuf:"bytes,7,opt,name=bin_type,json=binType,proto3" json:"bin_type,omitempty"`
}

func (x *TumblingWindowAggregator) Reset() {
	*x = TumblingWindowAggregator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TumblingWindowAggregator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TumblingWindowAggregator) ProtoMessage() {}

func (x *TumblingWindowAggregator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TumblingWindowAggregator.ProtoReflect.Descriptor instead.
func (*TumblingWindowAggregator) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{42}
}

func (x *TumblingWindowAggregator) GetWidthMicros() uint64 {
	if x != nil {
		return x.WidthMicros
	}
	return 0
}

func (x *TumblingWindowAggregator) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *TumblingWindowAggregator) GetBinMerger() string {
	if x != nil {
		return x.BinMerger
	}
	return ""
}

func (x *TumblingWindowAggregator) GetBinType() string {
	if x != nil {
		return x.BinType
	}
	return ""
}

type TumblingTopN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidthMicros      uint64 `protobuf:"varint,1,opt,name=width_micros,json=widthMicros,proto3" json:"width_micros,omitempty"`
	MaxElements      uint64 `protobuf:"varint,2,opt,name=max_elements,json=maxElements,proto3" json:"max_elements,omitempty"`
	Extractor        string `protobuf:"bytes,3,opt,name=extractor,proto3" json:"extractor,omitempty"`
	PartitionKeyType string `protobuf:"bytes,4,opt,name=partition_key_type,json=partitionKeyType,proto3" json:"partition_key_type,omitempty"`
	Converter        string `protobuf:"bytes,5,opt,name=converter,proto3" json:"converter,omitempty"`
}

func (x *TumblingTopN) Reset() {
	*x = TumblingTopN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TumblingTopN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TumblingTopN) ProtoMessage() {}

func (x *TumblingTopN) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TumblingTopN.ProtoReflect.Descriptor instead.
func (*TumblingTopN) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{43}
}

func (x *TumblingTopN) GetWidthMicros() uint64 {
	if x != nil {
		return x.WidthMicros
	}
	return 0
}

func (x *TumblingTopN) GetMaxElements() uint64 {
	if x != nil {
		return x.MaxElements
	}
	return 0
}

func (x *TumblingTopN) GetExtractor() string {
	if x != nil {
		return x.Extractor
	}
	return ""
}

func (x *TumblingTopN) GetPartitionKeyType() string {
	if x != nil {
		return x.PartitionKeyType
	}
	return ""
}

func (x *TumblingTopN) GetConverter() string {
	if x != nil {
		return x.Converter
	}
	return ""
}

type SlidingAggregatingTopN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WidthMicros      uint64 `protobuf:"varint,1,opt,name=width_micros,json=widthMicros,proto3" json:"width_micros,omitempty"`
	SlideMicros      uint64 `protobuf:"varint,2,opt,name=slide_micros,json=slideMicros,proto3" json:"slide_micros,omitempty"`
	BinMerger        string `protobuf:"bytes,3,opt,name=bin_merger,json=binMerger,proto3" json:"bin_merger,omitempty"`
	InMemoryAdd      string `protobuf:"bytes,4,opt,name=in_memory_add,json=inMemoryAdd,proto3" json:"in_memory_add,omitempty"`
	InMemoryRemove   string `protobuf:"bytes,5,opt,name=in_memory_remove,json=inMemoryRemove,proto3" json:"in_memory_remove,omitempty"`
	PartitioningFunc string `protobuf:"bytes,6,opt,name=partitioning_func,json=partitioningFunc,proto3" json:"partitioning_func,omitempty"`
	Extractor        string `protobuf:"bytes,7,opt,name=extractor,proto3" json:"extractor,omitempty"`
	Aggregator       string `protobuf:"bytes,8,opt,name=aggregator,proto3" json:"aggregator,omitempty"`
	BinType          string `protobuf:"bytes,9,opt,name=bin_type,json=binType,proto3" json:"bin_type,omitempty"`
	MemType          string `protobuf:"bytes,10,opt,name=mem_type,json=memType,proto3" json:"mem_type,omitempty"`
	SortKeyType      string `protobuf:"bytes,11,opt,name=sort_key_type,json=sortKeyType,proto3" json:"sort_key_type,omitempty"`
	MaxElements      uint64 `protobuf:"varint,12,opt,name=max_elements,json=maxElements,proto3" json:"max_elements,omitempty"`
}

func (x *SlidingAggregatingTopN) Reset() {
	*x = SlidingAggregatingTopN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlidingAggregatingTopN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlidingAggregatingTopN) ProtoMessage() {}

func (x *SlidingAggregatingTopN) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlidingAggregatingTopN.ProtoReflect.Descriptor instead.
func (*SlidingAggregatingTopN) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{44}
}

func (x *SlidingAggregatingTopN) GetWidthMicros() uint64 {
	if x != nil {
		return x.WidthMicros
	}
	return 0
}

func (x *SlidingAggregatingTopN) GetSlideMicros() uint64 {
	if x != nil {
		return x.SlideMicros
	}
	return 0
}

func (x *SlidingAggregatingTopN) GetBinMerger() string {
	if x != nil {
		return x.BinMerger
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetInMemoryAdd() string {
	if x != nil {
		return x.InMemoryAdd
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetInMemoryRemove() string {
	if x != nil {
		return x.InMemoryRemove
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetPartitioningFunc() string {
	if x != nil {
		return x.PartitioningFunc
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetExtractor() string {
	if x != nil {
		return x.Extractor
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetAggregator() string {
	if x != nil {
		return x.Aggregator
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetBinType() string {
	if x != nil {
		return x.BinType
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetMemType() string {
	if x != nil {
		return x.MemType
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetSortKeyType() string {
	if x != nil {
		return x.SortKeyType
	}
	return ""
}

func (x *SlidingAggregatingTopN) GetMaxElements() uint64 {
	if x != nil {
		return x.MaxElements
	}
	return 0
}

type JoinWithExpiration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftExpirationMicros  uint64 `protobuf:"varint,1,opt,name=left_expiration_micros,json=leftExpirationMicros,proto3" json:"left_expiration_micros,omitempty"`
	RightExpirationMicros uint64 `protobuf:"varint,2,opt,name=right_expiration_micros,json=rightExpirationMicros,proto3" json:"right_expiration_micros,omitempty"`
}

func (x *JoinWithExpiration) Reset() {
	*x = JoinWithExpiration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinWithExpiration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinWithExpiration) ProtoMessage() {}

func (x *JoinWithExpiration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinWithExpiration.ProtoReflect.Descriptor instead.
func (*JoinWithExpiration) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{45}
}

func (x *JoinWithExpiration) GetLeftExpirationMicros() uint64 {
	if x != nil {
		return x.LeftExpirationMicros
	}
	return 0
}

func (x *JoinWithExpiration) GetRightExpirationMicros() uint64 {
	if x != nil {
		return x.RightExpirationMicros
	}
	return 0
}

type GetJobsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetJobsReq) Reset() {
	*x = GetJobsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsReq) ProtoMessage() {}

func (x *GetJobsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsReq.ProtoReflect.Descriptor instead.
func (*GetJobsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{46}
}

type GetJobsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobStatus `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetJobsResp) Reset() {
	*x = GetJobsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsResp) ProtoMessage() {}

func (x *GetJobsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsResp.ProtoReflect.Descriptor instead.
func (*GetJobsResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{47}
}

func (x *GetJobsResp) GetJobs() []*JobStatus {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type JobStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobStatusReq) Reset() {
	*x = JobStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusReq) ProtoMessage() {}

func (x *JobStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusReq.ProtoReflect.Descriptor instead.
func (*JobStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{48}
}

func (x *JobStatusReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobStatus *JobStatus `protobuf:"bytes,1,opt,name=job_status,json=jobStatus,proto3" json:"job_status,omitempty"`
	JobGraph  *JobGraph  `protobuf:"bytes,2,opt,name=job_graph,json=jobGraph,proto3" json:"job_graph,omitempty"`
	// these fields determine the behavior and appearance of the button that controls the pipeline
	Action     *StopType `protobuf:"varint,11,opt,name=action,proto3,enum=arroyo_api.StopType,oneof" json:"action,omitempty"` // the value that should be set against stop_mode if one is available
	ActionText string    `protobuf:"bytes,12,opt,name=action_text,json=actionText,proto3" json:"action_text,omitempty"`       // the text of the button to take the action
	InProgress bool      `protobuf:"varint,13,opt,name=in_progress,json=inProgress,proto3" json:"in_progress,omitempty"`      // whether the button should be represented as a loading
}

func (x *JobDetailsResp) Reset() {
	*x = JobDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetailsResp) ProtoMessage() {}

func (x *JobDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetailsResp.ProtoReflect.Descriptor instead.
func (*JobDetailsResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{49}
}

func (x *JobDetailsResp) GetJobStatus() *JobStatus {
	if x != nil {
		return x.JobStatus
	}
	return nil
}

func (x *JobDetailsResp) GetJobGraph() *JobGraph {
	if x != nil {
		return x.JobGraph
	}
	return nil
}

func (x *JobDetailsResp) GetAction() StopType {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return StopType_None
}

func (x *JobDetailsResp) GetActionText() string {
	if x != nil {
		return x.ActionText
	}
	return ""
}

func (x *JobDetailsResp) GetInProgress() bool {
	if x != nil {
		return x.InProgress
	}
	return false
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId          string  `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	PipelineName   string  `protobuf:"bytes,2,opt,name=pipeline_name,json=pipelineName,proto3" json:"pipeline_name,omitempty"`
	RunningDesired bool    `protobuf:"varint,8,opt,name=running_desired,json=runningDesired,proto3" json:"running_desired,omitempty"`
	State          string  `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	RunId          uint64  `protobuf:"varint,11,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	DefinitionId   string  `protobuf:"bytes,9,opt,name=definition_id,json=definitionId,proto3" json:"definition_id,omitempty"`
	StartTime      *uint64 `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	FinishTime     *uint64 `protobuf:"varint,5,opt,name=finish_time,json=finishTime,proto3,oneof" json:"finish_time,omitempty"`
	Tasks          *uint64 `protobuf:"varint,6,opt,name=tasks,proto3,oneof" json:"tasks,omitempty"`
	Definition     *string `protobuf:"bytes,7,opt,name=definition,proto3,oneof" json:"definition,omitempty"`
	Udfs           []*Udf  `protobuf:"bytes,12,rep,name=udfs,proto3" json:"udfs,omitempty"`
	FailureMessage *string `protobuf:"bytes,10,opt,name=failure_message,json=failureMessage,proto3,oneof" json:"failure_message,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{50}
}

func (x *JobStatus) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobStatus) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *JobStatus) GetRunningDesired() bool {
	if x != nil {
		return x.RunningDesired
	}
	return false
}

func (x *JobStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *JobStatus) GetRunId() uint64 {
	if x != nil {
		return x.RunId
	}
	return 0
}

func (x *JobStatus) GetDefinitionId() string {
	if x != nil {
		return x.DefinitionId
	}
	return ""
}

func (x *JobStatus) GetStartTime() uint64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *JobStatus) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *JobStatus) GetTasks() uint64 {
	if x != nil && x.Tasks != nil {
		return *x.Tasks
	}
	return 0
}

func (x *JobStatus) GetDefinition() string {
	if x != nil && x.Definition != nil {
		return *x.Definition
	}
	return ""
}

func (x *JobStatus) GetUdfs() []*Udf {
	if x != nil {
		return x.Udfs
	}
	return nil
}

func (x *JobStatus) GetFailureMessage() string {
	if x != nil && x.FailureMessage != nil {
		return *x.FailureMessage
	}
	return ""
}

type JobStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobStatus *JobStatus `protobuf:"bytes,1,opt,name=job_status,json=jobStatus,proto3" json:"job_status,omitempty"`
}

func (x *JobStatusResp) Reset() {
	*x = JobStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusResp) ProtoMessage() {}

func (x *JobStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusResp.ProtoReflect.Descriptor instead.
func (*JobStatusResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{51}
}

func (x *JobStatusResp) GetJobStatus() *JobStatus {
	if x != nil {
		return x.JobStatus
	}
	return nil
}

type JobDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobDetailsReq) Reset() {
	*x = JobDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetailsReq) ProtoMessage() {}

func (x *JobDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetailsReq.ProtoReflect.Descriptor instead.
func (*JobDetailsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{52}
}

func (x *JobDetailsReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Operator    string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Parallelism uint32 `protobuf:"varint,3,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
}

func (x *JobNode) Reset() {
	*x = JobNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobNode) ProtoMessage() {}

func (x *JobNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobNode.ProtoReflect.Descriptor instead.
func (*JobNode) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{53}
}

func (x *JobNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *JobNode) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *JobNode) GetParallelism() uint32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

type JobEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcId     string `protobuf:"bytes,1,opt,name=src_id,json=srcId,proto3" json:"src_id,omitempty"`
	DestId    string `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	KeyType   string `protobuf:"bytes,3,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ValueType string `protobuf:"bytes,4,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	EdgeType  string `protobuf:"bytes,5,opt,name=edge_type,json=edgeType,proto3" json:"edge_type,omitempty"`
}

func (x *JobEdge) Reset() {
	*x = JobEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEdge) ProtoMessage() {}

func (x *JobEdge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEdge.ProtoReflect.Descriptor instead.
func (*JobEdge) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{54}
}

func (x *JobEdge) GetSrcId() string {
	if x != nil {
		return x.SrcId
	}
	return ""
}

func (x *JobEdge) GetDestId() string {
	if x != nil {
		return x.DestId
	}
	return ""
}

func (x *JobEdge) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *JobEdge) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *JobEdge) GetEdgeType() string {
	if x != nil {
		return x.EdgeType
	}
	return ""
}

type JobGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*JobNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*JobEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *JobGraph) Reset() {
	*x = JobGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobGraph) ProtoMessage() {}

func (x *JobGraph) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobGraph.ProtoReflect.Descriptor instead.
func (*JobGraph) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{55}
}

func (x *JobGraph) GetNodes() []*JobNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *JobGraph) GetEdges() []*JobEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type OperatorErrorsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *OperatorErrorsReq) Reset() {
	*x = OperatorErrorsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorErrorsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorErrorsReq) ProtoMessage() {}

func (x *OperatorErrorsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorErrorsReq.ProtoReflect.Descriptor instead.
func (*OperatorErrorsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{56}
}

func (x *OperatorErrorsReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobLogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt  uint64      `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	OperatorId *string     `protobuf:"bytes,2,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`
	TaskIndex  *int64      `protobuf:"varint,3,opt,name=task_index,json=taskIndex,proto3,oneof" json:"task_index,omitempty"`
	Level      JobLogLevel `protobuf:"varint,4,opt,name=level,proto3,enum=arroyo_api.JobLogLevel" json:"level,omitempty"`
	Message    string      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Details    string      `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *JobLogMessage) Reset() {
	*x = JobLogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobLogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobLogMessage) ProtoMessage() {}

func (x *JobLogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobLogMessage.ProtoReflect.Descriptor instead.
func (*JobLogMessage) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{57}
}

func (x *JobLogMessage) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *JobLogMessage) GetOperatorId() string {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return ""
}

func (x *JobLogMessage) GetTaskIndex() int64 {
	if x != nil && x.TaskIndex != nil {
		return *x.TaskIndex
	}
	return 0
}

func (x *JobLogMessage) GetLevel() JobLogLevel {
	if x != nil {
		return x.Level
	}
	return JobLogLevel_INFO
}

func (x *JobLogMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JobLogMessage) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type OperatorErrorsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*JobLogMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *OperatorErrorsRes) Reset() {
	*x = OperatorErrorsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorErrorsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorErrorsRes) ProtoMessage() {}

func (x *OperatorErrorsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorErrorsRes.ProtoReflect.Descriptor instead.
func (*OperatorErrorsRes) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{58}
}

func (x *OperatorErrorsRes) GetMessages() []*JobLogMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type TaskCheckpointEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      uint64                  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	EventType TaskCheckpointEventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=arroyo_api.TaskCheckpointEventType" json:"event_type,omitempty"`
}

func (x *TaskCheckpointEvent) Reset() {
	*x = TaskCheckpointEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCheckpointEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCheckpointEvent) ProtoMessage() {}

func (x *TaskCheckpointEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCheckpointEvent.ProtoReflect.Descriptor instead.
func (*TaskCheckpointEvent) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{59}
}

func (x *TaskCheckpointEvent) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TaskCheckpointEvent) GetEventType() TaskCheckpointEventType {
	if x != nil {
		return x.EventType
	}
	return TaskCheckpointEventType_ALIGNMENT_STARTED
}

type TaskCheckpointDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubtaskIndex uint32                 `protobuf:"varint,1,opt,name=subtask_index,json=subtaskIndex,proto3" json:"subtask_index,omitempty"`
	StartTime    uint64                 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime   *uint64                `protobuf:"varint,3,opt,name=finish_time,json=finishTime,proto3,oneof" json:"finish_time,omitempty"`
	Bytes        *uint64                `protobuf:"varint,4,opt,name=bytes,proto3,oneof" json:"bytes,omitempty"`
	Events       []*TaskCheckpointEvent `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *TaskCheckpointDetail) Reset() {
	*x = TaskCheckpointDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCheckpointDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCheckpointDetail) ProtoMessage() {}

func (x *TaskCheckpointDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCheckpointDetail.ProtoReflect.Descriptor instead.
func (*TaskCheckpointDetail) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{60}
}

func (x *TaskCheckpointDetail) GetSubtaskIndex() uint32 {
	if x != nil {
		return x.SubtaskIndex
	}
	return 0
}

func (x *TaskCheckpointDetail) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TaskCheckpointDetail) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *TaskCheckpointDetail) GetBytes() uint64 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

func (x *TaskCheckpointDetail) GetEvents() []*TaskCheckpointEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type OperatorCheckpointDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId string                           `protobuf:"bytes,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	StartTime  uint64                           `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime *uint64                          `protobuf:"varint,3,opt,name=finish_time,json=finishTime,proto3,oneof" json:"finish_time,omitempty"`
	HasState   bool                             `protobuf:"varint,4,opt,name=has_state,json=hasState,proto3" json:"has_state,omitempty"`
	Tasks      map[uint32]*TaskCheckpointDetail `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OperatorCheckpointDetail) Reset() {
	*x = OperatorCheckpointDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorCheckpointDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorCheckpointDetail) ProtoMessage() {}

func (x *OperatorCheckpointDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorCheckpointDetail.ProtoReflect.Descriptor instead.
func (*OperatorCheckpointDetail) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{61}
}

func (x *OperatorCheckpointDetail) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *OperatorCheckpointDetail) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *OperatorCheckpointDetail) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *OperatorCheckpointDetail) GetHasState() bool {
	if x != nil {
		return x.HasState
	}
	return false
}

func (x *OperatorCheckpointDetail) GetTasks() map[uint32]*TaskCheckpointDetail {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CheckpointOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch      uint32  `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Backend    string  `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	StartTime  uint64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime *uint64 `protobuf:"varint,4,opt,name=finish_time,json=finishTime,proto3,oneof" json:"finish_time,omitempty"`
}

func (x *CheckpointOverview) Reset() {
	*x = CheckpointOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointOverview) ProtoMessage() {}

func (x *CheckpointOverview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointOverview.ProtoReflect.Descriptor instead.
func (*CheckpointOverview) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{62}
}

func (x *CheckpointOverview) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *CheckpointOverview) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *CheckpointOverview) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CheckpointOverview) GetFinishTime() uint64 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

type JobCheckpointsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobCheckpointsReq) Reset() {
	*x = JobCheckpointsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCheckpointsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCheckpointsReq) ProtoMessage() {}

func (x *JobCheckpointsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCheckpointsReq.ProtoReflect.Descriptor instead.
func (*JobCheckpointsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{63}
}

func (x *JobCheckpointsReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobCheckpointsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoints []*CheckpointOverview `protobuf:"bytes,1,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *JobCheckpointsResp) Reset() {
	*x = JobCheckpointsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobCheckpointsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCheckpointsResp) ProtoMessage() {}

func (x *JobCheckpointsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCheckpointsResp.ProtoReflect.Descriptor instead.
func (*JobCheckpointsResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{64}
}

func (x *JobCheckpointsResp) GetCheckpoints() []*CheckpointOverview {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

type CheckpointDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Epoch uint32 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *CheckpointDetailsReq) Reset() {
	*x = CheckpointDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointDetailsReq) ProtoMessage() {}

func (x *CheckpointDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointDetailsReq.ProtoReflect.Descriptor instead.
func (*CheckpointDetailsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{65}
}

func (x *CheckpointDetailsReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CheckpointDetailsReq) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type CheckpointDetailsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overview  *CheckpointOverview                  `protobuf:"bytes,1,opt,name=overview,proto3" json:"overview,omitempty"`
	Operators map[string]*OperatorCheckpointDetail `protobuf:"bytes,2,rep,name=operators,proto3" json:"operators,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckpointDetailsResp) Reset() {
	*x = CheckpointDetailsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointDetailsResp) ProtoMessage() {}

func (x *CheckpointDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointDetailsResp.ProtoReflect.Descriptor instead.
func (*CheckpointDetailsResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{66}
}

func (x *CheckpointDetailsResp) GetOverview() *CheckpointOverview {
	if x != nil {
		return x.Overview
	}
	return nil
}

func (x *CheckpointDetailsResp) GetOperators() map[string]*OperatorCheckpointDetail {
	if x != nil {
		return x.Operators
	}
	return nil
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  uint64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{67}
}

func (x *Metric) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Metric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SubtaskMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesRecv    []*Metric `protobuf:"bytes,1,rep,name=bytes_recv,json=bytesRecv,proto3" json:"bytes_recv,omitempty"`
	BytesSent    []*Metric `protobuf:"bytes,2,rep,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	MessagesRecv []*Metric `protobuf:"bytes,3,rep,name=messages_recv,json=messagesRecv,proto3" json:"messages_recv,omitempty"`
	MessagesSent []*Metric `protobuf:"bytes,4,rep,name=messages_sent,json=messagesSent,proto3" json:"messages_sent,omitempty"`
	Backpressure []*Metric `protobuf:"bytes,5,rep,name=backpressure,proto3" json:"backpressure,omitempty"`
}

func (x *SubtaskMetrics) Reset() {
	*x = SubtaskMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubtaskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubtaskMetrics) ProtoMessage() {}

func (x *SubtaskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubtaskMetrics.ProtoReflect.Descriptor instead.
func (*SubtaskMetrics) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{68}
}

func (x *SubtaskMetrics) GetBytesRecv() []*Metric {
	if x != nil {
		return x.BytesRecv
	}
	return nil
}

func (x *SubtaskMetrics) GetBytesSent() []*Metric {
	if x != nil {
		return x.BytesSent
	}
	return nil
}

func (x *SubtaskMetrics) GetMessagesRecv() []*Metric {
	if x != nil {
		return x.MessagesRecv
	}
	return nil
}

func (x *SubtaskMetrics) GetMessagesSent() []*Metric {
	if x != nil {
		return x.MessagesSent
	}
	return nil
}

func (x *SubtaskMetrics) GetBackpressure() []*Metric {
	if x != nil {
		return x.Backpressure
	}
	return nil
}

type JobMetricsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobMetricsReq) Reset() {
	*x = JobMetricsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMetricsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsReq) ProtoMessage() {}

func (x *JobMetricsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsReq.ProtoReflect.Descriptor instead.
func (*JobMetricsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{69}
}

func (x *JobMetricsReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobMetricsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string                                     `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	StartTime uint64                                     `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   uint64                                     `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Metrics   map[string]*JobMetricsResp_OperatorMetrics `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JobMetricsResp) Reset() {
	*x = JobMetricsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMetricsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsResp) ProtoMessage() {}

func (x *JobMetricsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsResp.ProtoReflect.Descriptor instead.
func (*JobMetricsResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{70}
}

func (x *JobMetricsResp) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobMetricsResp) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *JobMetricsResp) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *JobMetricsResp) GetMetrics() map[string]*JobMetricsResp_OperatorMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// connections
type KafkaConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootstrapServers string           `protobuf:"bytes,1,opt,name=bootstrap_servers,json=bootstrapServers,proto3" json:"bootstrap_servers,omitempty"`
	AuthConfig       *KafkaAuthConfig `protobuf:"bytes,2,opt,name=auth_config,json=authConfig,proto3" json:"auth_config,omitempty"`
}

func (x *KafkaConnection) Reset() {
	*x = KafkaConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaConnection) ProtoMessage() {}

func (x *KafkaConnection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaConnection.ProtoReflect.Descriptor instead.
func (*KafkaConnection) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{71}
}

func (x *KafkaConnection) GetBootstrapServers() string {
	if x != nil {
		return x.BootstrapServers
	}
	return ""
}

func (x *KafkaConnection) GetAuthConfig() *KafkaAuthConfig {
	if x != nil {
		return x.AuthConfig
	}
	return nil
}

type KafkaAuthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AuthType:
	//
	//	*KafkaAuthConfig_NoAuth
	//	*KafkaAuthConfig_SaslAuth
	AuthType isKafkaAuthConfig_AuthType `protobuf_oneof:"auth_type"`
}

func (x *KafkaAuthConfig) Reset() {
	*x = KafkaAuthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaAuthConfig) ProtoMessage() {}

func (x *KafkaAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaAuthConfig.ProtoReflect.Descriptor instead.
func (*KafkaAuthConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{72}
}

func (m *KafkaAuthConfig) GetAuthType() isKafkaAuthConfig_AuthType {
	if m != nil {
		return m.AuthType
	}
	return nil
}

func (x *KafkaAuthConfig) GetNoAuth() *NoAuth {
	if x, ok := x.GetAuthType().(*KafkaAuthConfig_NoAuth); ok {
		return x.NoAuth
	}
	return nil
}

func (x *KafkaAuthConfig) GetSaslAuth() *SaslAuth {
	if x, ok := x.GetAuthType().(*KafkaAuthConfig_SaslAuth); ok {
		return x.SaslAuth
	}
	return nil
}

type isKafkaAuthConfig_AuthType interface {
	isKafkaAuthConfig_AuthType()
}

type KafkaAuthConfig_NoAuth struct {
	NoAuth *NoAuth `protobuf:"bytes,1,opt,name=no_auth,json=noAuth,proto3,oneof"`
}

type KafkaAuthConfig_SaslAuth struct {
	SaslAuth *SaslAuth `protobuf:"bytes,2,opt,name=sasl_auth,json=saslAuth,proto3,oneof"`
}

func (*KafkaAuthConfig_NoAuth) isKafkaAuthConfig_AuthType() {}

func (*KafkaAuthConfig_SaslAuth) isKafkaAuthConfig_AuthType() {}

type NoAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoAuth) Reset() {
	*x = NoAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoAuth) ProtoMessage() {}

func (x *NoAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoAuth.ProtoReflect.Descriptor instead.
func (*NoAuth) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{73}
}

type SaslAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Mechanism string `protobuf:"bytes,2,opt,name=mechanism,proto3" json:"mechanism,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SaslAuth) Reset() {
	*x = SaslAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaslAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaslAuth) ProtoMessage() {}

func (x *SaslAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaslAuth.ProtoReflect.Descriptor instead.
func (*SaslAuth) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{74}
}

func (x *SaslAuth) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SaslAuth) GetMechanism() string {
	if x != nil {
		return x.Mechanism
	}
	return ""
}

func (x *SaslAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SaslAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type KinesisConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KinesisConnection) Reset() {
	*x = KinesisConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KinesisConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KinesisConnection) ProtoMessage() {}

func (x *KinesisConnection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KinesisConnection.ProtoReflect.Descriptor instead.
func (*KinesisConnection) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{75}
}

type HttpConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Headers string `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *HttpConnection) Reset() {
	*x = HttpConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpConnection) ProtoMessage() {}

func (x *HttpConnection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpConnection.ProtoReflect.Descriptor instead.
func (*HttpConnection) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{76}
}

func (x *HttpConnection) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpConnection) GetHeaders() string {
	if x != nil {
		return x.Headers
	}
	return ""
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to ConnectionType:
	//
	//	*Connection_Kafka
	//	*Connection_Kinesis
	//	*Connection_Http
	ConnectionType isConnection_ConnectionType `protobuf_oneof:"connection_type"`
	Sources        int32                       `protobuf:"varint,4,opt,name=sources,proto3" json:"sources,omitempty"`
	Sinks          int32                       `protobuf:"varint,5,opt,name=sinks,proto3" json:"sinks,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{77}
}

func (x *Connection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Connection) GetConnectionType() isConnection_ConnectionType {
	if m != nil {
		return m.ConnectionType
	}
	return nil
}

func (x *Connection) GetKafka() *KafkaConnection {
	if x, ok := x.GetConnectionType().(*Connection_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (x *Connection) GetKinesis() *KinesisConnection {
	if x, ok := x.GetConnectionType().(*Connection_Kinesis); ok {
		return x.Kinesis
	}
	return nil
}

func (x *Connection) GetHttp() *HttpConnection {
	if x, ok := x.GetConnectionType().(*Connection_Http); ok {
		return x.Http
	}
	return nil
}

func (x *Connection) GetSources() int32 {
	if x != nil {
		return x.Sources
	}
	return 0
}

func (x *Connection) GetSinks() int32 {
	if x != nil {
		return x.Sinks
	}
	return 0
}

type isConnection_ConnectionType interface {
	isConnection_ConnectionType()
}

type Connection_Kafka struct {
	Kafka *KafkaConnection `protobuf:"bytes,2,opt,name=kafka,proto3,oneof"`
}

type Connection_Kinesis struct {
	Kinesis *KinesisConnection `protobuf:"bytes,3,opt,name=kinesis,proto3,oneof"`
}

type Connection_Http struct {
	Http *HttpConnection `protobuf:"bytes,6,opt,name=http,proto3,oneof"`
}

func (*Connection_Kafka) isConnection_ConnectionType() {}

func (*Connection_Kinesis) isConnection_ConnectionType() {}

func (*Connection_Http) isConnection_ConnectionType() {}

type CreateConnectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to ConnectionType:
	//
	//	*CreateConnectionReq_Kafka
	//	*CreateConnectionReq_Kinesis
	//	*CreateConnectionReq_Http
	ConnectionType isCreateConnectionReq_ConnectionType `protobuf_oneof:"connection_type"`
}

func (x *CreateConnectionReq) Reset() {
	*x = CreateConnectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionReq) ProtoMessage() {}

func (x *CreateConnectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionReq.ProtoReflect.Descriptor instead.
func (*CreateConnectionReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{78}
}

func (x *CreateConnectionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *CreateConnectionReq) GetConnectionType() isCreateConnectionReq_ConnectionType {
	if m != nil {
		return m.ConnectionType
	}
	return nil
}

func (x *CreateConnectionReq) GetKafka() *KafkaConnection {
	if x, ok := x.GetConnectionType().(*CreateConnectionReq_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (x *CreateConnectionReq) GetKinesis() *KinesisConnection {
	if x, ok := x.GetConnectionType().(*CreateConnectionReq_Kinesis); ok {
		return x.Kinesis
	}
	return nil
}

func (x *CreateConnectionReq) GetHttp() *HttpConnection {
	if x, ok := x.GetConnectionType().(*CreateConnectionReq_Http); ok {
		return x.Http
	}
	return nil
}

type isCreateConnectionReq_ConnectionType interface {
	isCreateConnectionReq_ConnectionType()
}

type CreateConnectionReq_Kafka struct {
	Kafka *KafkaConnection `protobuf:"bytes,2,opt,name=kafka,proto3,oneof"`
}

type CreateConnectionReq_Kinesis struct {
	Kinesis *KinesisConnection `protobuf:"bytes,3,opt,name=kinesis,proto3,oneof"`
}

type CreateConnectionReq_Http struct {
	Http *HttpConnection `protobuf:"bytes,4,opt,name=http,proto3,oneof"`
}

func (*CreateConnectionReq_Kafka) isCreateConnectionReq_ConnectionType() {}

func (*CreateConnectionReq_Kinesis) isCreateConnectionReq_ConnectionType() {}

func (*CreateConnectionReq_Http) isCreateConnectionReq_ConnectionType() {}

type CreateConnectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateConnectionResp) Reset() {
	*x = CreateConnectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionResp) ProtoMessage() {}

func (x *CreateConnectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionResp.ProtoReflect.Descriptor instead.
func (*CreateConnectionResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{79}
}

type GetConnectionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConnectionsReq) Reset() {
	*x = GetConnectionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsReq) ProtoMessage() {}

func (x *GetConnectionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsReq.ProtoReflect.Descriptor instead.
func (*GetConnectionsReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{80}
}

type GetConnectionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *GetConnectionsResp) Reset() {
	*x = GetConnectionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionsResp) ProtoMessage() {}

func (x *GetConnectionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionsResp.ProtoReflect.Descriptor instead.
func (*GetConnectionsResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{81}
}

func (x *GetConnectionsResp) GetConnections() []*Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type DeleteConnectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteConnectionReq) Reset() {
	*x = DeleteConnectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionReq) ProtoMessage() {}

func (x *DeleteConnectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionReq.ProtoReflect.Descriptor instead.
func (*DeleteConnectionReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteConnectionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteConnectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConnectionResp) Reset() {
	*x = DeleteConnectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionResp) ProtoMessage() {}

func (x *DeleteConnectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionResp.ProtoReflect.Descriptor instead.
func (*DeleteConnectionResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{83}
}

type JsonSchemaDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonSchema string `protobuf:"bytes,1,opt,name=json_schema,json=jsonSchema,proto3" json:"json_schema,omitempty"`
}

func (x *JsonSchemaDef) Reset() {
	*x = JsonSchemaDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonSchemaDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonSchemaDef) ProtoMessage() {}

func (x *JsonSchemaDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonSchemaDef.ProtoReflect.Descriptor instead.
func (*JsonSchemaDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{84}
}

func (x *JsonSchemaDef) GetJsonSchema() string {
	if x != nil {
		return x.JsonSchema
	}
	return ""
}

type JsonFieldDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*SourceField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *JsonFieldDef) Reset() {
	*x = JsonFieldDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonFieldDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonFieldDef) ProtoMessage() {}

func (x *JsonFieldDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonFieldDef.ProtoReflect.Descriptor instead.
func (*JsonFieldDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{85}
}

func (x *JsonFieldDef) GetFields() []*SourceField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ProtobufSchemaDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtobufSchema string `protobuf:"bytes,1,opt,name=protobuf_schema,json=protobufSchema,proto3" json:"protobuf_schema,omitempty"`
}

func (x *ProtobufSchemaDef) Reset() {
	*x = ProtobufSchemaDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtobufSchemaDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtobufSchemaDef) ProtoMessage() {}

func (x *ProtobufSchemaDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtobufSchemaDef.ProtoReflect.Descriptor instead.
func (*ProtobufSchemaDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{86}
}

func (x *ProtobufSchemaDef) GetProtobufSchema() string {
	if x != nil {
		return x.ProtobufSchema
	}
	return ""
}

type RawJsonDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RawJsonDef) Reset() {
	*x = RawJsonDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawJsonDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawJsonDef) ProtoMessage() {}

func (x *RawJsonDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawJsonDef.ProtoReflect.Descriptor instead.
func (*RawJsonDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{87}
}

type StructType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*SourceField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *StructType) Reset() {
	*x = StructType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructType) ProtoMessage() {}

func (x *StructType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructType.ProtoReflect.Descriptor instead.
func (*StructType) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{88}
}

func (x *StructType) GetFields() []*SourceField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SourceFieldType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*SourceFieldType_Primitive
	//	*SourceFieldType_Struct
	Type isSourceFieldType_Type `protobuf_oneof:"type"`
	// include a sql name if the type is PrimitiveType
	SqlName *string `protobuf:"bytes,3,opt,name=sql_name,json=sqlName,proto3,oneof" json:"sql_name,omitempty"`
}

func (x *SourceFieldType) Reset() {
	*x = SourceFieldType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceFieldType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceFieldType) ProtoMessage() {}

func (x *SourceFieldType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceFieldType.ProtoReflect.Descriptor instead.
func (*SourceFieldType) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{89}
}

func (m *SourceFieldType) GetType() isSourceFieldType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *SourceFieldType) GetPrimitive() PrimitiveType {
	if x, ok := x.GetType().(*SourceFieldType_Primitive); ok {
		return x.Primitive
	}
	return PrimitiveType_Int32
}

func (x *SourceFieldType) GetStruct() *StructType {
	if x, ok := x.GetType().(*SourceFieldType_Struct); ok {
		return x.Struct
	}
	return nil
}

func (x *SourceFieldType) GetSqlName() string {
	if x != nil && x.SqlName != nil {
		return *x.SqlName
	}
	return ""
}

type isSourceFieldType_Type interface {
	isSourceFieldType_Type()
}

type SourceFieldType_Primitive struct {
	Primitive PrimitiveType `protobuf:"varint,1,opt,name=primitive,proto3,enum=arroyo_api.PrimitiveType,oneof"`
}

type SourceFieldType_Struct struct {
	Struct *StructType `protobuf:"bytes,2,opt,name=struct,proto3,oneof"`
}

func (*SourceFieldType_Primitive) isSourceFieldType_Type() {}

func (*SourceFieldType_Struct) isSourceFieldType_Type() {}

type SourceField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string           `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	FieldType *SourceFieldType `protobuf:"bytes,2,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	Nullable  bool             `protobuf:"varint,3,opt,name=nullable,proto3" json:"nullable,omitempty"`
}

func (x *SourceField) Reset() {
	*x = SourceField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceField) ProtoMessage() {}

func (x *SourceField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceField.ProtoReflect.Descriptor instead.
func (*SourceField) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{90}
}

func (x *SourceField) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *SourceField) GetFieldType() *SourceFieldType {
	if x != nil {
		return x.FieldType
	}
	return nil
}

func (x *SourceField) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

type SourceSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schema:
	//
	//	*SourceSchema_Builtin
	//	*SourceSchema_JsonSchema
	//	*SourceSchema_JsonFields
	//	*SourceSchema_Protobuf
	//	*SourceSchema_RawJson
	Schema              isSourceSchema_Schema `protobuf_oneof:"schema"`
	KafkaSchemaRegistry bool                  `protobuf:"varint,7,opt,name=kafka_schema_registry,json=kafkaSchemaRegistry,proto3" json:"kafka_schema_registry,omitempty"`
}

func (x *SourceSchema) Reset() {
	*x = SourceSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceSchema) ProtoMessage() {}

func (x *SourceSchema) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceSchema.ProtoReflect.Descriptor instead.
func (*SourceSchema) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{91}
}

func (m *SourceSchema) GetSchema() isSourceSchema_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *SourceSchema) GetBuiltin() string {
	if x, ok := x.GetSchema().(*SourceSchema_Builtin); ok {
		return x.Builtin
	}
	return ""
}

func (x *SourceSchema) GetJsonSchema() *JsonSchemaDef {
	if x, ok := x.GetSchema().(*SourceSchema_JsonSchema); ok {
		return x.JsonSchema
	}
	return nil
}

func (x *SourceSchema) GetJsonFields() *JsonFieldDef {
	if x, ok := x.GetSchema().(*SourceSchema_JsonFields); ok {
		return x.JsonFields
	}
	return nil
}

func (x *SourceSchema) GetProtobuf() *ProtobufSchemaDef {
	if x, ok := x.GetSchema().(*SourceSchema_Protobuf); ok {
		return x.Protobuf
	}
	return nil
}

func (x *SourceSchema) GetRawJson() *RawJsonDef {
	if x, ok := x.GetSchema().(*SourceSchema_RawJson); ok {
		return x.RawJson
	}
	return nil
}

func (x *SourceSchema) GetKafkaSchemaRegistry() bool {
	if x != nil {
		return x.KafkaSchemaRegistry
	}
	return false
}

type isSourceSchema_Schema interface {
	isSourceSchema_Schema()
}

type SourceSchema_Builtin struct {
	Builtin string `protobuf:"bytes,2,opt,name=builtin,proto3,oneof"`
}

type SourceSchema_JsonSchema struct {
	JsonSchema *JsonSchemaDef `protobuf:"bytes,3,opt,name=json_schema,json=jsonSchema,proto3,oneof"`
}

type SourceSchema_JsonFields struct {
	JsonFields *JsonFieldDef `protobuf:"bytes,4,opt,name=json_fields,json=jsonFields,proto3,oneof"`
}

type SourceSchema_Protobuf struct {
	Protobuf *ProtobufSchemaDef `protobuf:"bytes,5,opt,name=protobuf,proto3,oneof"`
}

type SourceSchema_RawJson struct {
	RawJson *RawJsonDef `protobuf:"bytes,6,opt,name=raw_json,json=rawJson,proto3,oneof"`
}

func (*SourceSchema_Builtin) isSourceSchema_Schema() {}

func (*SourceSchema_JsonSchema) isSourceSchema_Schema() {}

func (*SourceSchema_JsonFields) isSourceSchema_Schema() {}

func (*SourceSchema_Protobuf) isSourceSchema_Schema() {}

func (*SourceSchema_RawJson) isSourceSchema_Schema() {}

type KafkaSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic      string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Connection string `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *KafkaSourceConfig) Reset() {
	*x = KafkaSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSourceConfig) ProtoMessage() {}

func (x *KafkaSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSourceConfig.ProtoReflect.Descriptor instead.
func (*KafkaSourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{92}
}

func (x *KafkaSourceConfig) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaSourceConfig) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

type ImpulseSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntervalMicros  *uint32 `protobuf:"varint,1,opt,name=interval_micros,json=intervalMicros,proto3,oneof" json:"interval_micros,omitempty"`
	EventsPerSecond float32 `protobuf:"fixed32,2,opt,name=events_per_second,json=eventsPerSecond,proto3" json:"events_per_second,omitempty"`
	TotalMessages   *uint32 `protobuf:"varint,3,opt,name=total_messages,json=totalMessages,proto3,oneof" json:"total_messages,omitempty"`
}

func (x *ImpulseSourceConfig) Reset() {
	*x = ImpulseSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpulseSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpulseSourceConfig) ProtoMessage() {}

func (x *ImpulseSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpulseSourceConfig.ProtoReflect.Descriptor instead.
func (*ImpulseSourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{93}
}

func (x *ImpulseSourceConfig) GetIntervalMicros() uint32 {
	if x != nil && x.IntervalMicros != nil {
		return *x.IntervalMicros
	}
	return 0
}

func (x *ImpulseSourceConfig) GetEventsPerSecond() float32 {
	if x != nil {
		return x.EventsPerSecond
	}
	return 0
}

func (x *ImpulseSourceConfig) GetTotalMessages() uint32 {
	if x != nil && x.TotalMessages != nil {
		return *x.TotalMessages
	}
	return 0
}

type FileSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory  string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	IntervalMs uint32 `protobuf:"varint,2,opt,name=interval_ms,json=intervalMs,proto3" json:"interval_ms,omitempty"`
}

func (x *FileSourceConfig) Reset() {
	*x = FileSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSourceConfig) ProtoMessage() {}

func (x *FileSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSourceConfig.ProtoReflect.Descriptor instead.
func (*FileSourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{94}
}

func (x *FileSourceConfig) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *FileSourceConfig) GetIntervalMs() uint32 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

type NexmarkSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventsPerSecond uint32  `protobuf:"varint,1,opt,name=events_per_second,json=eventsPerSecond,proto3" json:"events_per_second,omitempty"`
	RuntimeMicros   *uint64 `protobuf:"varint,2,opt,name=runtime_micros,json=runtimeMicros,proto3,oneof" json:"runtime_micros,omitempty"`
}

func (x *NexmarkSourceConfig) Reset() {
	*x = NexmarkSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NexmarkSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NexmarkSourceConfig) ProtoMessage() {}

func (x *NexmarkSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NexmarkSourceConfig.ProtoReflect.Descriptor instead.
func (*NexmarkSourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{95}
}

func (x *NexmarkSourceConfig) GetEventsPerSecond() uint32 {
	if x != nil {
		return x.EventsPerSecond
	}
	return 0
}

func (x *NexmarkSourceConfig) GetRuntimeMicros() uint64 {
	if x != nil && x.RuntimeMicros != nil {
		return *x.RuntimeMicros
	}
	return 0
}

type EventSourceSourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection string `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Events     string `protobuf:"bytes,3,opt,name=events,proto3" json:"events,omitempty"`
}

func (x *EventSourceSourceConfig) Reset() {
	*x = EventSourceSourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSourceSourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSourceSourceConfig) ProtoMessage() {}

func (x *EventSourceSourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSourceSourceConfig.ProtoReflect.Descriptor instead.
func (*EventSourceSourceConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{96}
}

func (x *EventSourceSourceConfig) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

func (x *EventSourceSourceConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EventSourceSourceConfig) GetEvents() string {
	if x != nil {
		return x.Events
	}
	return ""
}

type EventSourceSourceDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionName string          `protobuf:"bytes,1,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	Connection     *HttpConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	Path           string          `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Events         string          `protobuf:"bytes,4,opt,name=events,proto3" json:"events,omitempty"`
}

func (x *EventSourceSourceDef) Reset() {
	*x = EventSourceSourceDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSourceSourceDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSourceSourceDef) ProtoMessage() {}

func (x *EventSourceSourceDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSourceSourceDef.ProtoReflect.Descriptor instead.
func (*EventSourceSourceDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{97}
}

func (x *EventSourceSourceDef) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *EventSourceSourceDef) GetConnection() *HttpConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *EventSourceSourceDef) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EventSourceSourceDef) GetEvents() string {
	if x != nil {
		return x.Events
	}
	return ""
}

type CreateSourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema *SourceSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	// Types that are assignable to TypeOneof:
	//
	//	*CreateSourceReq_Kafka
	//	*CreateSourceReq_Impulse
	//	*CreateSourceReq_File
	//	*CreateSourceReq_Nexmark
	//	*CreateSourceReq_EventSource
	TypeOneof isCreateSourceReq_TypeOneof `protobuf_oneof:"type_oneof"`
}

func (x *CreateSourceReq) Reset() {
	*x = CreateSourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSourceReq) ProtoMessage() {}

func (x *CreateSourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSourceReq.ProtoReflect.Descriptor instead.
func (*CreateSourceReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{98}
}

func (x *CreateSourceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSourceReq) GetSchema() *SourceSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (m *CreateSourceReq) GetTypeOneof() isCreateSourceReq_TypeOneof {
	if m != nil {
		return m.TypeOneof
	}
	return nil
}

func (x *CreateSourceReq) GetKafka() *KafkaSourceConfig {
	if x, ok := x.GetTypeOneof().(*CreateSourceReq_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (x *CreateSourceReq) GetImpulse() *ImpulseSourceConfig {
	if x, ok := x.GetTypeOneof().(*CreateSourceReq_Impulse); ok {
		return x.Impulse
	}
	return nil
}

func (x *CreateSourceReq) GetFile() *FileSourceConfig {
	if x, ok := x.GetTypeOneof().(*CreateSourceReq_File); ok {
		return x.File
	}
	return nil
}

func (x *CreateSourceReq) GetNexmark() *NexmarkSourceConfig {
	if x, ok := x.GetTypeOneof().(*CreateSourceReq_Nexmark); ok {
		return x.Nexmark
	}
	return nil
}

func (x *CreateSourceReq) GetEventSource() *EventSourceSourceConfig {
	if x, ok := x.GetTypeOneof().(*CreateSourceReq_EventSource); ok {
		return x.EventSource
	}
	return nil
}

type isCreateSourceReq_TypeOneof interface {
	isCreateSourceReq_TypeOneof()
}

type CreateSourceReq_Kafka struct {
	Kafka *KafkaSourceConfig `protobuf:"bytes,3,opt,name=kafka,proto3,oneof"`
}

type CreateSourceReq_Impulse struct {
	Impulse *ImpulseSourceConfig `protobuf:"bytes,4,opt,name=impulse,proto3,oneof"`
}

type CreateSourceReq_File struct {
	File *FileSourceConfig `protobuf:"bytes,5,opt,name=file,proto3,oneof"`
}

type CreateSourceReq_Nexmark struct {
	Nexmark *NexmarkSourceConfig `protobuf:"bytes,6,opt,name=nexmark,proto3,oneof"`
}

type CreateSourceReq_EventSource struct {
	EventSource *EventSourceSourceConfig `protobuf:"bytes,7,opt,name=event_source,json=eventSource,proto3,oneof"`
}

func (*CreateSourceReq_Kafka) isCreateSourceReq_TypeOneof() {}

func (*CreateSourceReq_Impulse) isCreateSourceReq_TypeOneof() {}

func (*CreateSourceReq_File) isCreateSourceReq_TypeOneof() {}

func (*CreateSourceReq_Nexmark) isCreateSourceReq_TypeOneof() {}

func (*CreateSourceReq_EventSource) isCreateSourceReq_TypeOneof() {}

type CreateSourceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSourceResp) Reset() {
	*x = CreateSourceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSourceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSourceResp) ProtoMessage() {}

func (x *CreateSourceResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSourceResp.ProtoReflect.Descriptor instead.
func (*CreateSourceResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{99}
}

type KafkaSourceDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionName string           `protobuf:"bytes,1,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	Connection     *KafkaConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	Topic          string           `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *KafkaSourceDef) Reset() {
	*x = KafkaSourceDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaSourceDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSourceDef) ProtoMessage() {}

func (x *KafkaSourceDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSourceDef.ProtoReflect.Descriptor instead.
func (*KafkaSourceDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{100}
}

func (x *KafkaSourceDef) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *KafkaSourceDef) GetConnection() *KafkaConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *KafkaSourceDef) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type SourceDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64         `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Name       string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema     *SourceSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Connection *string       `protobuf:"bytes,8,opt,name=connection,proto3,oneof" json:"connection,omitempty"`
	Consumers  int32         `protobuf:"varint,10,opt,name=consumers,proto3" json:"consumers,omitempty"`
	// Types that are assignable to SourceType:
	//
	//	*SourceDef_Kafka
	//	*SourceDef_Impulse
	//	*SourceDef_File
	//	*SourceDef_Nexmark
	//	*SourceDef_EventSource
	SourceType isSourceDef_SourceType `protobuf_oneof:"source_type"`
	SqlFields  []*SourceField         `protobuf:"bytes,7,rep,name=sql_fields,json=sqlFields,proto3" json:"sql_fields,omitempty"`
}

func (x *SourceDef) Reset() {
	*x = SourceDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceDef) ProtoMessage() {}

func (x *SourceDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceDef.ProtoReflect.Descriptor instead.
func (*SourceDef) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{101}
}

func (x *SourceDef) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SourceDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceDef) GetSchema() *SourceSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *SourceDef) GetConnection() string {
	if x != nil && x.Connection != nil {
		return *x.Connection
	}
	return ""
}

func (x *SourceDef) GetConsumers() int32 {
	if x != nil {
		return x.Consumers
	}
	return 0
}

func (m *SourceDef) GetSourceType() isSourceDef_SourceType {
	if m != nil {
		return m.SourceType
	}
	return nil
}

func (x *SourceDef) GetKafka() *KafkaSourceDef {
	if x, ok := x.GetSourceType().(*SourceDef_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (x *SourceDef) GetImpulse() *ImpulseSourceConfig {
	if x, ok := x.GetSourceType().(*SourceDef_Impulse); ok {
		return x.Impulse
	}
	return nil
}

func (x *SourceDef) GetFile() *FileSourceConfig {
	if x, ok := x.GetSourceType().(*SourceDef_File); ok {
		return x.File
	}
	return nil
}

func (x *SourceDef) GetNexmark() *NexmarkSourceConfig {
	if x, ok := x.GetSourceType().(*SourceDef_Nexmark); ok {
		return x.Nexmark
	}
	return nil
}

func (x *SourceDef) GetEventSource() *EventSourceSourceDef {
	if x, ok := x.GetSourceType().(*SourceDef_EventSource); ok {
		return x.EventSource
	}
	return nil
}

func (x *SourceDef) GetSqlFields() []*SourceField {
	if x != nil {
		return x.SqlFields
	}
	return nil
}

type isSourceDef_SourceType interface {
	isSourceDef_SourceType()
}

type SourceDef_Kafka struct {
	Kafka *KafkaSourceDef `protobuf:"bytes,3,opt,name=kafka,proto3,oneof"`
}

type SourceDef_Impulse struct {
	Impulse *ImpulseSourceConfig `protobuf:"bytes,4,opt,name=impulse,proto3,oneof"`
}

type SourceDef_File struct {
	File *FileSourceConfig `protobuf:"bytes,5,opt,name=file,proto3,oneof"`
}

type SourceDef_Nexmark struct {
	Nexmark *NexmarkSourceConfig `protobuf:"bytes,6,opt,name=nexmark,proto3,oneof"`
}

type SourceDef_EventSource struct {
	EventSource *EventSourceSourceDef `protobuf:"bytes,11,opt,name=event_source,json=eventSource,proto3,oneof"`
}

func (*SourceDef_Kafka) isSourceDef_SourceType() {}

func (*SourceDef_Impulse) isSourceDef_SourceType() {}

func (*SourceDef_File) isSourceDef_SourceType() {}

func (*SourceDef_Nexmark) isSourceDef_SourceType() {}

func (*SourceDef_EventSource) isSourceDef_SourceType() {}

type GetSourcesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSourcesReq) Reset() {
	*x = GetSourcesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourcesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourcesReq) ProtoMessage() {}

func (x *GetSourcesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourcesReq.ProtoReflect.Descriptor instead.
func (*GetSourcesReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{102}
}

type GetSourcesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources []*SourceDef `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *GetSourcesResp) Reset() {
	*x = GetSourcesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSourcesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSourcesResp) ProtoMessage() {}

func (x *GetSourcesResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSourcesResp.ProtoReflect.Descriptor instead.
func (*GetSourcesResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{103}
}

func (x *GetSourcesResp) GetSources() []*SourceDef {
	if x != nil {
		return x.Sources
	}
	return nil
}

type DeleteSourceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteSourceReq) Reset() {
	*x = DeleteSourceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSourceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSourceReq) ProtoMessage() {}

func (x *DeleteSourceReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSourceReq.ProtoReflect.Descriptor instead.
func (*DeleteSourceReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{104}
}

func (x *DeleteSourceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteSourceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSourceResp) Reset() {
	*x = DeleteSourceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSourceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSourceResp) ProtoMessage() {}

func (x *DeleteSourceResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSourceResp.ProtoReflect.Descriptor instead.
func (*DeleteSourceResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{105}
}

type TestSchemaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid  bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Errors []string `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *TestSchemaResp) Reset() {
	*x = TestSchemaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSchemaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSchemaResp) ProtoMessage() {}

func (x *TestSchemaResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSchemaResp.ProtoReflect.Descriptor instead.
func (*TestSchemaResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{106}
}

func (x *TestSchemaResp) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *TestSchemaResp) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type TestSourceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   bool   `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Done    bool   `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TestSourceMessage) Reset() {
	*x = TestSourceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSourceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSourceMessage) ProtoMessage() {}

func (x *TestSourceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSourceMessage.ProtoReflect.Descriptor instead.
func (*TestSourceMessage) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{107}
}

func (x *TestSourceMessage) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

func (x *TestSourceMessage) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *TestSourceMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SourceMetadataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partitions uint32 `protobuf:"varint,1,opt,name=partitions,proto3" json:"partitions,omitempty"`
}

func (x *SourceMetadataResp) Reset() {
	*x = SourceMetadataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceMetadataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceMetadataResp) ProtoMessage() {}

func (x *SourceMetadataResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceMetadataResp.ProtoReflect.Descriptor instead.
func (*SourceMetadataResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{108}
}

func (x *SourceMetadataResp) GetPartitions() uint32 {
	if x != nil {
		return x.Partitions
	}
	return 0
}

type ConfluentSchemaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Topic    string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *ConfluentSchemaReq) Reset() {
	*x = ConfluentSchemaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfluentSchemaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfluentSchemaReq) ProtoMessage() {}

func (x *ConfluentSchemaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfluentSchemaReq.ProtoReflect.Descriptor instead.
func (*ConfluentSchemaReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{109}
}

func (x *ConfluentSchemaReq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ConfluentSchemaReq) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type ConfluentSchemaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema string `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
}

func (x *ConfluentSchemaResp) Reset() {
	*x = ConfluentSchemaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfluentSchemaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfluentSchemaResp) ProtoMessage() {}

func (x *ConfluentSchemaResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfluentSchemaResp.ProtoReflect.Descriptor instead.
func (*ConfluentSchemaResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{110}
}

func (x *ConfluentSchemaResp) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type KafkaSinkConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic      string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Connection string `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *KafkaSinkConfig) Reset() {
	*x = KafkaSinkConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaSinkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaSinkConfig) ProtoMessage() {}

func (x *KafkaSinkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaSinkConfig.ProtoReflect.Descriptor instead.
func (*KafkaSinkConfig) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{111}
}

func (x *KafkaSinkConfig) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaSinkConfig) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

type CreateSinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to SinkType:
	//
	//	*CreateSinkReq_Kafka
	SinkType isCreateSinkReq_SinkType `protobuf_oneof:"sink_type"`
}

func (x *CreateSinkReq) Reset() {
	*x = CreateSinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSinkReq) ProtoMessage() {}

func (x *CreateSinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSinkReq.ProtoReflect.Descriptor instead.
func (*CreateSinkReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{112}
}

func (x *CreateSinkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *CreateSinkReq) GetSinkType() isCreateSinkReq_SinkType {
	if m != nil {
		return m.SinkType
	}
	return nil
}

func (x *CreateSinkReq) GetKafka() *KafkaSinkConfig {
	if x, ok := x.GetSinkType().(*CreateSinkReq_Kafka); ok {
		return x.Kafka
	}
	return nil
}

type isCreateSinkReq_SinkType interface {
	isCreateSinkReq_SinkType()
}

type CreateSinkReq_Kafka struct {
	Kafka *KafkaSinkConfig `protobuf:"bytes,2,opt,name=kafka,proto3,oneof"`
}

func (*CreateSinkReq_Kafka) isCreateSinkReq_SinkType() {}

type CreateSinkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSinkResp) Reset() {
	*x = CreateSinkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSinkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSinkResp) ProtoMessage() {}

func (x *CreateSinkResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSinkResp.ProtoReflect.Descriptor instead.
func (*CreateSinkResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{113}
}

type GetSinksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSinksReq) Reset() {
	*x = GetSinksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSinksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSinksReq) ProtoMessage() {}

func (x *GetSinksReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSinksReq.ProtoReflect.Descriptor instead.
func (*GetSinksReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{114}
}

type Sink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to SinkType:
	//
	//	*Sink_Kafka
	SinkType  isSink_SinkType `protobuf_oneof:"sink_type"`
	Producers int32           `protobuf:"varint,4,opt,name=producers,proto3" json:"producers,omitempty"`
}

func (x *Sink) Reset() {
	*x = Sink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sink) ProtoMessage() {}

func (x *Sink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sink.ProtoReflect.Descriptor instead.
func (*Sink) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{115}
}

func (x *Sink) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Sink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Sink) GetSinkType() isSink_SinkType {
	if m != nil {
		return m.SinkType
	}
	return nil
}

func (x *Sink) GetKafka() *KafkaSinkConfig {
	if x, ok := x.GetSinkType().(*Sink_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (x *Sink) GetProducers() int32 {
	if x != nil {
		return x.Producers
	}
	return 0
}

type isSink_SinkType interface {
	isSink_SinkType()
}

type Sink_Kafka struct {
	Kafka *KafkaSinkConfig `protobuf:"bytes,3,opt,name=kafka,proto3,oneof"`
}

func (*Sink_Kafka) isSink_SinkType() {}

type GetSinksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sinks []*Sink `protobuf:"bytes,1,rep,name=sinks,proto3" json:"sinks,omitempty"`
}

func (x *GetSinksResp) Reset() {
	*x = GetSinksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSinksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSinksResp) ProtoMessage() {}

func (x *GetSinksResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSinksResp.ProtoReflect.Descriptor instead.
func (*GetSinksResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{116}
}

func (x *GetSinksResp) GetSinks() []*Sink {
	if x != nil {
		return x.Sinks
	}
	return nil
}

type DeleteSinkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteSinkReq) Reset() {
	*x = DeleteSinkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSinkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSinkReq) ProtoMessage() {}

func (x *DeleteSinkReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSinkReq.ProtoReflect.Descriptor instead.
func (*DeleteSinkReq) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{117}
}

func (x *DeleteSinkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteSinkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSinkResp) Reset() {
	*x = DeleteSinkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSinkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSinkResp) ProtoMessage() {}

func (x *DeleteSinkResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSinkResp.ProtoReflect.Descriptor instead.
func (*DeleteSinkResp) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{118}
}

type GrpcOutputSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *GrpcOutputSubscription) Reset() {
	*x = GrpcOutputSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcOutputSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcOutputSubscription) ProtoMessage() {}

func (x *GrpcOutputSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcOutputSubscription.ProtoReflect.Descriptor instead.
func (*GrpcOutputSubscription) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{119}
}

func (x *GrpcOutputSubscription) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type OutputData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId string `protobuf:"bytes,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Timestamp  uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OutputData) Reset() {
	*x = OutputData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputData) ProtoMessage() {}

func (x *OutputData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputData.ProtoReflect.Descriptor instead.
func (*OutputData) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{120}
}

func (x *OutputData) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *OutputData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *OutputData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OutputData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type JobMetricsResp_OperatorMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtasks map[uint32]*SubtaskMetrics `protobuf:"bytes,1,rep,name=subtasks,proto3" json:"subtasks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JobMetricsResp_OperatorMetrics) Reset() {
	*x = JobMetricsResp_OperatorMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMetricsResp_OperatorMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetricsResp_OperatorMetrics) ProtoMessage() {}

func (x *JobMetricsResp_OperatorMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetricsResp_OperatorMetrics.ProtoReflect.Descriptor instead.
func (*JobMetricsResp_OperatorMetrics) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{70, 0}
}

func (x *JobMetricsResp_OperatorMetrics) GetSubtasks() map[uint32]*SubtaskMetrics {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x64, 0x66, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x64, 0x66, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xde, 0x01,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c,
	0x69, 0x73, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x64, 0x66, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x64, 0x66, 0x52, 0x04, 0x75, 0x64, 0x66,
	0x73, 0x12, 0x33, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x62,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x69, 0x6e, 0x6b, 0x22, 0x7b,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x6c, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x03, 0x73, 0x71,
	0x6c, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x35, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x22, 0x24, 0x0a, 0x08, 0x53, 0x71, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x09, 0x53, 0x71, 0x6c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x71, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0x53, 0x0a, 0x10, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x29, 0x0a,
	0x04, 0x75, 0x64, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x64, 0x66, 0x52, 0x04, 0x75, 0x64, 0x66, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x11, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a,
	0x6f, 0x62, 0x47, 0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x71, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x31,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x22, 0x5a, 0x0a, 0x03, 0x55, 0x64, 0x66, 0x12, 0x33, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x64, 0x66, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x01,
	0x0a, 0x0b, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04, 0x75,
	0x64, 0x66, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x72, 0x6f,
	0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x64, 0x66, 0x52, 0x04, 0x75, 0x64, 0x66, 0x73,
	0x12, 0x31, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x26, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf6, 0x01, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x18, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x04, 0x73,
	0x74, 0x6f, 0x70, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x69, 0x73, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x1d, 0x0a,
	0x1b, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x69, 0x73, 0x6d, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa4, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x44, 0x65, 0x66, 0x73, 0x12,
	0x2d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0x99, 0x01,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65,
	0x6c, 0x69, 0x73, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61,
	0x6c, 0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f,
	0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x64, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x09, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x65, 0x64, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xc2, 0x0c, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x39, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0e,
	0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x3c, 0x0a, 0x0c, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4f,
	0x0a, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x11, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x33, 0x0a, 0x09, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x75, 0x64, 0x66, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x57, 0x61, 0x73, 0x6d, 0x55, 0x64, 0x66, 0x73, 0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x73, 0x6d,
	0x55, 0x64, 0x66, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63,
	0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x48,
	0x00, 0x52, 0x11, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3c, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f,
	0x73, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53,
	0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x69,
	0x6e, 0x6b, 0x12, 0x33, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x35, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x48, 0x00, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x36,
	0x0a, 0x0a, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x73, 0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x61, 0x66,
	0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x42, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x78, 0x6d,
	0x61, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x6d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x13, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x12, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x0a,
	0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x67,
	0x0a, 0x1b, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x19, 0x66, 0x6c,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x61, 0x0a, 0x19, 0x73, 0x6c, 0x69, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x17, 0x73, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x64, 0x0a, 0x1a, 0x74, 0x75,
	0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x75, 0x6d, 0x62,
	0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x18, 0x74, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x40, 0x0a, 0x0e, 0x74, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x6f,
	0x70, 0x4e, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x6f,
	0x70, 0x4e, 0x12, 0x5f, 0x0a, 0x19, 0x73, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x4e, 0x48, 0x00, 0x52, 0x16, 0x73, 0x6c, 0x69,
	0x64, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x70, 0x4e, 0x12, 0x52, 0x0a, 0x14, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x12, 0x6a, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x74,
	0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x48, 0x00, 0x52, 0x13, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x0a, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0xb7, 0x01, 0x0a,
	0x0d, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0c, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x0b, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x48, 0x00, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x70, 0x73, 0x42, 0x06, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9c, 0x03, 0x0a, 0x0b, 0x4b, 0x61, 0x66, 0x6b, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2b, 0x0a, 0x11,
	0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x12, 0x51, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x44, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x08, 0x57, 0x61, 0x73, 0x6d, 0x55, 0x64, 0x66,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x77, 0x61, 0x73, 0x6d, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8b, 0x02, 0x0a, 0x0c, 0x57, 0x61, 0x73, 0x6d, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f,
	0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x52, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x41, 0x72, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x6b, 0x65,
	0x79, 0x5f, 0x61, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6b, 0x65, 0x79, 0x41, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x72, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x98, 0x02, 0x0a, 0x0e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x15, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x01, 0x52, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0xe1, 0x01, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x6c,
	0x69, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48, 0x00, 0x52,
	0x0d, 0x73, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x45,
	0x0a, 0x0f, 0x74, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x42, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x42, 0x08, 0x0a, 0x06, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x22, 0x53, 0x0a, 0x0d, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x6c, 0x69,
	0x64, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x22, 0x31, 0x0a, 0x0e, 0x54, 0x75, 0x6d, 0x62,
	0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69,
	0x7a, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x73, 0x69, 0x7a, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x4a, 0x0a, 0x14,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x6d, 0x61, 0x78, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x22, 0x5a, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe1,
	0x01, 0x0a, 0x09, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x62,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x4f, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x1a, 0x40, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x27, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x72, 0x0a, 0x0d, 0x4e,
	0x65, 0x78, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x8b, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1d, 0x0a,
	0x07, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a,
	0x19, 0x46, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xa2, 0x02, 0x0a, 0x17, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x4d, 0x65, 0x72, 0x67,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x61, 0x64, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x18, 0x54, 0x75, 0x6d, 0x62, 0x6c,
	0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x5f, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x54, 0x75, 0x6d, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70,
	0x4e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x72, 0x22, 0xb3, 0x03, 0x0a, 0x16, 0x53, 0x6c, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x70, 0x4e, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x77, 0x69, 0x64, 0x74, 0x68, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x41, 0x64, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x75, 0x6e, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x12, 0x4a, 0x6f, 0x69, 0x6e,
	0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x16, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x6c, 0x65, 0x66, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x72, 0x69, 0x67, 0x68, 0x74, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x22, 0x0c, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x22, 0x38, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x6a, 0x6f, 0x62,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04,
	0x6a, 0x6f, 0x62, 0x73, 0x22, 0x25, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x0e,
	0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34,
	0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x08, 0x6a,
	0x6f, 0x62, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xeb, 0x03, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x64, 0x66, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x64, 0x66, 0x52, 0x04, 0x75, 0x64, 0x66, 0x73, 0x12, 0x2c, 0x0a, 0x0f, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x0d,
	0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c,
	0x69, 0x73, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x6c, 0x65, 0x6c, 0x69, 0x73, 0x6d, 0x22, 0x90, 0x01, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x45, 0x64,
	0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x60, 0x0a, 0x08, 0x4a, 0x6f, 0x62,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62,
	0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x11, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x4c,
	0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a,
	0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x4a, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x6d, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xee, 0x01, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x01, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0xd0, 0x02, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x45, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x5a, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x2a, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x12, 0x4a,
	0x6f, 0x62, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x43, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x4e,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x62,
	0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x32, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x74, 0x61,
	0x73, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x76, 0x12, 0x31, 0x0a, 0x0a,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12,
	0x37, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x76,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x63, 0x76, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x0c, 0x62, 0x61, 0x63,
	0x6b, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x22, 0x26, 0x0a, 0x0d, 0x4a, 0x6f, 0x62,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x22, 0xcf, 0x03, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0xc0, 0x01, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x54, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x1a, 0x57, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x66, 0x0a, 0x0c, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a, 0x0f, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x61, 0x73, 0x6c, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x73, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x61, 0x73, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x08, 0x0a, 0x06, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x68,
	0x22, 0x7c, 0x0a, 0x08, 0x53, 0x61, 0x73, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x63, 0x68,
	0x61, 0x6e, 0x69, 0x73, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x13,
	0x0a, 0x11, 0x4b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x0e, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x22, 0x85, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x6b, 0x69, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x69, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x6b, 0x69,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x69, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x69,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a, 0x0d, 0x4a, 0x73,
	0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x3f, 0x0a, 0x0c,
	0x4a, 0x73, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x12, 0x2f, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x3c, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44,
	0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x0c, 0x0a, 0x0a, 0x52,
	0x61, 0x77, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x22, 0x3d, 0x0a, 0x0a, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x09,
	0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x71, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x73,
	0x71, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x71, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xd5, 0x02, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1a, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x12, 0x3c, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44,
	0x65, 0x66, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x3b, 0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x48,
	0x00, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3b, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x66, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x61,
	0x77, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x77, 0x4a, 0x73, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x77, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x15, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x6b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x49, 0x0a,
	0x11, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x70,
	0x75, 0x6c, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2c, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x51, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x13, 0x4e, 0x65, 0x78, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x94, 0x03, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x35,
	0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05,
	0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x3b, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x75, 0x6c,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x78, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x48, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x72, 0x6f,
	0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x12, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x8c, 0x01, 0x0a, 0x0e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66,
	0x6b, 0x61, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0xa3,
	0x04, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x48, 0x00, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x3b, 0x0a, 0x07, 0x69, 0x6d, 0x70,
	0x75, 0x6c, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x07, 0x69,
	0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x6e, 0x65,
	0x78, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x78, 0x6d, 0x61, 0x72, 0x6b,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x07,
	0x6e, 0x65, 0x78, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x45, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x48,
	0x00, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x73, 0x71, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x09, 0x73, 0x71, 0x6c,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x66, 0x52,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x3e, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0x57, 0x0a, 0x11, 0x54, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f,
	0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x12,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x47, 0x0a, 0x0f, 0x4b, 0x61, 0x66,
	0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x42, 0x0b, 0x0a, 0x09,
	0x73, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0d, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x53,
	0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x69,
	0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x6b, 0x73, 0x22,
	0x23, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x16, 0x47, 0x72, 0x70, 0x63, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x29, 0x0a, 0x0b,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x53, 0x69, 0x6e, 0x6b, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x75, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x65, 0x62, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x10, 0x02, 0x2a, 0x17, 0x0a, 0x0b, 0x55, 0x64, 0x66, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x75, 0x73, 0x74, 0x10, 0x00,
	0x2a, 0x4c, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66,
	0x75, 0x6c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x10, 0x04, 0x2a, 0x40,
	0x0a, 0x11, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x41, 0x5f, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x52, 0x59, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x57, 0x10, 0x02,
	0x2a, 0x4b, 0x0a, 0x0c, 0x57, 0x61, 0x73, 0x6d, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54,
	0x5f, 0x4d, 0x41, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x45, 0x59, 0x5f, 0x42, 0x59, 0x10, 0x04, 0x2a, 0x64, 0x0a,
	0x0a, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41,
	0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x41,
	0x58, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4d, 0x49, 0x4e, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x55, 0x4d, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54,
	0x45, 0x10, 0x04, 0x2a, 0x56, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55,
	0x4e, 0x55, 0x53, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x03, 0x2a, 0x26, 0x0a, 0x0a, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x41, 0x52,
	0x4c, 0x49, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x54, 0x45, 0x53,
	0x54, 0x10, 0x01, 0x2a, 0x4f, 0x0a, 0x08, 0x45, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46,
	0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x55, 0x46,
	0x46, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x4a, 0x4f,
	0x49, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4a, 0x4f,
	0x49, 0x4e, 0x10, 0x04, 0x2a, 0x2c, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x2a, 0x88, 0x01, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f,
	0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1c, 0x0a, 0x18, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x59,
	0x4e, 0x43, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x80, 0x01,
	0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x10, 0x03, 0x12, 0x07, 0x0a,
	0x03, 0x46, 0x33, 0x32, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x36, 0x34, 0x10, 0x05, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x10, 0x08,
	0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e, 0x69, 0x78, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x10, 0x09,
	0x2a, 0x2b, 0x0a, 0x0f, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x61, 0x72, 0x6c, 0x69, 0x65, 0x73, 0x74, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x10, 0x01, 0x32, 0xb9, 0x11,
	0x0a, 0x07, 0x41, 0x70, 0x69, 0x47, 0x72, 0x70, 0x63, 0x12, 0x71, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x0e,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x55, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x12,
	0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e,
	0x6b, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x69, 0x6e, 0x6b, 0x12, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0a, 0x54, 0x65,
	0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x46, 0x6f, 0x72, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f,
	0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x66, 0x12, 0x40, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f,
	0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x49, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x1d, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0f, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f,
	0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1d,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x1d,
	0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x19, 0x2e,
	0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x12, 0x18, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x72,
	0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x16, 0x2e, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x30, 0x01, 0x42, 0x80, 0x01, 0x92, 0x41, 0x51, 0x12,
	0x19, 0x0a, 0x12, 0x41, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x20, 0x52, 0x45, 0x53, 0x54, 0x66, 0x75,
	0x6c, 0x20, 0x41, 0x50, 0x49, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x6a, 0x0d, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x72,
	0x6f, 0x79, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2f, 0x61, 0x72, 0x72, 0x6f, 0x79,
	0x6f, 0x2f, 0x61, 0x72, 0x72, 0x6f, 0x79, 0x6f, 0x2d, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 129)
var file_proto_api_proto_goTypes = []interface{}{
	(BuiltinSink)(0),                       // 0: arroyo_api.BuiltinSink
	(UdfLanguage)(0),                       // 1: arroyo_api.UdfLanguage
	(StopType)(0),                          // 2: arroyo_api.StopType
	(SerializationMode)(0),                 // 3: arroyo_api.SerializationMode
	(WasmBehavior)(0),                      // 4: arroyo_api.WasmBehavior
	(Aggregator)(0),                        // 5: arroyo_api.Aggregator
	(ExpressionReturnType)(0),              // 6: arroyo_api.ExpressionReturnType
	(OffsetMode)(0),                        // 7: arroyo_api.OffsetMode
	(EdgeType)(0),                          // 8: arroyo_api.EdgeType
	(JobLogLevel)(0),                       // 9: arroyo_api.JobLogLevel
	(TaskCheckpointEventType)(0),           // 10: arroyo_api.TaskCheckpointEventType
	(PrimitiveType)(0),                     // 11: arroyo_api.PrimitiveType
	(KafkaOffsetMode)(0),                   // 12: arroyo_api.KafkaOffsetMode
	(*CreateUdf)(nil),                      // 13: arroyo_api.CreateUdf
	(*CreateSqlJob)(nil),                   // 14: arroyo_api.CreateSqlJob
	(*CreatePipelineReq)(nil),              // 15: arroyo_api.CreatePipelineReq
	(*CreatePipelineResp)(nil),             // 16: arroyo_api.CreatePipelineResp
	(*SqlError)(nil),                       // 17: arroyo_api.SqlError
	(*SqlErrors)(nil),                      // 18: arroyo_api.SqlErrors
	(*PipelineGraphReq)(nil),               // 19: arroyo_api.PipelineGraphReq
	(*PipelineGraphResp)(nil),              // 20: arroyo_api.PipelineGraphResp
	(*GetPipelineReq)(nil),                 // 21: arroyo_api.GetPipelineReq
	(*Udf)(nil),                            // 22: arroyo_api.Udf
	(*PipelineDef)(nil),                    // 23: arroyo_api.PipelineDef
	(*CreateJobReq)(nil),                   // 24: arroyo_api.CreateJobReq
	(*CreateJobResp)(nil),                  // 25: arroyo_api.CreateJobResp
	(*DeleteJobReq)(nil),                   // 26: arroyo_api.DeleteJobReq
	(*DeleteJobResp)(nil),                  // 27: arroyo_api.DeleteJobResp
	(*UpdateJobReq)(nil),                   // 28: arroyo_api.UpdateJobReq
	(*UpdateJobResp)(nil),                  // 29: arroyo_api.UpdateJobResp
	(*PipelineProgram)(nil),                // 30: arroyo_api.PipelineProgram
	(*ProgramNode)(nil),                    // 31: arroyo_api.ProgramNode
	(*ProgramEdge)(nil),                    // 32: arroyo_api.ProgramEdge
	(*Operator)(nil),                       // 33: arroyo_api.Operator
	(*FileSource)(nil),                     // 34: arroyo_api.FileSource
	(*ImpulseSource)(nil),                  // 35: arroyo_api.ImpulseSource
	(*KafkaSource)(nil),                    // 36: arroyo_api.KafkaSource
	(*EventSourceSource)(nil),              // 37: arroyo_api.EventSourceSource
	(*WasmUdfs)(nil),                       // 38: arroyo_api.WasmUdfs
	(*WasmFunction)(nil),                   // 39: arroyo_api.WasmFunction
	(*WindowOperator)(nil),                 // 40: arroyo_api.WindowOperator
	(*Window)(nil),                         // 41: arroyo_api.Window
	(*SlidingWindow)(nil),                  // 42: arroyo_api.SlidingWindow
	(*TumblingWindow)(nil),                 // 43: arroyo_api.TumblingWindow
	(*InstantWindow)(nil),                  // 44: arroyo_api.InstantWindow
	(*ExpressionAggregator)(nil),           // 45: arroyo_api.ExpressionAggregator
	(*PeriodicWatermark)(nil),              // 46: arroyo_api.PeriodicWatermark
	(*ExpressionWatermark)(nil),            // 47: arroyo_api.ExpressionWatermark
	(*KafkaSink)(nil),                      // 48: arroyo_api.KafkaSink
	(*FileSink)(nil),                       // 49: arroyo_api.FileSink
	(*NexmarkSource)(nil),                  // 50: arroyo_api.NexmarkSource
	(*ExpressionOperator)(nil),             // 51: arroyo_api.ExpressionOperator
	(*Flatten)(nil),                        // 52: arroyo_api.Flatten
	(*FlattenExpressionOperator)(nil),      // 53: arroyo_api.FlattenExpressionOperator
	(*SlidingWindowAggregator)(nil),        // 54: arroyo_api.SlidingWindowAggregator
	(*TumblingWindowAggregator)(nil),       // 55: arroyo_api.TumblingWindowAggregator
	(*TumblingTopN)(nil),                   // 56: arroyo_api.TumblingTopN
	(*SlidingAggregatingTopN)(nil),         // 57: arroyo_api.SlidingAggregatingTopN
	(*JoinWithExpiration)(nil),             // 58: arroyo_api.JoinWithExpiration
	(*GetJobsReq)(nil),                     // 59: arroyo_api.GetJobsReq
	(*GetJobsResp)(nil),                    // 60: arroyo_api.GetJobsResp
	(*JobStatusReq)(nil),                   // 61: arroyo_api.JobStatusReq
	(*JobDetailsResp)(nil),                 // 62: arroyo_api.JobDetailsResp
	(*JobStatus)(nil),                      // 63: arroyo_api.JobStatus
	(*JobStatusResp)(nil),                  // 64: arroyo_api.JobStatusResp
	(*JobDetailsReq)(nil),                  // 65: arroyo_api.JobDetailsReq
	(*JobNode)(nil),                        // 66: arroyo_api.JobNode
	(*JobEdge)(nil),                        // 67: arroyo_api.JobEdge
	(*JobGraph)(nil),                       // 68: arroyo_api.JobGraph
	(*OperatorErrorsReq)(nil),              // 69: arroyo_api.OperatorErrorsReq
	(*JobLogMessage)(nil),                  // 70: arroyo_api.JobLogMessage
	(*OperatorErrorsRes)(nil),              // 71: arroyo_api.OperatorErrorsRes
	(*TaskCheckpointEvent)(nil),            // 72: arroyo_api.TaskCheckpointEvent
	(*TaskCheckpointDetail)(nil),           // 73: arroyo_api.TaskCheckpointDetail
	(*OperatorCheckpointDetail)(nil),       // 74: arroyo_api.OperatorCheckpointDetail
	(*CheckpointOverview)(nil),             // 75: arroyo_api.CheckpointOverview
	(*JobCheckpointsReq)(nil),              // 76: arroyo_api.JobCheckpointsReq
	(*JobCheckpointsResp)(nil),             // 77: arroyo_api.JobCheckpointsResp
	(*CheckpointDetailsReq)(nil),           // 78: arroyo_api.CheckpointDetailsReq
	(*CheckpointDetailsResp)(nil),          // 79: arroyo_api.CheckpointDetailsResp
	(*Metric)(nil),                         // 80: arroyo_api.Metric
	(*SubtaskMetrics)(nil),                 // 81: arroyo_api.SubtaskMetrics
	(*JobMetricsReq)(nil),                  // 82: arroyo_api.JobMetricsReq
	(*JobMetricsResp)(nil),                 // 83: arroyo_api.JobMetricsResp
	(*KafkaConnection)(nil),                // 84: arroyo_api.KafkaConnection
	(*KafkaAuthConfig)(nil),                // 85: arroyo_api.KafkaAuthConfig
	(*NoAuth)(nil),                         // 86: arroyo_api.NoAuth
	(*SaslAuth)(nil),                       // 87: arroyo_api.SaslAuth
	(*KinesisConnection)(nil),              // 88: arroyo_api.KinesisConnection
	(*HttpConnection)(nil),                 // 89: arroyo_api.HttpConnection
	(*Connection)(nil),                     // 90: arroyo_api.Connection
	(*CreateConnectionReq)(nil),            // 91: arroyo_api.CreateConnectionReq
	(*CreateConnectionResp)(nil),           // 92: arroyo_api.CreateConnectionResp
	(*GetConnectionsReq)(nil),              // 93: arroyo_api.GetConnectionsReq
	(*GetConnectionsResp)(nil),             // 94: arroyo_api.GetConnectionsResp
	(*DeleteConnectionReq)(nil),            // 95: arroyo_api.DeleteConnectionReq
	(*DeleteConnectionResp)(nil),           // 96: arroyo_api.DeleteConnectionResp
	(*JsonSchemaDef)(nil),                  // 97: arroyo_api.JsonSchemaDef
	(*JsonFieldDef)(nil),                   // 98: arroyo_api.JsonFieldDef
	(*ProtobufSchemaDef)(nil),              // 99: arroyo_api.ProtobufSchemaDef
	(*RawJsonDef)(nil),                     // 100: arroyo_api.RawJsonDef
	(*StructType)(nil),                     // 101: arroyo_api.StructType
	(*SourceFieldType)(nil),                // 102: arroyo_api.SourceFieldType
	(*SourceField)(nil),                    // 103: arroyo_api.SourceField
	(*SourceSchema)(nil),                   // 104: arroyo_api.SourceSchema
	(*KafkaSourceConfig)(nil),              // 105: arroyo_api.KafkaSourceConfig
	(*ImpulseSourceConfig)(nil),            // 106: arroyo_api.ImpulseSourceConfig
	(*FileSourceConfig)(nil),               // 107: arroyo_api.FileSourceConfig
	(*NexmarkSourceConfig)(nil),            // 108: arroyo_api.NexmarkSourceConfig
	(*EventSourceSourceConfig)(nil),        // 109: arroyo_api.EventSourceSourceConfig
	(*EventSourceSourceDef)(nil),           // 110: arroyo_api.EventSourceSourceDef
	(*CreateSourceReq)(nil),                // 111: arroyo_api.CreateSourceReq
	(*CreateSourceResp)(nil),               // 112: arroyo_api.CreateSourceResp
	(*KafkaSourceDef)(nil),                 // 113: arroyo_api.KafkaSourceDef
	(*SourceDef)(nil),                      // 114: arroyo_api.SourceDef
	(*GetSourcesReq)(nil),                  // 115: arroyo_api.GetSourcesReq
	(*GetSourcesResp)(nil),                 // 116: arroyo_api.GetSourcesResp
	(*DeleteSourceReq)(nil),                // 117: arroyo_api.DeleteSourceReq
	(*DeleteSourceResp)(nil),               // 118: arroyo_api.DeleteSourceResp
	(*TestSchemaResp)(nil),                 // 119: arroyo_api.TestSchemaResp
	(*TestSourceMessage)(nil),              // 120: arroyo_api.TestSourceMessage
	(*SourceMetadataResp)(nil),             // 121: arroyo_api.SourceMetadataResp
	(*ConfluentSchemaReq)(nil),             // 122: arroyo_api.ConfluentSchemaReq
	(*ConfluentSchemaResp)(nil),            // 123: arroyo_api.ConfluentSchemaResp
	(*KafkaSinkConfig)(nil),                // 124: arroyo_api.KafkaSinkConfig
	(*CreateSinkReq)(nil),                  // 125: arroyo_api.CreateSinkReq
	(*CreateSinkResp)(nil),                 // 126: arroyo_api.CreateSinkResp
	(*GetSinksReq)(nil),                    // 127: arroyo_api.GetSinksReq
	(*Sink)(nil),                           // 128: arroyo_api.Sink
	(*GetSinksResp)(nil),                   // 129: arroyo_api.GetSinksResp
	(*DeleteSinkReq)(nil),                  // 130: arroyo_api.DeleteSinkReq
	(*DeleteSinkResp)(nil),                 // 131: arroyo_api.DeleteSinkResp
	(*GrpcOutputSubscription)(nil),         // 132: arroyo_api.GrpcOutputSubscription
	(*OutputData)(nil),                     // 133: arroyo_api.OutputData
	nil,                                    // 134: arroyo_api.KafkaSource.ClientConfigsEntry
	nil,                                    // 135: arroyo_api.EventSourceSource.HeadersEntry
	nil,                                    // 136: arroyo_api.KafkaSink.ClientConfigsEntry
	nil,                                    // 137: arroyo_api.OperatorCheckpointDetail.TasksEntry
	nil,                                    // 138: arroyo_api.CheckpointDetailsResp.OperatorsEntry
	(*JobMetricsResp_OperatorMetrics)(nil), // 139: arroyo_api.JobMetricsResp.OperatorMetrics
	nil,                                    // 140: arroyo_api.JobMetricsResp.MetricsEntry
	nil,                                    // 141: arroyo_api.JobMetricsResp.OperatorMetrics.SubtasksEntry
}
var file_proto_api_proto_depIdxs = []int32{
	1,   // 0: arroyo_api.CreateUdf.language:type_name -> arroyo_api.UdfLanguage
	13,  // 1: arroyo_api.CreateSqlJob.udfs:type_name -> arroyo_api.CreateUdf
	0,   // 2: arroyo_api.CreateSqlJob.builtin:type_name -> arroyo_api.BuiltinSink
	14,  // 3: arroyo_api.CreatePipelineReq.sql:type_name -> arroyo_api.CreateSqlJob
	17,  // 4: arroyo_api.SqlErrors.errors:type_name -> arroyo_api.SqlError
	13,  // 5: arroyo_api.PipelineGraphReq.udfs:type_name -> arroyo_api.CreateUdf
	68,  // 6: arroyo_api.PipelineGraphResp.job_graph:type_name -> arroyo_api.JobGraph
	18,  // 7: arroyo_api.PipelineGraphResp.errors:type_name -> arroyo_api.SqlErrors
	1,   // 8: arroyo_api.Udf.language:type_name -> arroyo_api.UdfLanguage
	22,  // 9: arroyo_api.PipelineDef.udfs:type_name -> arroyo_api.Udf
	68,  // 10: arroyo_api.PipelineDef.job_graph:type_name -> arroyo_api.JobGraph
	2,   // 11: arroyo_api.UpdateJobReq.stop:type_name -> arroyo_api.StopType
	31,  // 12: arroyo_api.PipelineProgram.nodes:type_name -> arroyo_api.ProgramNode
	32,  // 13: arroyo_api.PipelineProgram.edges:type_name -> arroyo_api.ProgramEdge
	33,  // 14: arroyo_api.ProgramNode.operator:type_name -> arroyo_api.Operator
	8,   // 15: arroyo_api.ProgramEdge.edge_type:type_name -> arroyo_api.EdgeType
	34,  // 16: arroyo_api.Operator.file_source:type_name -> arroyo_api.FileSource
	35,  // 17: arroyo_api.Operator.impulse_source:type_name -> arroyo_api.ImpulseSource
	36,  // 18: arroyo_api.Operator.kafka_source:type_name -> arroyo_api.KafkaSource
	37,  // 19: arroyo_api.Operator.event_source_source:type_name -> arroyo_api.EventSourceSource
	38,  // 20: arroyo_api.Operator.wasm_udfs:type_name -> arroyo_api.WasmUdfs
	40,  // 21: arroyo_api.Operator.window:type_name -> arroyo_api.WindowOperator
	5,   // 22: arroyo_api.Operator.aggregator:type_name -> arroyo_api.Aggregator
	46,  // 23: arroyo_api.Operator.periodic_watermark:type_name -> arroyo_api.PeriodicWatermark
	0,   // 24: arroyo_api.Operator.builtin_sink:type_name -> arroyo_api.BuiltinSink
	49,  // 25: arroyo_api.Operator.file_sink:type_name -> arroyo_api.FileSink
	41,  // 26: arroyo_api.Operator.window_join:type_name -> arroyo_api.Window
	48,  // 27: arroyo_api.Operator.kafka_sink:type_name -> arroyo_api.KafkaSink
	50,  // 28: arroyo_api.Operator.nexmark_source:type_name -> arroyo_api.NexmarkSource
	51,  // 29: arroyo_api.Operator.expression_operator:type_name -> arroyo_api.ExpressionOperator
	52,  // 30: arroyo_api.Operator.flatten:type_name -> arroyo_api.Flatten
	53,  // 31: arroyo_api.Operator.flatten_expression_operator:type_name -> arroyo_api.FlattenExpressionOperator
	54,  // 32: arroyo_api.Operator.sliding_window_aggregator:type_name -> arroyo_api.SlidingWindowAggregator
	55,  // 33: arroyo_api.Operator.tumbling_window_aggregator:type_name -> arroyo_api.TumblingWindowAggregator
	56,  // 34: arroyo_api.Operator.tumbling_top_n:type_name -> arroyo_api.TumblingTopN
	57,  // 35: arroyo_api.Operator.sliding_aggregating_top_n:type_name -> arroyo_api.SlidingAggregatingTopN
	58,  // 36: arroyo_api.Operator.join_with_expiration:type_name -> arroyo_api.JoinWithExpiration
	47,  // 37: arroyo_api.Operator.expression_watermark:type_name -> arroyo_api.ExpressionWatermark
	7,   // 38: arroyo_api.KafkaSource.offset_mode:type_name -> arroyo_api.OffsetMode
	3,   // 39: arroyo_api.KafkaSource.serialization_mode:type_name -> arroyo_api.SerializationMode
	134, // 40: arroyo_api.KafkaSource.client_configs:type_name -> arroyo_api.KafkaSource.ClientConfigsEntry
	135, // 41: arroyo_api.EventSourceSource.headers:type_name -> arroyo_api.EventSourceSource.HeadersEntry
	3,   // 42: arroyo_api.EventSourceSource.serialization_mode:type_name -> arroyo_api.SerializationMode
	39,  // 43: arroyo_api.WasmUdfs.wasm_functions:type_name -> arroyo_api.WasmFunction
	4,   // 44: arroyo_api.WasmFunction.behavior:type_name -> arroyo_api.WasmBehavior
	5,   // 45: arroyo_api.WindowOperator.aggregator:type_name -> arroyo_api.Aggregator
	45,  // 46: arroyo_api.WindowOperator.expression_aggregator:type_name -> arroyo_api.ExpressionAggregator
	41,  // 47: arroyo_api.WindowOperator.window:type_name -> arroyo_api.Window
	42,  // 48: arroyo_api.Window.sliding_window:type_name -> arroyo_api.SlidingWindow
	43,  // 49: arroyo_api.Window.tumbling_window:type_name -> arroyo_api.TumblingWindow
	44,  // 50: arroyo_api.Window.instant_window:type_name -> arroyo_api.InstantWindow
	136, // 51: arroyo_api.KafkaSink.client_configs:type_name -> arroyo_api.KafkaSink.ClientConfigsEntry
	6,   // 52: arroyo_api.ExpressionOperator.return_type:type_name -> arroyo_api.ExpressionReturnType
	6,   // 53: arroyo_api.FlattenExpressionOperator.return_type:type_name -> arroyo_api.ExpressionReturnType
	63,  // 54: arroyo_api.GetJobsResp.jobs:type_name -> arroyo_api.JobStatus
	63,  // 55: arroyo_api.JobDetailsResp.job_status:type_name -> arroyo_api.JobStatus
	68,  // 56: arroyo_api.JobDetailsResp.job_graph:type_name -> arroyo_api.JobGraph
	2,   // 57: arroyo_api.JobDetailsResp.action:type_name -> arroyo_api.StopType
	22,  // 58: arroyo_api.JobStatus.udfs:type_name -> arroyo_api.Udf
	63,  // 59: arroyo_api.JobStatusResp.job_status:type_name -> arroyo_api.JobStatus
	66,  // 60: arroyo_api.JobGraph.nodes:type_name -> arroyo_api.JobNode
	67,  // 61: arroyo_api.JobGraph.edges:type_name -> arroyo_api.JobEdge
	9,   // 62: arroyo_api.JobLogMessage.level:type_name -> arroyo_api.JobLogLevel
	70,  // 63: arroyo_api.OperatorErrorsRes.messages:type_name -> arroyo_api.JobLogMessage
	10,  // 64: arroyo_api.TaskCheckpointEvent.event_type:type_name -> arroyo_api.TaskCheckpointEventType
	72,  // 65: arroyo_api.TaskCheckpointDetail.events:type_name -> arroyo_api.TaskCheckpointEvent
	137, // 66: arroyo_api.OperatorCheckpointDetail.tasks:type_name -> arroyo_api.OperatorCheckpointDetail.TasksEntry
	75,  // 67: arroyo_api.JobCheckpointsResp.checkpoints:type_name -> arroyo_api.CheckpointOverview
	75,  // 68: arroyo_api.CheckpointDetailsResp.overview:type_name -> arroyo_api.CheckpointOverview
	138, // 69: arroyo_api.CheckpointDetailsResp.operators:type_name -> arroyo_api.CheckpointDetailsResp.OperatorsEntry
	80,  // 70: arroyo_api.SubtaskMetrics.bytes_recv:type_name -> arroyo_api.Metric
	80,  // 71: arroyo_api.SubtaskMetrics.bytes_sent:type_name -> arroyo_api.Metric
	80,  // 72: arroyo_api.SubtaskMetrics.messages_recv:type_name -> arroyo_api.Metric
	80,  // 73: arroyo_api.SubtaskMetrics.messages_sent:type_name -> arroyo_api.Metric
	80,  // 74: arroyo_api.SubtaskMetrics.backpressure:type_name -> arroyo_api.Metric
	140, // 75: arroyo_api.JobMetricsResp.metrics:type_name -> arroyo_api.JobMetricsResp.MetricsEntry
	85,  // 76: arroyo_api.KafkaConnection.auth_config:type_name -> arroyo_api.KafkaAuthConfig
	86,  // 77: arroyo_api.KafkaAuthConfig.no_auth:type_name -> arroyo_api.NoAuth
	87,  // 78: arroyo_api.KafkaAuthConfig.sasl_auth:type_name -> arroyo_api.SaslAuth
	84,  // 79: arroyo_api.Connection.kafka:type_name -> arroyo_api.KafkaConnection
	88,  // 80: arroyo_api.Connection.kinesis:type_name -> arroyo_api.KinesisConnection
	89,  // 81: arroyo_api.Connection.http:type_name -> arroyo_api.HttpConnection
	84,  // 82: arroyo_api.CreateConnectionReq.kafka:type_name -> arroyo_api.KafkaConnection
	88,  // 83: arroyo_api.CreateConnectionReq.kinesis:type_name -> arroyo_api.KinesisConnection
	89,  // 84: arroyo_api.CreateConnectionReq.http:type_name -> arroyo_api.HttpConnection
	90,  // 85: arroyo_api.GetConnectionsResp.connections:type_name -> arroyo_api.Connection
	103, // 86: arroyo_api.JsonFieldDef.fields:type_name -> arroyo_api.SourceField
	103, // 87: arroyo_api.StructType.fields:type_name -> arroyo_api.SourceField
	11,  // 88: arroyo_api.SourceFieldType.primitive:type_name -> arroyo_api.PrimitiveType
	101, // 89: arroyo_api.SourceFieldType.struct:type_name -> arroyo_api.StructType
	102, // 90: arroyo_api.SourceField.field_type:type_name -> arroyo_api.SourceFieldType
	97,  // 91: arroyo_api.SourceSchema.json_schema:type_name -> arroyo_api.JsonSchemaDef
	98,  // 92: arroyo_api.SourceSchema.json_fields:type_name -> arroyo_api.JsonFieldDef
	99,  // 93: arroyo_api.SourceSchema.protobuf:type_name -> arroyo_api.ProtobufSchemaDef
	100, // 94: arroyo_api.SourceSchema.raw_json:type_name -> arroyo_api.RawJsonDef
	89,  // 95: arroyo_api.EventSourceSourceDef.connection:type_name -> arroyo_api.HttpConnection
	104, // 96: arroyo_api.CreateSourceReq.schema:type_name -> arroyo_api.SourceSchema
	105, // 97: arroyo_api.CreateSourceReq.kafka:type_name -> arroyo_api.KafkaSourceConfig
	106, // 98: arroyo_api.CreateSourceReq.impulse:type_name -> arroyo_api.ImpulseSourceConfig
	107, // 99: arroyo_api.CreateSourceReq.file:type_name -> arroyo_api.FileSourceConfig
	108, // 100: arroyo_api.CreateSourceReq.nexmark:type_name -> arroyo_api.NexmarkSourceConfig
	109, // 101: arroyo_api.CreateSourceReq.event_source:type_name -> arroyo_api.EventSourceSourceConfig
	84,  // 102: arroyo_api.KafkaSourceDef.connection:type_name -> arroyo_api.KafkaConnection
	104, // 103: arroyo_api.SourceDef.schema:type_name -> arroyo_api.SourceSchema
	113, // 104: arroyo_api.SourceDef.kafka:type_name -> arroyo_api.KafkaSourceDef
	106, // 105: arroyo_api.SourceDef.impulse:type_name -> arroyo_api.ImpulseSourceConfig
	107, // 106: arroyo_api.SourceDef.file:type_name -> arroyo_api.FileSourceConfig
	108, // 107: arroyo_api.SourceDef.nexmark:type_name -> arroyo_api.NexmarkSourceConfig
	110, // 108: arroyo_api.SourceDef.event_source:type_name -> arroyo_api.EventSourceSourceDef
	103, // 109: arroyo_api.SourceDef.sql_fields:type_name -> arroyo_api.SourceField
	114, // 110: arroyo_api.GetSourcesResp.sources:type_name -> arroyo_api.SourceDef
	124, // 111: arroyo_api.CreateSinkReq.kafka:type_name -> arroyo_api.KafkaSinkConfig
	124, // 112: arroyo_api.Sink.kafka:type_name -> arroyo_api.KafkaSinkConfig
	128, // 113: arroyo_api.GetSinksResp.sinks:type_name -> arroyo_api.Sink
	73,  // 114: arroyo_api.OperatorCheckpointDetail.TasksEntry.value:type_name -> arroyo_api.TaskCheckpointDetail
	74,  // 115: arroyo_api.CheckpointDetailsResp.OperatorsEntry.value:type_name -> arroyo_api.OperatorCheckpointDetail
	141, // 116: arroyo_api.JobMetricsResp.OperatorMetrics.subtasks:type_name -> arroyo_api.JobMetricsResp.OperatorMetrics.SubtasksEntry
	139, // 117: arroyo_api.JobMetricsResp.MetricsEntry.value:type_name -> arroyo_api.JobMetricsResp.OperatorMetrics
	81,  // 118: arroyo_api.JobMetricsResp.OperatorMetrics.SubtasksEntry.value:type_name -> arroyo_api.SubtaskMetrics
	91,  // 119: arroyo_api.ApiGrpc.CreateConnection:input_type -> arroyo_api.CreateConnectionReq
	91,  // 120: arroyo_api.ApiGrpc.TestConnection:input_type -> arroyo_api.CreateConnectionReq
	93,  // 121: arroyo_api.ApiGrpc.GetConnections:input_type -> arroyo_api.GetConnectionsReq
	95,  // 122: arroyo_api.ApiGrpc.DeleteConnection:input_type -> arroyo_api.DeleteConnectionReq
	111, // 123: arroyo_api.ApiGrpc.CreateSource:input_type -> arroyo_api.CreateSourceReq
	115, // 124: arroyo_api.ApiGrpc.GetSources:input_type -> arroyo_api.GetSourcesReq
	117, // 125: arroyo_api.ApiGrpc.DeleteSource:input_type -> arroyo_api.DeleteSourceReq
	125, // 126: arroyo_api.ApiGrpc.CreateSink:input_type -> arroyo_api.CreateSinkReq
	127, // 127: arroyo_api.ApiGrpc.GetSinks:input_type -> arroyo_api.GetSinksReq
	130, // 128: arroyo_api.ApiGrpc.DeleteSink:input_type -> arroyo_api.DeleteSinkReq
	122, // 129: arroyo_api.ApiGrpc.GetConfluentSchema:input_type -> arroyo_api.ConfluentSchemaReq
	111, // 130: arroyo_api.ApiGrpc.GetSourceMetadata:input_type -> arroyo_api.CreateSourceReq
	111, // 131: arroyo_api.ApiGrpc.TestSchema:input_type -> arroyo_api.CreateSourceReq
	111, // 132: arroyo_api.ApiGrpc.TestSource:input_type -> arroyo_api.CreateSourceReq
	15,  // 133: arroyo_api.ApiGrpc.CreatePipeline:input_type -> arroyo_api.CreatePipelineReq
	19,  // 134: arroyo_api.ApiGrpc.GraphForPipeline:input_type -> arroyo_api.PipelineGraphReq
	21,  // 135: arroyo_api.ApiGrpc.GetPipeline:input_type -> arroyo_api.GetPipelineReq
	24,  // 136: arroyo_api.ApiGrpc.CreateJob:input_type -> arroyo_api.CreateJobReq
	26,  // 137: arroyo_api.ApiGrpc.DeleteJob:input_type -> arroyo_api.DeleteJobReq
	15,  // 138: arroyo_api.ApiGrpc.StartPipeline:input_type -> arroyo_api.CreatePipelineReq
	15,  // 139: arroyo_api.ApiGrpc.PreviewPipeline:input_type -> arroyo_api.CreatePipelineReq
	59,  // 140: arroyo_api.ApiGrpc.GetJobs:input_type -> arroyo_api.GetJobsReq
	65,  // 141: arroyo_api.ApiGrpc.GetJobDetails:input_type -> arroyo_api.JobDetailsReq
	76,  // 142: arroyo_api.ApiGrpc.GetCheckpoints:input_type -> arroyo_api.JobCheckpointsReq
	78,  // 143: arroyo_api.ApiGrpc.GetCheckpointDetail:input_type -> arroyo_api.CheckpointDetailsReq
	69,  // 144: arroyo_api.ApiGrpc.GetOperatorErrors:input_type -> arroyo_api.OperatorErrorsReq
	82,  // 145: arroyo_api.ApiGrpc.GetJobMetrics:input_type -> arroyo_api.JobMetricsReq
	28,  // 146: arroyo_api.ApiGrpc.UpdateJob:input_type -> arroyo_api.UpdateJobReq
	132, // 147: arroyo_api.ApiGrpc.SubscribeToOutput:input_type -> arroyo_api.GrpcOutputSubscription
	92,  // 148: arroyo_api.ApiGrpc.CreateConnection:output_type -> arroyo_api.CreateConnectionResp
	120, // 149: arroyo_api.ApiGrpc.TestConnection:output_type -> arroyo_api.TestSourceMessage
	94,  // 150: arroyo_api.ApiGrpc.GetConnections:output_type -> arroyo_api.GetConnectionsResp
	96,  // 151: arroyo_api.ApiGrpc.DeleteConnection:output_type -> arroyo_api.DeleteConnectionResp
	112, // 152: arroyo_api.ApiGrpc.CreateSource:output_type -> arroyo_api.CreateSourceResp
	116, // 153: arroyo_api.ApiGrpc.GetSources:output_type -> arroyo_api.GetSourcesResp
	118, // 154: arroyo_api.ApiGrpc.DeleteSource:output_type -> arroyo_api.DeleteSourceResp
	126, // 155: arroyo_api.ApiGrpc.CreateSink:output_type -> arroyo_api.CreateSinkResp
	129, // 156: arroyo_api.ApiGrpc.GetSinks:output_type -> arroyo_api.GetSinksResp
	131, // 157: arroyo_api.ApiGrpc.DeleteSink:output_type -> arroyo_api.DeleteSinkResp
	123, // 158: arroyo_api.ApiGrpc.GetConfluentSchema:output_type -> arroyo_api.ConfluentSchemaResp
	121, // 159: arroyo_api.ApiGrpc.GetSourceMetadata:output_type -> arroyo_api.SourceMetadataResp
	119, // 160: arroyo_api.ApiGrpc.TestSchema:output_type -> arroyo_api.TestSchemaResp
	120, // 161: arroyo_api.ApiGrpc.TestSource:output_type -> arroyo_api.TestSourceMessage
	16,  // 162: arroyo_api.ApiGrpc.CreatePipeline:output_type -> arroyo_api.CreatePipelineResp
	20,  // 163: arroyo_api.ApiGrpc.GraphForPipeline:output_type -> arroyo_api.PipelineGraphResp
	23,  // 164: arroyo_api.ApiGrpc.GetPipeline:output_type -> arroyo_api.PipelineDef
	25,  // 165: arroyo_api.ApiGrpc.CreateJob:output_type -> arroyo_api.CreateJobResp
	27,  // 166: arroyo_api.ApiGrpc.DeleteJob:output_type -> arroyo_api.DeleteJobResp
	25,  // 167: arroyo_api.ApiGrpc.StartPipeline:output_type -> arroyo_api.CreateJobResp
	25,  // 168: arroyo_api.ApiGrpc.PreviewPipeline:output_type -> arroyo_api.CreateJobResp
	60,  // 169: arroyo_api.ApiGrpc.GetJobs:output_type -> arroyo_api.GetJobsResp
	62,  // 170: arroyo_api.ApiGrpc.GetJobDetails:output_type -> arroyo_api.JobDetailsResp
	77,  // 171: arroyo_api.ApiGrpc.GetCheckpoints:output_type -> arroyo_api.JobCheckpointsResp
	79,  // 172: arroyo_api.ApiGrpc.GetCheckpointDetail:output_type -> arroyo_api.CheckpointDetailsResp
	71,  // 173: arroyo_api.ApiGrpc.GetOperatorErrors:output_type -> arroyo_api.OperatorErrorsRes
	83,  // 174: arroyo_api.ApiGrpc.GetJobMetrics:output_type -> arroyo_api.JobMetricsResp
	29,  // 175: arroyo_api.ApiGrpc.UpdateJob:output_type -> arroyo_api.UpdateJobResp
	133, // 176: arroyo_api.ApiGrpc.SubscribeToOutput:output_type -> arroyo_api.OutputData
	148, // [148:177] is the sub-list for method output_type
	119, // [119:148] is the sub-list for method input_type
	119, // [119:119] is the sub-list for extension type_name
	119, // [119:119] is the sub-list for extension extendee
	0,   // [0:119] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSqlJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePipelineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePipelineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineGraphReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineGraphResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPipelineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Udf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJobResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineProgram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpulseSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSourceSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WasmUdfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WasmFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindowOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Window); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlidingWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TumblingWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressionAggregator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicWatermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressionWatermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaSink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NexmarkSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressionOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flatten); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlattenExpressionOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlidingWindowAggregator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TumblingWindowAggregator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TumblingTopN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlidingAggregatingTopN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinWithExpiration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorErrorsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobLogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorErrorsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCheckpointEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCheckpointDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorCheckpointDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCheckpointsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobCheckpointsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointDetailsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubtaskMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMetricsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMetricsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaAuthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaslAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KinesisConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonSchemaDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonFieldDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtobufSchemaDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawJsonDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceFieldType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpulseSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NexmarkSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSourceSourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSourceSourceDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSourceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaSourceDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourcesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSourcesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSourceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSourceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSchemaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSourceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceMetadataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfluentSchemaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfluentSchemaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaSinkConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSinkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSinksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSinksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSinkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSinkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcOutputSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMetricsResp_OperatorMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CreateSqlJob_Builtin)(nil),
		(*CreateSqlJob_User)(nil),
	}
	file_proto_api_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreatePipelineReq_Program)(nil),
		(*CreatePipelineReq_Sql)(nil),
	}
	file_proto_api_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*PipelineGraphResp_JobGraph)(nil),
		(*PipelineGraphResp_Errors)(nil),
	}
	file_proto_api_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Operator_FileSource)(nil),
		(*Operator_ImpulseSource)(nil),
		(*Operator_KafkaSource)(nil),
		(*Operator_EventSourceSource)(nil),
		(*Operator_WasmUdfs)(nil),
		(*Operator_Window)(nil),
		(*Operator_Aggregator)(nil),
		(*Operator_PeriodicWatermark)(nil),
		(*Operator_BuiltinSink)(nil),
		(*Operator_FileSink)(nil),
		(*Operator_WindowJoin)(nil),
		(*Operator_KafkaSink)(nil),
		(*Operator_NexmarkSource)(nil),
		(*Operator_ExpressionOperator)(nil),
		(*Operator_Flatten)(nil),
		(*Operator_FlattenExpressionOperator)(nil),
		(*Operator_SlidingWindowAggregator)(nil),
		(*Operator_TumblingWindowAggregator)(nil),
		(*Operator_TumblingTopN)(nil),
		(*Operator_SlidingAggregatingTopN)(nil),
		(*Operator_JoinWithExpiration)(nil),
		(*Operator_ExpressionWatermark)(nil),
	}
	file_proto_api_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*ImpulseSource_MicrosDelay)(nil),
		(*ImpulseSource_EventQps)(nil),
	}
	file_proto_api_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*Window_SlidingWindow)(nil),
		(*Window_TumblingWindow)(nil),
		(*Window_InstantWindow)(nil),
	}
	file_proto_api_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[60].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[61].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[62].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*KafkaAuthConfig_NoAuth)(nil),
		(*KafkaAuthConfig_SaslAuth)(nil),
	}
	file_proto_api_proto_msgTypes[77].OneofWrappers = []interface{}{
		(*Connection_Kafka)(nil),
		(*Connection_Kinesis)(nil),
		(*Connection_Http)(nil),
	}
	file_proto_api_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*CreateConnectionReq_Kafka)(nil),
		(*CreateConnectionReq_Kinesis)(nil),
		(*CreateConnectionReq_Http)(nil),
	}
	file_proto_api_proto_msgTypes[89].OneofWrappers = []interface{}{
		(*SourceFieldType_Primitive)(nil),
		(*SourceFieldType_Struct)(nil),
	}
	file_proto_api_proto_msgTypes[91].OneofWrappers = []interface{}{
		(*SourceSchema_Builtin)(nil),
		(*SourceSchema_JsonSchema)(nil),
		(*SourceSchema_JsonFields)(nil),
		(*SourceSchema_Protobuf)(nil),
		(*SourceSchema_RawJson)(nil),
	}
	file_proto_api_proto_msgTypes[93].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[95].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[98].OneofWrappers = []interface{}{
		(*CreateSourceReq_Kafka)(nil),
		(*CreateSourceReq_Impulse)(nil),
		(*CreateSourceReq_File)(nil),
		(*CreateSourceReq_Nexmark)(nil),
		(*CreateSourceReq_EventSource)(nil),
	}
	file_proto_api_proto_msgTypes[101].OneofWrappers = []interface{}{
		(*SourceDef_Kafka)(nil),
		(*SourceDef_Impulse)(nil),
		(*SourceDef_File)(nil),
		(*SourceDef_Nexmark)(nil),
		(*SourceDef_EventSource)(nil),
	}
	file_proto_api_proto_msgTypes[112].OneofWrappers = []interface{}{
		(*CreateSinkReq_Kafka)(nil),
	}
	file_proto_api_proto_msgTypes[115].OneofWrappers = []interface{}{
		(*Sink_Kafka)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      13,
			NumMessages:   129,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		EnumInfos:         file_proto_api_proto_enumTypes,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
